---
layout: post
title: "FISDay0"
date: 2012-10-02 09:25
comments: true
categories: git FIS
---

*Why are we here?*

-To fall in love with code

-If you give 100% you will change.

*Programmer(s) of the day*

- [Ada Lovelace](http://www.sdsc.edu/ScienceWomen/lovelace.html)

- [Charles Babbage and the difference machine](http://en.wikipedia.org/wiki/Charles_Babbage)


*CSS Selectors*
```
#elements, #links{
 padding: 25px 0 15px 0;

}
#elements h2{
	font-size: 2em;
}
```


###Git###
```
# git remote add <remote name> <link>
â™• git remote add group git@github.com:ajonas04/etcetc.com.git
```

```
git fetch 
git co #not ever changing the state of any branch
git pull
git branch -a #shows all local branches
git branch #shows all the remotes
```
can get pull requests from forks as well as the head repo

always want to deal with potential conflicts in the feature branch rather than on master

*rebase* take these commits from master and put them in the right place of x feature branch

```
git rebase master
git co master
git merge add-profile-rexfeng --no-ff #=> merge made by recursive strategy
git push
```

If it's forked:
```
git rebase upstream/master
```

Git rainbow is not good.

squashing commits 

go into my fork as a remote
```
git remote add ajonas04 git@github.com:ajonas04/students.flatironschool.com.git
git fetch ajonas04
git co feature-push
git rebase origin/master #resolve 
git rebase --continue
```

```
git reset --hard HEAD #=> reset to the state of the repo at the last commit in the repo
git branch -D add_profile_page
```

interactive rebase
```
git rebase master -i
#provide a file that shows all the commits in it
```

no fastforward versus fastforward
-maintains the fact that you were once on your own branch

recursion and fast forward
checkout the branch

```
git add . #will ADD all files that haven't been previously committed as well as change modified files
git commit -am 'message' #will change files, but not add new ones
git commit -m 'message' #will just add a message
``` 