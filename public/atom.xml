<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Hack hack hack...]]></title>
  <link href="http://www.adamjonas.com/atom.xml" rel="self"/>
  <link href="http://www.adamjonas.com/"/>
  <updated>2013-08-08T13:40:08-04:00</updated>
  <id>http://www.adamjonas.com/</id>
  <author>
    <name><![CDATA[Adam Jonas]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[RubyMotion Alarm]]></title>
    <link href="http://www.adamjonas.com/blog/rubymotion-alarm/"/>
    <updated>2013-08-05T13:34:00-04:00</updated>
    <id>http://www.adamjonas.com/blog/rubymotion-alarm</id>
    <content type="html"><![CDATA[<h2>CocoaPods</h2>

<ul>
<li>like RubyGems for ruby</li>
<li>nice summary <a href="http://mobile.tutsplus.com/tutorials/iphone/streamlining-cocoa-development-with-cocoapods/">here</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[planes]]></title>
    <link href="http://www.adamjonas.com/blog/planes/"/>
    <updated>2013-07-01T11:11:00-04:00</updated>
    <id>http://www.adamjonas.com/blog/planes</id>
    <content type="html"><![CDATA[<h3>Devise on rails 4</h3>

<ul>
<li>http://blog.plataformatec.com.br/2013/05/devise-and-rails-4/</li>
<li><a href="http://blog.barbershoplabs.com/blog/2013/02/27/upgrading-from-rails-32-to-rails-40">upgrading from rails 3.2 to 4</a></li>
</ul>


<h3>Factory Girl</h3>

<ul>
<li>in the spec_helper remember to:

<pre><code>require 'factory_girl'
require 'factory_girl_rails'

config.use_transactional_fixtures = false
config.include FactoryGirl::Syntax::Methods
</code></pre></li>
</ul>


<h3>Patch vs. Post</h3>

<ul>
<li><a href="http://blog.remarkablelabs.com/2012/12/http-patch-verb-rails-4-countdown-to-2013">understanding patch vs. put</a></li>
</ul>


<h3>Jquery</h3>

<ul>
<li><p>make sure you wait for the jquery to load you dumbass&#8230;</p>

<p>$ ->
  $(&#8216;.balloon&#8217;).on &#8216;click&#8217;, -></p>

<pre><code>$(@).hide()
</code></pre></li>
</ul>


<p>NOT</p>

<pre><code>  $('.balloon').on 'click', -&gt;
    $(@).hide()
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ruby motion meetup]]></title>
    <link href="http://www.adamjonas.com/blog/ruby-motion-meetup/"/>
    <updated>2013-06-18T20:06:00-04:00</updated>
    <id>http://www.adamjonas.com/blog/ruby-motion-meetup</id>
    <content type="html"><![CDATA[<p>instruments for performance
  - start through Xcode and attach it to your phone
  - <a href="http://developer.apple.com/library/mac/#documentation/DeveloperTools/Conceptual/InstrumentsUserGuide/Introduction/Introduction.html">see</a></p>

<p>promotion
  - cuts down on the cocoa complexity</p>

<p>joybox
  - framework to enable games with ruby motion</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[English Tennis]]></title>
    <link href="http://www.adamjonas.com/blog/english-tennis/"/>
    <updated>2013-06-18T18:21:00-04:00</updated>
    <id>http://www.adamjonas.com/blog/english-tennis</id>
    <content type="html"><![CDATA[<h3>Active Admin</h3>

<ul>
<li>weird error was based on <a href="https://github.com/gregbell/active_admin/issues/2053">routes order</a></li>
</ul>


<h3>Heroku add key</h3>

<ul>
<li>heroku git:remote -a rolex-wimbledon</li>
</ul>


<h3>Twitter Gem</h3>

<ul>
<li>can passing in <a href="https://github.com/sferik/twitter/blob/887f72586c323a9d9750072697edf78b9d4c29ab/lib/twitter/api/timelines.rb#L43">parameters to limit the call</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Moving Spoof]]></title>
    <link href="http://www.adamjonas.com/blog/moving-spoof/"/>
    <updated>2013-05-23T11:28:00-04:00</updated>
    <id>http://www.adamjonas.com/blog/moving-spoof</id>
    <content type="html"><![CDATA[<h3>Roots</h3>

<ul>
<li>Used <a href="http://roots.cx/">roots</a> on this. Super fast. It is probably faster to prototype in roots than it would be to design it in photoshop.</li>
<li><a href="http://roots.cx/axis/">the grid</a> is easy to add to any stylesheet.</li>
</ul>


<h3>CSS Magic</h3>

<ul>
<li><a href="http://jsfiddle.net/kdFdt/8/">dog ear background</a></li>
<li><a href="http://css-tricks.com/snippets/css/css-box-shadow/">box-shadow</a></li>
</ul>


<h3>Custom twitter button</h3>

<ul>
<li><a href="http://www.webpop.com/blog/2011/02/16/add-a-custom-twitter-button-to-your-website">pop-up window trigger</a>

<ul>
<li>I did have a little trouble loading the javascript in jade, so I put it in the main coffee file</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[service objects]]></title>
    <link href="http://www.adamjonas.com/blog/service-objects/"/>
    <updated>2013-05-08T10:00:00-04:00</updated>
    <id>http://www.adamjonas.com/blog/service-objects</id>
    <content type="html"><![CDATA[<h2>rails cast #398</h2>

<h3>Modules</h3>

<ul>
<li><p>models may have lots of behavior that isn&#8217;t related, so it probably doesn&#8217;t belong in the model layer -> usually a result of pushing behavior from the controller to the model</p>

<ul>
<li>create a concerns folder that lives in the models folder

<ul>
<li>possibly namespace the module in a class folder if only used for a specific model</li>
</ul>
</li>
<li>change the autoload config path to include the concerns folder</li>
<li>include module in the model</li>
</ul>
</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#namespace in class if only going to use it in that class</span>
</span><span class='line'><span class="k">class</span> <span class="nc">User</span>
</span><span class='line'>  <span class="k">module</span> <span class="nn">Authentication</span>
</span><span class='line'>    <span class="kp">extend</span> <span class="ss">ActiveSupport</span><span class="p">:</span><span class="ss">:Concern</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#this gets scoped to the context of the class when included</span>
</span><span class='line'>    <span class="n">included</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">has_secure_password</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#this makes these class methods instead of instance methods</span>
</span><span class='line'>    <span class="k">module</span> <span class="nn">ClassMethods</span>
</span><span class='line'>      <span class="k">def</span> <span class="nf">authenticate</span><span class="p">(</span><span class="n">username</span><span class="p">,</span> <span class="n">password</span><span class="p">)</span>
</span><span class='line'>       <span class="c1">#code</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Ryan Bates&#8217; <a href="https://gist.github.com/ryanb/4172391">issues with modules</a></li>
<li><a href="http://stevenharman.net/bag-of-methods-module-and-grep-driven-development">BOMM and GDD</a></li>
<li><p><a href="http://blog.codeclimate.com/blog/2012/10/17/7-ways-to-decompose-fat-activerecord-models/">7 ways to decompose fat models</a></p></li>
<li><p><a href="http://37signals.com/svn/posts/3372-put-chubby-models-on-a-diet-with-concerns"><em>Chubby models</em>, a blog post by DHH</a></p>

<ul>
<li>in rails 4, the concerns folder will be created by default</li>
<li>&#8220;This approach to breaking up domain logic into concerns is similar in some ways to the DCI notion of Roles&#8221;</li>
</ul>
</li>
</ul>


<h3>Service Objects</h3>

<ul>
<li>we are in the habit of pushing behavior from the controller to the model, but often the behavior in the controller is nicely isolated. Sometimes we need a new kind of object commonly referred to as a <em>service object</em>.</li>
<li>the service object gets it&#8217;s own folder in the app folder and <a href="https://github.com/railscasts/398-service-objects/blob/master/auth-services/app/services/authentication.rb">looks like this</a></li>
<li>this puts all the action related behavior in one place and keeps the model focused on validations, accessibility, etc.</li>
<li><p>likely works best when we have a complex controller action that interacts with a complex model</p></li>
<li><p><strong>testing</strong>:</p>

<ul>
<li>create a services level dir and and easily test the class directly similarly to how one would test the models</li>
</ul>
</li>
<li><p><strong>Further Reading</strong></p>

<ul>
<li><a href="http://stevelorek.com/service-objects.html">Steve Lorek explains service objects</a></li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ugc aka David]]></title>
    <link href="http://www.adamjonas.com/blog/ugc-aka-david/"/>
    <updated>2013-05-06T12:07:00-04:00</updated>
    <id>http://www.adamjonas.com/blog/ugc-aka-david</id>
    <content type="html"><![CDATA[<p>It is common to create apps that heavily depend on user generated content. David is an attempt to build the prototypical user generated content app. One that we will be able to reuse in the future.</p>

<p>The structure on creating such an app was challenging for me to conceptualize. I would anticipate that we will use David most of the time for image submissions only, but juggling multiple MIME type submission is the real challenge and therefore would be the greatest benefit to solve. Given this, how should this application be structured? Should the individual types (images, videos, text, audio, etc) inherit from a centralized submission class? Should that centralized class be a module that is included in each of the individual classes? Where would one build out the features for a custom app?</p>

<p>After discussing with Kyle for a while, he decided that it was probably safest to build an add-on to CarrierWave that would accomplish this for us. This would leave the uploaders available for customization, while keeping the classes more pristine.</p>

<p>There are a whole mess of add-ons <a href="https://github.com/jnicklas/carrierwave/wiki">listed</a>.</p>

<p>Next, deciding on where this add-on would live. Should this be a gem or live in the lib folder?</p>

<h3>Mixed context processor uploading</h3>

<ul>
<li><a href="https://github.com/jnicklas/carrierwave/wiki/How-to%3A-Do-conditional-processing">how to do conditional processing</a></li>
<li><a href="https://gist.github.com/ahamid/995663">a gist</a></li>
</ul>


<h3>Adding Versions</h3>

<ul>
<li><a href="https://github.com/jnicklas/carrierwave#adding-versions">Adding versions straight from the horses mouth</a></li>
</ul>


<h3>FB SDK</h3>

<ul>
<li>so I jumped right into trying to call SDK methods without understanding how the SDK was initialized.

<ul>
<li><a href="https://developers.facebook.com/docs/reference/javascript/#loading">the documentation</a> is pretty clear, but I had just been able to call on the SDK in previous projects, so I didn&#8217;t understand what was different. Carrot-facebook had taken care of this under the hood.</li>
</ul>
</li>
</ul>


<h3>Javascript Event Listeners</h3>

<ul>
<li>excellent explanation of the difference between</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;db-chooser&quot;</span><span class="p">).</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;DbxChooserSuccess&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">someFunction</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">code</span>
</span><span class='line'>    <span class="p">},</span> <span class="kc">false</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>and</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;db-chooser&quot;</span><span class="p">).</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;DbxChooserSuccess&quot;</span><span class="p">,</span> <span class="nx">someFunction</span><span class="p">,</span> <span class="kc">false</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>which is REALLY different from:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#db-chooser&quot;</span><span class="p">).</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;DbxChooserSuccess&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">someFunction</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">alert</span><span class="p">(</span><span class="s2">&quot;this doesn&#39;t work&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">},</span> <span class="kc">false</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>I don&#8217;t have a firm handle on event listeners, but this is a good lesson to get my feet wet.</p>

<h3>Asset Path</h3>

<ul>
<li>stupid problem. I loaded a library to the vendor folder, but it wasn&#8217;t loading. I tried specifying the route even though I know that the asset pipeline picks up everything in the vendor folder.

<ul>
<li>ended up being the .min extension. Once I explicitly specified the extension (.min.js), it found it.</li>
</ul>
</li>
</ul>


<h3>Instagram</h3>

<ul>
<li>there is a <a href="https://github.com/Instagram/instagram-ruby-gem">instagram ruby gem</a> that looks very similar the <a href="https://github.com/pengwynn/">Pengwynn</a> style ruby wrappers</li>
<li>for David, I&#8217;ll be using <a href="http://mikefowler.me/instajam/">instajam</a> by Mike Fowler so that I can load the photo via javascript</li>
</ul>


<h3>Factory Girl</h3>

<ul>
<li><a href="http://robots.thoughtbot.com/post/9713995255/factorygirl-2-1-0-brings-the-heat">factory girl hooks</a></li>
<li><a href="http://icelab.com.au/articles/factorygirl-and-has-many-associations/">factory girl associations</a></li>
</ul>


<h3>Rating system</h3>

<ul>
<li><a href="http://railscasts.com/episodes/364-active-record-reputation-system">active record reputation system</a></li>
</ul>


<h3>Responds with</h3>

<ul>
<li><a href="http://stackoverflow.com/questions/6118639/rails-respond-with-how-does-it-work">solid responds with explanation</a></li>
</ul>


<h3>Pagination</h3>

<ul>
<li><a href="https://github.com/amatsuda/kaminari">kaminari</a> -> uses several partials to render the different options, need to override partials to customize the behavior. Because of this technique, Kaminari might be a wee bit slower than will_paginate. ActiveAdmin uses Kaminari.</li>
<li><a href="https://github.com/mislav/will_paginate">will_paginate</a> -> uses Ruby options to customize.</li>
</ul>


<h3>Integration Tests</h3>

<ul>
<li>with rspec

<ul>
<li>install rspec

<ul>
<li><code>rails g integration_test modelname</code></li>
</ul>
</li>
</ul>
</li>
</ul>


<h3>Copy to clipboard</h3>

<ul>
<li>it appears that the most dependable implementation is with flash. See <a href="http://www.jquery4u.com/plugins/jquery-copy-clipboard-4-options/">4 different ways</a> and ZeroClipboard(https://github.com/jonrohan/ZeroClipboard/blob/master/docs/instructions.md) which I eventually settled on. There is a nice step-by-step tutorial by <a href="http://davidwalsh.name/clipboard">David Walsh</a>.</li>
<li>put the flash file in the public folder rather than the asset path since it will remain untouched rather than serve dynamic content.</li>
</ul>


<h3>completed</h3>

<ul>
<li>one central controller with meta programmed methods to redirect to the proper path using service</li>
<li>models that inherit from a specific media type</li>
<li>override file column on submissions model -> just made it optional for text, can I make that only the case for text?</li>
<li>do for images and video what I did for text</li>
<li><p>create a whitelist of acceptable uploads per type / identify the type by the extension?</p></li>
<li><p>Facebook</p>

<ul>
<li>create credentials table with type, uid, access token, and user_id from Omniauth</li>
<li>pull photos with javascript like in oakley</li>
<li>authenticate with button and pull up a gallery of FB photos

<ul>
<li>select which one you want and store the URL</li>
</ul>
</li>
</ul>
</li>
<li>instagram gallery of photos</li>
</ul>


<p>  -testing
  - once photos selected, they need to be saved to DB under UrlSubmission
  - reassigning the token for FB auth</p>

<h3>Goals</h3>

<ul>
<li><p>understand how version works</p></li>
<li><p>testing js with jasmine</p></li>
<li><p>gallery (what&#8217;s been submitted and saved to DB)</p>

<ul>
<li>highest rated (rating system)</li>
<li>/most recent (reverse time)</li>
<li>/pagination</li>
<li><p>see friend&#8217;s photos (hold off)</p></li>
<li><p>copy url from submission show page functionality</p>

<ul>
<li>https://github.com/jonrohan/ZeroClipboard</li>
</ul>
</li>
</ul>
</li>
<li><p>rating system</p>

<ul>
<li>limit frequency</li>
<li>time gate</li>
</ul>
</li>
<li><p>winner selection lib (maybe in the end, randomly, highest rated?)</p></li>
</ul>


<h3>Deficiencies</h3>

<ul>
<li>no photo resizing thus far</li>
<li>lacks integration/JS/Ajax. limited unit tests.</li>
<li>distinguish types by white labeling extensions per type, just one white labeling group right now for all types</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fancy Specs]]></title>
    <link href="http://www.adamjonas.com/blog/fancy-specs/"/>
    <updated>2013-04-30T11:10:00-04:00</updated>
    <id>http://www.adamjonas.com/blog/fancy-specs</id>
    <content type="html"><![CDATA[<h3>Multiple content tags</h3>

<ul>
<li><a href="http://gabriel-dehan.github.io/2012/08/07/render-multiple-tags-in-a-helper/">need to concat multiple content tags</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pergola]]></title>
    <link href="http://www.adamjonas.com/blog/pergola/"/>
    <updated>2013-04-25T11:25:00-04:00</updated>
    <id>http://www.adamjonas.com/blog/pergola</id>
    <content type="html"><![CDATA[<h3>Names</h3>

<ul>
<li>Taken

<ul>
<li>ivy</li>
<li>trellis</li>
<li>grapevine</li>
<li>chlorophyll</li>
<li>vinify</li>
</ul>
</li>
</ul>


<h3>Building the gem</h3>

<ul>
<li>Ryan Bates <a href="http://railscasts.com/episodes/245-new-gem-with-bundler">you stud</a></li>
<li>create the gem with builder <strong>before</strong> you create files within it.</li>
</ul>


<h3>Removing a file from Github</h3>

<ul>
<li><code>git rm examples/all.rb</code></li>
<li><code>git rm examples/all.rb --cached</code> leaves a local version</li>
</ul>


<h3>class &lt;&lt; self</h3>

<ul>
<li>see nice stackoverflow responses <a href="http://stackoverflow.com/questions/2505067/class-self-idiom-in-ruby">here</a> and <a href="http://stackoverflow.com/questions/2567956/rails-class-self">here</a></li>
<li><a href="http://yehudakatz.com/2009/11/15/metaprogramming-in-ruby-its-all-about-the-self/">katz write up</a></li>
</ul>


<h3>Reading</h3>

<ul>
<li><a href="https://github.com/starlock/vino/wiki/API-Reference">API reference</a></li>
<li><a href="http://www.gironda.org/2013/02/25/digging-in-the-vineyard-part-1.html">Digging in the Vineyard</a></li>
</ul>


<h3>Hacking vine</h3>

<ul>
<li><p>thumbnails and videos are posted to s3, they cannot be self hosted for example, so one could repost other videos from the validated s3 bucket.</p>

<ul>
<li>thumbnails seem to be able to be hosted from anywhere&#8230;</li>
</ul>
</li>
<li><p>20 second vines.</p>

<ul>
<li><a href="http://www.addictivetips.com/ios/how-to-share-vine-videos-longer-than-6-seconds/">here</a> and <a href="http://animalnewyork.com/2013/how-to-make-a-20-second-vine/">here</a></li>
<li>this hack has been closed. They just crash the app now.</li>
</ul>
</li>
<li><p>hacking the AWS s3 bucket</p>

<ul>
<li>wonder if they can be hosted by any s3 bucket? likely not, but worth a try.</li>
</ul>
</li>
</ul>


<h3>Publishing the Gem</h3>

<ul>
<li>Used <a href="https://github.com/carrot/hw/blob/master/hw.gemspec">Hemingway</a> as a nice template.

<ul>
<li>notice he used gem instead of spec as the variable name</li>
<li>added the dependencies in the gemspec</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[calendar app 2]]></title>
    <link href="http://www.adamjonas.com/blog/calendar-app-2/"/>
    <updated>2013-04-24T12:35:00-04:00</updated>
    <id>http://www.adamjonas.com/blog/calendar-app-2</id>
    <content type="html"><![CDATA[<h3>Active Admin</h3>

<ul>
<li><a href="http://www.tomordonez.com/blog/2012/06/22/add-an-activeadmin-adminuser-through-rails-console/">creating a user through the console</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[.powconfig]]></title>
    <link href="http://www.adamjonas.com/blog/dot-powconfig/"/>
    <updated>2013-03-27T11:27:00-04:00</updated>
    <id>http://www.adamjonas.com/blog/dot-powconfig</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>.powconfig</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">eval</span> <span class="err">$</span><span class="p">(</span><span class="n">rbenv</span> <span class="n">init</span> <span class="o">-</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">export</span> <span class="no">POW_DOMAINS</span><span class="o">=</span><span class="n">dev</span><span class="p">,</span><span class="nb">test</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#because I loaded pow with brew and not manually it was a different path...</span>
</span><span class='line'><span class="n">export</span> <span class="no">PATH</span><span class="o">=</span><span class="s2">&quot;/usr/local/opt/rbenv/shims:$PATH&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">export</span> <span class="no">POW_TIMEOUT</span><span class="o">=</span><span class="mi">900</span>
</span><span class='line'><span class="n">export</span> <span class="no">POW_WORKERS</span><span class="o">=</span><span class="mi">1</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[calendar app 1]]></title>
    <link href="http://www.adamjonas.com/blog/calendar-app-1/"/>
    <updated>2013-03-26T10:17:00-04:00</updated>
    <id>http://www.adamjonas.com/blog/calendar-app-1</id>
    <content type="html"><![CDATA[<h3>Setup</h3>

<ul>
<li>added a EventTimeValidator to lib. this needed to be updated in the app config file as well so that the autoload path would pick up the changes in the lib dir.</li>
</ul>


<figure class='code'><figcaption><span>rspec tests on valdidations</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">expect</span><span class="p">(</span><span class="n">event</span><span class="p">)</span><span class="o">.</span><span class="n">to_not</span> <span class="n">be_valid</span>
</span><span class='line'><span class="n">expect</span><span class="p">(</span><span class="n">event</span><span class="o">.</span><span class="n">errors</span><span class="o">[</span><span class="ss">:end_date</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span> <span class="o">[</span><span class="s2">&quot;must be after start date&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Git global config github</h3>

<ul>
<li>needed to link email from my new macbook

<ul>
<li><a href="https://help.github.com/articles/setting-your-email-in-git">used this as a guide</a></li>
</ul>
</li>
</ul>


<h3>Uploads</h3>

<ul>
<li>we used carrierwave

<ul>
<li>remember to set multipart to true</li>
</ul>
</li>
</ul>


<h3>Extend self</h3>

<ul>
<li>from <a href="http://stackoverflow.com/a/11607912/1496757">stackoverflow</a></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">A</span>
</span><span class='line'>  <span class="k">class</span> <span class="o">&lt;&lt;</span> <span class="nb">self</span>
</span><span class='line'>    <span class="kp">include</span> <span class="n">A</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">x</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s1">&#39;x&#39;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">y</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s1">&#39;y&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">A</span><span class="o">.</span><span class="n">x</span> <span class="c1">#=&gt; &#39;x&#39;</span>
</span><span class='line'><span class="n">A</span><span class="o">.</span><span class="n">y</span> <span class="c1">#=&gt; &#39;y&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="http://ozmm.org/posts/singin_singletons.html">classic post</a></li>
</ul>


<h3>Method Stubs</h3>

<ul>
<li>A method stub is an implementation that returns a pre-determined value. Method stubs can be declared on test doubles or real objects using the same syntax.</li>
</ul>


<figure class='code'><figcaption><span>E.G.</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">book</span><span class="o">.</span><span class="n">stub</span><span class="p">(</span><span class="ss">:title</span><span class="p">)</span> <span class="p">{</span> <span class="s2">&quot;The RSpec Book&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="n">book</span><span class="o">.</span><span class="n">stub</span><span class="p">(</span><span class="ss">:title</span> <span class="o">=&gt;</span> <span class="s2">&quot;The RSpec Book&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">book</span><span class="o">.</span><span class="n">stub</span><span class="p">(</span><span class="ss">:title</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="s2">&quot;The RSpec Book&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>any_instance</h3>

<ul>
<li>stub on any instance of a class

<ul>
<li>Use <code>any_instance.stub</code> on a class to tell any instance of that class to return a value (or values) in response to a given message. If no instance receives the message, nothing happens.</li>
</ul>
</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">describe</span> <span class="s2">&quot;any_instance.stub&quot;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">it</span> <span class="s2">&quot;returns the specified value on any instance of the class&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="no">Object</span><span class="o">.</span><span class="n">any_instance</span><span class="o">.</span><span class="n">stub</span><span class="p">(</span><span class="ss">:foo</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="ss">:return_value</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">o</span> <span class="o">=</span> <span class="no">Object</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>    <span class="n">o</span><span class="o">.</span><span class="n">foo</span><span class="o">.</span><span class="n">should</span> <span class="n">eq</span><span class="p">(</span><span class="ss">:return_value</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://www.relishapp.com/rspec/rspec-mocks/v/2-6/docs/method-stubs/stub-on-any-instance-of-a-">from</a></li>
</ul>


<h3>Alias Attribute</h3>

<ul>
<li><code>alias_attribute :value, :url</code></li>
</ul>


<h3>Chop v. Chomp</h3>

<ul>
<li>subtle difference between <code>chop</code> and <code>chomp</code></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#chop</span>
</span><span class='line'><span class="s2">&quot;string</span><span class="se">\r\n</span><span class="s2">&quot;</span><span class="o">.</span><span class="n">chop</span>   <span class="c1">#=&gt; &quot;string&quot;</span>
</span><span class='line'><span class="s2">&quot;string</span><span class="se">\n\r</span><span class="s2">&quot;</span><span class="o">.</span><span class="n">chop</span>   <span class="c1">#=&gt; &quot;string\n&quot;</span>
</span><span class='line'><span class="s2">&quot;string</span><span class="se">\n</span><span class="s2">&quot;</span><span class="o">.</span><span class="n">chop</span>     <span class="c1">#=&gt; &quot;string&quot;</span>
</span><span class='line'><span class="s2">&quot;string&quot;</span><span class="o">.</span><span class="n">chop</span>       <span class="c1">#=&gt; &quot;strin&quot;</span>
</span><span class='line'><span class="s2">&quot;x&quot;</span><span class="o">.</span><span class="n">chop</span><span class="o">.</span><span class="n">chop</span>       <span class="c1">#=&gt; &quot;&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#chomp</span>
</span><span class='line'><span class="s2">&quot;hello&quot;</span><span class="o">.</span><span class="n">chomp</span>            <span class="c1">#=&gt; &quot;hello&quot;</span>
</span><span class='line'><span class="s2">&quot;hello</span><span class="se">\n</span><span class="s2">&quot;</span><span class="o">.</span><span class="n">chomp</span>          <span class="c1">#=&gt; &quot;hello&quot;</span>
</span><span class='line'><span class="s2">&quot;hello</span><span class="se">\r</span><span class="s2">&quot;</span><span class="o">.</span><span class="n">chomp</span>          <span class="c1">#=&gt; &quot;hello&quot;</span>
</span><span class='line'><span class="s2">&quot;hello </span><span class="se">\n</span><span class="s2"> there&quot;</span><span class="o">.</span><span class="n">chomp</span>   <span class="c1">#=&gt; &quot;hello \n there&quot;</span>
</span><span class='line'><span class="s2">&quot;hello&quot;</span><span class="o">.</span><span class="n">chomp</span><span class="p">(</span><span class="s2">&quot;llo&quot;</span><span class="p">)</span>     <span class="c1">#=&gt; &quot;he&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="http://ruby-doc.org/core-2.0/String.html#method-i-chop">see</a></li>
</ul>


<h3>Setting develop as the default</h3>

<ul>
<li><code>git branch --track develop origin/develop</code></li>
</ul>


<h3>Formtastic</h3>

<ul>
<li>collection groups together elements for a select box

<ul>
<li>include blank false</li>
</ul>
</li>
</ul>


<h3>Deploying</h3>

<ul>
<li>need to add new deploy instructions to .git/config file</li>
</ul>


<h3>Nano</h3>

<ul>
<li>basic text editor that appears to be pre-loaded&#8230;</li>
</ul>


<h3>Offsetting an image and a link</h3>

<ul>
<li>use padding to offset an image from its link

<ul>
<li>I use this a lot when putting an icon in front of a link</li>
<li>see <a href="http://shapeshed.com/using_background_images_with_links/">here</a> for more</li>
</ul>
</li>
</ul>


<h3>Deploying to heroku</h3>

<ul>
<li><code>git push staging develop:master</code></li>
</ul>


<h3>Each with index</h3>

<figure class='code'><figcaption><span>E.G.</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vi">@something</span><span class="o">.</span><span class="n">each_with_index</span> <span class="k">do</span> <span class="o">|</span><span class="n">thing</span><span class="p">,</span><span class="n">index</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">index</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>S3</h3>

<ul>
<li>used <a href="https://github.com/fog/fog">fog</a> to store the carrierwave uploaded images on AWS</li>
<li>needed to config heroku with the <code>heroku config:add ENV_VARIABLE=bucket-name -r staging</code> to make it work</li>
<li>in carrierwave.rb need to specify the <code>config.fog_host</code>, but this is NOT the right method. It is supposed to be <code>config.asset_host</code>

<ul>
<li>implemented via <a href="https://github.com/carrot/rolex-world-of-rolex/commit/b58dbf36c38a3932c51eeab1700ac09171cae338">this commit</a></li>
<li>and <a href="http://stackoverflow.com/questions/13041498/undefined-method-fog-host">corrected by</a>

<ul>
<li>also push the config variable via <code>heroku config:add CLOUDFRONT='&lt;cloudfront URL&gt;' -r staging</code></li>
</ul>
</li>
<li><a href="http://stackoverflow.com/questions/10777712/carrierwave-s3-how-to-specify">this post was helpful</a></li>
</ul>
</li>
</ul>


<h3>xip.io</h3>

<ul>
<li>Construct your xip.io domain by appending your application&#8217;s name to your LAN IP address followed by .xip.io. For example, if your development computer&#8217;s LAN IP address is 10.0.1.43, you can visit myapp.dev from another computer on your local network using the URL http://myapp.10.0.1.43.xip.io/. <a href="http://pow.cx/manual.html#section_2.1.5">via</a></li>
</ul>


<h3>Sweepers and caching actions</h3>

<ul>
<li><code>caches_action :index</code> is all that is needed to cache an action <a href="http://api.rubyonrails.org/classes/ActionController/Caching/Actions.html">via</a></li>
<li><code>cache_sweeper :event_sweeper</code> is added to the Events controller to trigger the sweeper&#8230;</li>
<li>Cache sweeping is a mechanism which allows you to get around having a ton of expire_{page,action,fragment} calls in your code. It does this by moving all the work required to expire cached content into an ActionController::Caching::Sweeper subclass. This class is an observer and looks for changes to an object via callbacks, and when a change occurs it expires the caches associated with that object in an around or after filter.</li>
<li><a href="http://guides.rubyonrails.org/caching_with_rails.html#sweepers">Rails Guide</a></li>
<li><p>also need to turn on <code>config.cache_store = :dalli_store, ENV['MEMCACHE_SERVERS']</code></p></li>
<li><p>In the context of ActiveAdmin</p>

<ul>
<li>We weren&#8217;t expiring the events index page, but were rather expiring the ActiveAdmin page instead. <a href="http://stackoverflow.com/questions/11600087/how-do-i-expire-home-page-cache-when-an-article-is-updated">This solved the problem</a>, but more specifically specifying the controller.

<ul>
<li>see <a href="https://github.com/carrot/rolex-world-of-rolex/commit/1a217f8b2f8e1ba49a79c2b07dab4347c30604b0">here</a></li>
</ul>
</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Another new MacBook Air load]]></title>
    <link href="http://www.adamjonas.com/blog/another-new-macbook-air-load/"/>
    <updated>2013-03-12T13:34:00-04:00</updated>
    <id>http://www.adamjonas.com/blog/another-new-macbook-air-load</id>
    <content type="html"><![CDATA[<h3>RBENV</h3>

<ul>
<li>ran into a pow issue not recognizing my gemset -> similar <a href="https://github.com/37signals/pow/issues/202">issue to the one here</a> and <a href="http://thelucid.com/2012/10/11/pow-meet-rbenv/">here</a>.

<ul>
<li>it ended up because I had installed rbenv with homebrew which meant it was in the opts directory. What a pain.</li>
</ul>
</li>
<li>the rbenv install went pretty smoothly save for that. Used [this as a guide](http://www.bounga.org/ruby/2012/02/06/pow-using-rbenv/.</li>
</ul>


<h3>PSQL</h3>

<ul>
<li><p>the install went much smoother this time. I used this <a href="http://stackoverflow.com/questions/12028037/postgres-app-could-not-start-on-port-5432/13847738#13847738">ref</a> when I ran into problems.</p></li>
<li><p><a href="http://stackoverflow.com/questions/6867401/postgres-postgresql-fatal-database-ew-dev-does-not-exist">this helped</a> on my old air&#8230; the app installed without a hitch, but I was missing the creating of the databases.</p></li>
<li><p>when the psql app wasn&#8217;t active</p>

<p>♕ psql
psql: could not connect to server: No such file or directory
  Is the server running locally and accepting
  connections on Unix domain socket &#8220;/var/pgsql_socket/.s.PGSQL.5432&#8221;?</p></li>
<li><p>after turning it on, I got this</p>

<p>♕ psql
psql: FATAL:  database &#8220;Ajonas&#8221; does not exist</p></li>
<li><p>the PATH clearly isn&#8217;t right, but by adding <code>rake db:create:all</code> I got the app to bootup.</p></li>
</ul>


<h3>Bundler and Octopress reinstall</h3>

<ul>
<li>bundler wasn&#8217;t recognized because of the different ruby version. Installed the new version and <code>gem install bundler</code> as [advised](http://stackoverflow.com/questions/7483515/rake-aborted-no-such-file-to-load-bundler-setup-rails-3-1.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[KCA 4]]></title>
    <link href="http://www.adamjonas.com/blog/kca-4/"/>
    <updated>2013-03-12T13:26:00-04:00</updated>
    <id>http://www.adamjonas.com/blog/kca-4</id>
    <content type="html"><![CDATA[<h3>Google Analytics</h3>

<ul>
<li>We passed in the <a href="https://developers.google.com/analytics/devguides/collection/gajs/eventTrackerGuide">onclick trackers</a> as <a href="http://stackoverflow.com/questions/4274002/rails-link-to-ruby-variable-in-onclick-javascript">options</a></li>
<li>This the gem we used to install the UA code in the footer, also used this for <a href="https://raw.github.com/carrot/hw-packages-private/master/google_analytics.rb?login=tmilewski&amp;token=2e0a477e5793c263c3ba48d191995233">reference</a>.</li>
</ul>


<h3>Arel</h3>

<ul>
<li>[Some cool arel queries](http://stackoverflow.com/questions/4402815/is-there-a-particularly-elegant-way-to-do-a-count-query-with-rails-3-arel.</li>
<li>used a lamba as shown <a href="http://stackoverflow.com/questions/5284696/how-can-i-search-date-range-in-rails-with-%20variable-date">here</a>, because otherwise the queries will be cached and we were running queries for a day to day basis.</li>
<li>ARel has some good <a href="https://github.com/rails/arel">documentation.</a></li>
</ul>


<h3>Local Storage</h3>

<ul>
<li>used <a href="https://github.com/marcuswestin/store.js">store.js</a></li>
<li>nice <a href="http://javascriptplayground.com/blog/2012/06/javascript-local-storage-store-js-tutorial">little screencast</a></li>
<li>here is an <a href="http://coding.smashingmagazine.com/2010/10/11/local-storage-and-how-to-use-it/">older article</a> from 2010</li>
<li><em>NOTE:</em> We ended up using <a href="https://github.com/marcuswestin/store.js/blob/master/store%2Bjson2.min.js">store.js with json</a> because ie7 apparently doesn&#8217;t come equiped with JSON. Tom and I broke our heads trying to figure out why <code>store.enabled</code> wasn&#8217;t <code>true</code> for ie7. It came down to the fact that ie7 didn&#8217;t have JSON.</li>
</ul>


<p>Thought this was a cool little way to store whether a td square had been clicked on&#8230;</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>addRedTiles: -&gt;
</span><span class='line'>  selected = store.get("board_#{@board_id}")
</span><span class='line'>
</span><span class='line'>  for tile_number in selected
</span><span class='line'>    $("[data-title-num=#{tile_number}]").addClass('clicked_space')
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>duringBoardClick: -&gt;
</span><span class='line'>  if store.enabled
</span><span class='line'>    $('td').click =&gt;
</span><span class='line'>      $(event.target).toggleClass('clicked_space')
</span><span class='line'>      clicked_tiles = []
</span><span class='line'>      all_clicked = $('td.clicked_space')
</span><span class='line'>
</span><span class='line'>      for tile in all_clicked
</span><span class='line'>        clicked_tiles.push $(tile).attr('data-title-num')
</span><span class='line'>
</span><span class='line'>      store.set("board_#{@board_id}", clicked_tiles)
</span><span class='line'>  else
</span><span class='line'>    console?.log? 'store is not enabled'</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>This needed to be updated b/c of event.targer</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">duringBoardClick</span><span class="o">:</span> <span class="o">-&gt;</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">store</span><span class="p">.</span><span class="nx">enabled</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">board_id</span> <span class="o">=</span> <span class="err">@</span><span class="nx">board_id</span>
</span><span class='line'>    <span class="err">\\</span><span class="nx">notice</span> <span class="nx">that</span> <span class="nx">I</span> <span class="nx">declared</span> <span class="nx">the</span> <span class="nx">above</span> <span class="nx">variable</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;td&#39;</span><span class="p">).</span><span class="nx">click</span> <span class="o">-&gt;</span> <span class="err">\\</span><span class="nx">and</span> <span class="nx">changed</span> <span class="k">this</span> <span class="nx">to</span> <span class="nx">a</span> <span class="nx">single</span> <span class="o">-&gt;</span>
</span><span class='line'>      <span class="nx">$</span><span class="p">(</span><span class="err">@</span><span class="p">).</span><span class="nx">toggleClass</span><span class="p">(</span><span class="s1">&#39;clicked_space&#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">clicked_tiles</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>      <span class="nx">all_clicked</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;td.clicked_space&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">for</span> <span class="nx">tile</span> <span class="k">in</span> <span class="nx">all_clicked</span>
</span><span class='line'>        <span class="nx">clicked_tiles</span><span class="p">.</span><span class="nx">push</span> <span class="nx">$</span><span class="p">(</span><span class="nx">tile</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;data-title-num&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="nx">store</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s2">&quot;board_#{board_id}&quot;</span><span class="p">,</span> <span class="nx">clicked_tiles</span><span class="p">)</span>
</span><span class='line'>      <span class="err">\\</span><span class="nx">board</span> <span class="nx">then</span> <span class="nx">becomes</span> <span class="nx">a</span> <span class="nx">local</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="nx">console</span><span class="o">?</span><span class="p">.</span><span class="nx">log</span><span class="o">?</span> <span class="s1">&#39;store is not enabled&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>I think this was the first time I used the <a href="http://stackoverflow.com/questions/7398354/in-coffeescript-how-do-you-append-a-value-to-an-array">push method</a> in coffeescript.</p>

<h3>Z-index</h3>

<ul>
<li>in order to use z-index you need to use the position absolute, relative, or fixed as mentioned <a href="http://www.w3schools.com/cssref/pr_pos_z-index.asp">here</a></li>
</ul>


<h3>SASS</h3>

<ul>
<li><code>&gt;*</code> selects all the elements in the selector</li>
</ul>


<h3>PG backups</h3>

<ul>
<li>Backing up a larger DB on heroku -> <a href="https://devcenter.heroku.com/articles/pgbackups">docs</a></li>
</ul>


<h3>Anchor in a path helper</h3>

<ul>
<li>pass it in as an option <code>redirect_to post_path(comment.post, :anchor =&gt; "comment-#{comment.id}")</code> -> <a href="http://stackoverflow.com/questions/4981029/how-do-you-use-anchors-for-ids-in-routes-in-rails-3">from</a></li>
</ul>


<h3>Regex</h3>

<ul>
<li>remember there is no whitespacing in regex

<ul>
<li><code>background_\w|clicked_space</code> not <code>background_\w | clicked_space</code></li>
</ul>
</li>
</ul>


<h3>Background images in mobile</h3>

<ul>
<li>need to make sure to explicity define the background image and background size for mobile</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[KCA 3]]></title>
    <link href="http://www.adamjonas.com/blog/kca-3/"/>
    <updated>2013-02-15T10:14:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/kca-3</id>
    <content type="html"><![CDATA[<ul>
<li><p>Everytime you clone a project you get its full history&#8230;</p>

<ul>
<li>to get a specific commit

<ul>
<li><code>$ git checkout -b aNewBranch SHA1</code> with SHA1 representing the commit id from which you want to proceed.</li>
</ul>
</li>
</ul>
</li>
<li><p>config env variables on heroku</p>

<ul>
<li><code>heroku config:add FACEBOOK_APP_TOKEN='&lt;tokenhere&gt;' --remote staging</code></li>
</ul>
</li>
<li><p><code>rake deploy:staging</code> but need to make sure staging db is up to date <code>rake db:migrate RAILS_ENV=staging</code></p></li>
<li><p>custom actions are for dream big are <a href="https://github.com/carrot/target-dream-big/blob/develop/app/controllers/facebook_controller.rb">here</a></p></li>
<li><p><code>git bisect</code> -> <a href="http://git-scm.com/book/en/Git-Tools-Debugging-with-Git">docs</a></p></li>
</ul>


<h3>Expect syntax</h3>

<ul>
<li>remember to not including whitespaces between expect and the parentheses

<ul>
<li>correct -> <code>expect(sm.current_number_of_boards).to eq 24</code></li>
<li>incorrect -> <code>expect (sm.current_number_of_boards).to eq 24</code></li>
</ul>
</li>
</ul>


<h3>Testing the cache</h3>

<ul>
<li><p>it&#8217;s not easy to test the cache.</p>

<ul>
<li>one problem is that when you write to the cache you are affecing the dev cache</li>
</ul>
</li>
<li><p>can clear the cache with <code>Rails.cache.clear</code> <a href="http://stackoverflow.com/questions/10443535/manually-clear-fragment-cache-in-rails">found here</a></p></li>
<li><p><a href="http://broadcastingadam.com/2011/05/advanced_caching_in_rails/">complicated caching</a></p></li>
</ul>


<h3>Progress bar</h3>

<ul>
<li><a href="http://stackoverflow.com/questions/7190898/progress-bar-with-html-and-css?lq=1">stackoverflow</a></li>
</ul>


<h3>HAML</h3>

<ul>
<li>partial -> <code>= render :partial =&gt; "partial_name"</code></li>
<li>yield -> <code>#masthead= yield :masthead</code></li>
<li>setting a variable in HAML -> <code>- check_mark = image_tag("http://placehold.it/21x21", class: 'check')</code> need the <code>-</code></li>
<li>submit button -> <code>%input{:type =&gt; "submit", :value =&gt; "Send", :class =&gt; "button"}</code></li>
</ul>


<figure class='code'><figcaption><span>sweet helper allows you to reduce whitespace</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">=</span> <span class="n">surround</span> <span class="s1">&#39;GiftCard&#39;</span><span class="p">,</span> <span class="s1">&#39;.&#39;</span> <span class="k">do</span>
</span><span class='line'>   <span class="o">%</span><span class="n">sup</span> <span class="o">&amp;</span><span class="n">reg</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>There are a bunch <a href="http://haml.info/docs/yardoc/Haml/Helpers.html">in the docs.</a></p>

<h3>Content_for</h3>

<figure class='code'><figcaption><span>Using content_for</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">% content_for </span><span class="ss">:not_authorized</span> <span class="k">do</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  alert(&#39;You are not authorized to do that!&#39;)</span>
</span><span class='line'><span class="sx">&lt;% end %&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#You can then use content_for :not_authorized anywhere in your templates.</span>
</span><span class='line'><span class="o">&lt;</span><span class="sx">%= content_for :not_authorized if current_user.nil? %&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sx">#This is equivalent to:</span>
</span><span class='line'><span class="sx">&lt;%=</span> <span class="k">yield</span> <span class="ss">:not_authorized</span> <span class="k">if</span> <span class="n">current_user</span><span class="o">.</span><span class="n">nil?</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="http://apidock.com/rails/ActionView/Helpers/CaptureHelper/content_for">Api-dock</a></li>
</ul>


<h3>Escaping a space</h3>

<ul>
<li><code>&amp;nbsp;</code></li>
<li><a href="9http://www.samuelhwong.com/blog/2011/09/29/quick-tip-ascii-codes-and-link-to/">ascii character in link_to</a>, just add <code>.html_safe</code></li>
</ul>


<h3>Creating or updating many records at a time in rails</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#creating new records</span>
</span><span class='line'><span class="o">[</span><span class="s2">&quot;array&quot;</span> <span class="s2">&quot;of&quot;</span> <span class="s2">&quot;strings&quot;</span><span class="o">].</span><span class="n">each_with_index</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="p">,</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>  <span class="no">Tile</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="n">t</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#updating existing records</span>
</span><span class='line'><span class="o">[</span><span class="s2">&quot;array&quot;</span> <span class="s2">&quot;of&quot;</span> <span class="s2">&quot;strings&quot;</span><span class="o">].</span><span class="n">each_with_index</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="p">,</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>  <span class="no">Tile</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">update_attribute</span><span class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="n">t</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Collection in routes</h3>

<figure class='code'><figcaption><span>Need collection to lose the id requirement</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">resources</span> <span class="ss">:superlatives</span><span class="p">,</span> <span class="ss">:only</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="ss">:create</span><span class="o">]</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">collection</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">post</span> <span class="ss">:skip</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>.length</h3>

<p>You can look for the number of instances in the DOM and update it accordingly if there are the right number. I used this when I was updating the DOM and to see if the page had 3 classes indicating that three friends had been nominated.</p>

<figure class='code'><figcaption><span>Need collection to lose the id requirement</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">if</span> <span class="err">$</span><span class="p">(</span><span class="s1">&#39;div.friend-nomination&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">length</span> <span class="o">==</span> <span class="mi">3</span>
</span><span class='line'>  <span class="n">console?</span><span class="o">.</span><span class="n">log?</span> <span class="s1">&#39;this has three&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Heroku console</h3>

<ul>
<li><code>heroku run rails console --remote &lt;name of branch&gt;</code> or <code>heroku run console -r &lt;name of branch&gt;</code> for short</li>
</ul>


<h3>CSS Positioning</h3>

<ul>
<li><a href="http://www.barelyfitz.com/screencast/html-training/css/positioning/">old but cool little reference</a></li>
</ul>


<h3>Print Stylesheets</h3>

<ul>
<li>had a problem with getting the @media print file to recognize the sass styling that I was writing. Discovered that every single element needed to be to explicitly defined for it to work&#8230;. what a pain in the ass.</li>
</ul>


<h3>JQuery Migrate</h3>

<ul>
<li> Was removed from the <a href="https://github.com/jquery/jquery-migrate/">jquery core</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Paypal integration]]></title>
    <link href="http://www.adamjonas.com/blog/paypal-integration/"/>
    <updated>2013-02-08T14:45:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/paypal-integration</id>
    <content type="html"><![CDATA[<h3>IPN</h3>

<blockquote><p>instant payment notification</p></blockquote>

<ul>
<li>Paypal will provide an asynch call made to our server from paypal to update us of the status.

<ul>
<li>this is asynch so it could take a few seconds or it could take more.</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[KCA 2]]></title>
    <link href="http://www.adamjonas.com/blog/kca-2/"/>
    <updated>2013-02-06T13:40:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/kca-2</id>
    <content type="html"><![CDATA[<h3>Heroku</h3>

<ul>
<li><code>git push staging develop:master</code></li>
</ul>


<h3>FB</h3>

<ul>
<li>target &#8216;_top&#8217; will put the new window on top</li>
<li><code>http://app.facebook.com/name-space</code></li>
<li>make sure to disable secure browsing in FB</li>
<li><p>change fields from address <code>state</code> to <code>state_loc</code> to avoid collisions with state machine gems like transitions</p></li>
<li><p>can simulate mobile with overrides in the inspector</p></li>
<li><p><code>heroku run rake db:migrate --remote staging</code></p></li>
<li><code>heroku config:add &lt;env variable&gt; &lt;env variable&gt;</code></li>
<li><p><code>heroku log --remote staging</code></p></li>
<li><p><code>.shuffle</code> method</p></li>
<li><code>.floor</code> returns an integer</li>
<li><p>if diving two integers you need to th make sure one of them is a float</p></li>
<li><p>In routes, <code>member do</code> block adds a resource on a specific record, while collect do</p></li>
<li><p>in config/application.rb in order to load libs automatically need to change config to <code>config.autoload_paths += %W(#{config.root}/lib)</code></p></li>
<li><p><code>has_mobile_fu false</code> in appcontroller, need false</p></li>
<li><p><a href="https://github.com/voxdolo/decent_exposure">decent exposure</a></p>

<ul>
<li><ul>
<li><code>expose(:articles) { current_user.articles }</code> scopes articles belonging to that user</li>
</ul>
</li>
</ul>
</li>
<li><p>output the boards on board show page, new board page, and how to play</p></li>
<li><p><a href="http://apidock.com/rails/ActionView/Helpers/TagHelper/content_tag">content tag</a></p>

<ul>
<li>need to use .html_safe</li>
</ul>
</li>
<li><p>to start memcache <code>/usr/local/opt/memcached/bin/memcached</code></p></li>
<li><p>deploy to heroku staging with <code>git push staging develop:master</code></p></li>
<li><p>creating a table with content tags in a helper</p></li>
<li><code>.update_attribute!</code> versus <code>.update_attribute</code> -> raise an exception rahter than false.</li>
</ul>


<h3>Tests</h3>

<ul>
<li>Make sure to migrate the Test DB -> <code>rake db:migrate RAILS_ENV=test</code></li>
<li><code>watchr .watchr</code></li>
<li>using <a href="http://robots.thoughtbot.com/post/23673635798/remove-duplication-with-factorygirls-traits">traits with Factory Girl</a></li>
<li><a href="http://myronmars.to/n/dev-blog/2012/06/rspecs-new-expectation-syntax">expect syntax</a></li>
<li>rake start to start spork</li>
<li>{:id => board.id}.merge(opts)</li>
</ul>


<h3>HAML</h3>

<ul>
<li><code>= f.hidden_field :customer_id, value: @customer.id</code> <a href="http://stackoverflow.com/questions/10387077/rails3-hidden-field-in-haml">from</a></li>
<li><a href="http://html2haml.heroku.com/">html to haml</a></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.shuffle.hidden
</span><span class='line'>.delete.hidden</span></code></pre></td></tr></table></div></figure>


<p>Makes divs with classes above</p>

<ul>
<li><a href="http://9elements.github.com/haml-coffee/classes/Haml.html">HAML id and class declaration</a></li>
<li>passing in partials with locals on <a href="http://stackoverflow.com/questions/5255874/rendering-partial-with-locals-in-haml">stackoverflow</a></li>
</ul>


<h3>Ajax with coffeescript</h3>

<p>Used the call below to make a friend request.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>getFriends: (callback) -&gt;
</span><span class='line'>    FB.api '/me/friends', (response) =&gt; 
</span><span class='line'>      $.each response.data, (k, v) =&gt;
</span><span class='line'>        @friends.push({ label: v.name, value: v.id })
</span><span class='line'>      callback()</span></code></pre></td></tr></table></div></figure>


<p>The callback is to ensure that other function do not proceed before the friends are loaded asynchronously.</p>

<h3>Auto-complete with JQuery UI</h3>

<ul>
<li>Got it from <a href="http://jqueryui.com/autocomplete/#custom-data">here</a></li>
<li>also loaded the js and css minified versions in the lib directory.</li>
<li>there was a small change to be made, <a href="http://stackoverflow.com/questions/9513251/cannot-set-property-renderitem-of-undefined-jquery-ui-autocomplete-with-html">documented here</a></li>
</ul>


<h3>Javascript to coffee</h3>

<ul>
<li><p><a href="http://js2coffee.org/">really cool site</a></p></li>
<li><p>Posting to a wall, note the method and the <code>:to</code> method, taken mostly from <a href="http://developers.facebook.com/docs/reference/dialogs/feed/">here</a></p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  sendMessage: (fb_uid, details = {}) -&gt;
</span><span class='line'>    obj =
</span><span class='line'>      to: fb_uid
</span><span class='line'>      method: "feed"
</span><span class='line'>      redirect_uri: "http://kca.dev"
</span><span class='line'>      link: "http://google.com"
</span><span class='line'>      picture: "http://fbrell.com/f8.jpg"
</span><span class='line'>      name: "Facebook Dialogs"
</span><span class='line'>      caption: "Reference Documentation"
</span><span class='line'>      description: "Using Dialogs to interact with users."
</span><span class='line'>
</span><span class='line'>    obj = $.extend obj, details
</span><span class='line'>
</span><span class='line'>    FB.ui obj, -&gt;
</span><span class='line'>      alert 'posted'</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p><code>= link_to "Something", some_path, :method =&gt; :post</code></p></li>
<li><p><strong>Need to remember to add () after a method call</strong></p></li>
<li>defaults to auth user if no <code>to:</code> method</li>
<li><a href="https://github.com/raganwald/homoiconic/blob/master/2012/09/lexical-scope-in-coffeescript.md">discussion on lexical scope</a></li>
</ul>


<h3>Counter_cache</h3>

<ul>
<li>In the model -> <code>belongs_to :project, :counter_cache =&gt; true</code></li>
<li><a href="http://railscasts.com/episodes/23-counter-cache-column">railscast #23</a></li>
</ul>


<h3>Jquery</h3>

<ul>
<li><code>$("div,p,span")</code> this works as a multiple selector</li>
<li><a href="http://stackoverflow.com/questions/1992114/how-do-you-create-a-hidden-div-that-doesnt-create-a-line-break-or-horizontal-sp">hidden divs</a></li>
</ul>


<h3>Selecting a winner</h3>

<ul>
<li>use the <a href="https://github.com/spilliton/randumb">randumb gem</a></li>
</ul>


<h3>Migrate test db</h3>

<ul>
<li><code>ake db:migrate RAILS_ENV=test</code></li>
</ul>


<h3>No merge message for a no-ff flag</h3>

<ul>
<li><code>--no-edit</code></li>
</ul>


<h3>FB app auto-grow</h3>

<ul>
<li><a href="http://stackoverflow.com/questions/9197411/facebook-iframe-fb-canvas-setautogrow-does-not-auto-grow-after-initial-load">auto-grow canvas in fb app</a></li>
</ul>


<h3>Gem from a git url</h3>

<ul>
<li><code>gem 'redcarpet', :git =&gt; 'git://github.com/tanoku/redcarpet.git'</code></li>
</ul>


<h3>With an options hash</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">facepile</span><span class="p">(</span><span class="o">*</span><span class="n">options</span><span class="p">)</span>
</span><span class='line'><span class="n">opts</span> <span class="o">=</span> <span class="p">{</span><span class="ss">:href</span> <span class="o">=&gt;</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;FACEBOOK_APP_URL&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>        <span class="ss">:max_rows</span> <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>        <span class="ss">:width</span> <span class="o">=&gt;</span> <span class="mi">300</span><span class="p">,</span>
</span><span class='line'>        <span class="ss">:show_count</span> <span class="o">=&gt;</span> <span class="kp">true</span> <span class="p">}</span>
</span><span class='line'><span class="n">opts</span><span class="o">.</span><span class="n">merge!</span><span class="p">(</span><span class="n">options</span><span class="o">.</span><span class="n">first</span><span class="p">)</span> <span class="k">unless</span> <span class="n">options</span><span class="o">.</span><span class="n">empty?</span>
</span><span class='line'>
</span><span class='line'><span class="k">raise</span> <span class="s2">&quot;Must provide a :url option parameter or ENV[&#39;FACEBOOK_APP_URL&#39;]&quot;</span> <span class="k">unless</span> <span class="n">opts</span><span class="o">[</span><span class="ss">:href</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="sx">%Q{</span>
</span><span class='line'><span class="sx">&lt;div class=&quot;fb-facepile&quot; </span>
</span><span class='line'><span class="sx">data-href=&quot;</span><span class="si">#{</span><span class="n">opts</span><span class="o">[</span><span class="ss">:href</span><span class="o">]</span><span class="si">}</span><span class="sx">&quot; </span>
</span><span class='line'><span class="sx">data-max-rows=&quot;</span><span class="si">#{</span><span class="n">opts</span><span class="o">[</span><span class="ss">:max_rows</span><span class="o">]</span><span class="si">}</span><span class="sx">&quot;</span>
</span><span class='line'><span class="sx">data-show-count=&quot;</span><span class="si">#{</span><span class="n">opts</span><span class="o">[</span><span class="ss">:show_count</span><span class="o">]</span><span class="si">}</span><span class="sx">&quot;</span>
</span><span class='line'><span class="sx">data-width=&quot;</span><span class="si">#{</span><span class="n">opts</span><span class="o">[</span><span class="ss">:width</span><span class="o">]</span><span class="si">}</span><span class="sx">&quot;&gt;</span>
</span><span class='line'><span class="sx">&lt;/div&gt;</span>
</span><span class='line'><span class="sx">}</span><span class="o">.</span><span class="n">html_safe</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>FB invite friends</h3>

<figure class='code'><figcaption><span>in coffeescript</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">inviteFriend</span><span class="p">:</span> <span class="o">-&gt;</span>
</span><span class='line'>  <span class="n">obj</span> <span class="o">=</span>
</span><span class='line'>    <span class="nb">method</span><span class="p">:</span> <span class="s1">&#39;apprequests&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">message</span><span class="p">:</span> <span class="s1">&#39;Come check this out&#39;</span>
</span><span class='line'>
</span><span class='line'>  <span class="no">FB</span><span class="o">.</span><span class="n">ui</span> <span class="n">obj</span><span class="p">,</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="n">alert</span> <span class="s1">&#39;invited&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Delpoy</h3>

<ul>
<li><code>rake deploy:staging</code> and <code>rake deploy:production</code></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MacPro Set Up]]></title>
    <link href="http://www.adamjonas.com/blog/macpro-set-up/"/>
    <updated>2013-02-06T13:26:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/macpro-set-up</id>
    <content type="html"><![CDATA[<ul>
<li><p>My postgres paths were screwed up. <a href="http://stackoverflow.com/questions/12028037/postgres-app-could-not-start-on-port-5432/13847738#13847738">This helped</a></p></li>
<li><p>need to install bundler for every ruby install</p></li>
<li><p>Pow path was screwed up. Need to create and set paths in <code>.powconfig</code> file.</p></li>
<li><p>needed to rm symlink for git completion per the discussion <a href="https://github.com/mxcl/homebrew/issues/16992#issuecomment-13162321">here</a></p></li>
<li><p>opens up the same terminal tab in a new window&#8230;</p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#opens new tab in same dir
</span><span class='line'>precmd () {print -Pn "\e]2; %~/ \a"}
</span><span class='line'>preexec () {print -Pn "\e]2; %~/ \a"}</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[KCA]]></title>
    <link href="http://www.adamjonas.com/blog/kca/"/>
    <updated>2013-02-05T14:37:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/kca</id>
    <content type="html"><![CDATA[<ul>
<li><code>rails g model Model attr:string{75}</code> 75 is the char limit</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Person</span><span class="o">.</span><span class="n">pluck</span><span class="p">(</span><span class="ss">:id</span><span class="p">)</span> <span class="c1"># SELECT people.id FROM people</span>
</span><span class='line'><span class="no">Person</span><span class="o">.</span><span class="n">uniq</span><span class="o">.</span><span class="n">pluck</span><span class="p">(</span><span class="ss">:role</span><span class="p">)</span> <span class="c1"># SELECT DISTINCT role FROM people</span>
</span><span class='line'><span class="no">Person</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="ss">:confirmed</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">)</span><span class="o">.</span><span class="n">limit</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span><span class="o">.</span><span class="n">pluck</span><span class="p">(</span><span class="ss">:id</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Devise -> <code>gem 'devise'</code>, then <code>rails g install devise</code></li>
<li><code>rails g devise &lt;model&gt;</code></li>
<li><code>rails g devise:views</code></li>
<li>more steps on <a href="https://github.com/carrot/hw-packages-private/blob/master/devise.rb">github</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Angular Skillshare]]></title>
    <link href="http://www.adamjonas.com/blog/angular-skillshare/"/>
    <updated>2013-02-04T19:11:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/angular-skillshare</id>
    <content type="html"><![CDATA[<h2>Single Page apps with Angular.js</h2>

<ul>
<li><a href="http://docs.angularjs.org/guide/">Angular docs</a>

<ul>
<li>looks like a templating system, but more like a lightweight framework</li>
<li>designed to be testable</li>
</ul>
</li>
</ul>


<h3>Quick ways to learn any client MVC js</h3>

<ul>
<li><a href="http://addyosmani.github.com/todomvc/">TodoMVC</a></li>
</ul>


<h3>Angular</h3>

<ul>
<li><code>ng-model</code> is a way of describing the parameters that are bound to it</li>
</ul>


<h3>Extensions</h3>

<ul>
<li><a href="https://github.com/angular/angularjs-batarang">batarang</a>

<ul>
<li><a href="http://www.youtube.com/embed/q-7mhcHXSfM">Tutorial screencast</a></li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
</feed>
