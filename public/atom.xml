<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Hack hack hack...]]></title>
  <link href="http://www.adamjonas.com/atom.xml" rel="self"/>
  <link href="http://www.adamjonas.com/"/>
  <updated>2013-01-28T10:15:07-05:00</updated>
  <id>http://www.adamjonas.com/</id>
  <author>
    <name><![CDATA[Adam Jonas]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How I got an awesome job]]></title>
    <link href="http://www.adamjonas.com/blog/how-i-got-an-awesome-job/"/>
    <updated>2013-01-25T16:19:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/how-i-got-an-awesome-job</id>
    <content type="html"><![CDATA[<h2>Code changed my life</h2>

<p>On Thursday, I was offered a job with <a href="http://carrotcreative.com/">Carrot Creative</a> in a <a href="https://github.com/ajonas04/carrotfun/pull/1">very original way</a>. I made the decision to learn how to program less than a year ago and code delivered me a mentor, an embracing community, and now, a new job.</p>

<h3>The beginnings</h3>

<p>I wrote my first line of code February of 2012 as a student in a <a href="http://www.skillshare.com/Become-a-Ruby-on-Rails-Developer-An-Intensive-5-Week-Course/962578898/250012953">Rails Skillshare class</a>. That first class was three hours focused exclusively on Rails. In the first ten minutes, I realized I was out of my depth. The teacher, <a href="https://twitter.com/aviflombaum">Avi Flombaum</a>, offered me two options: 1) I could have my money back or 2) I could continue to come back until I got it. I took his class three times.</p>

<h3>Tipping Point</h3>

<p>Inspired by guys like <a href="http://viniciusvacanti.com/2010/09/13/cant-find-a-technical-co-founder-do-it-yourself/">Vin Vacanti</a>, I knew that while it wasn&#8217;t going to be easy, I could do this. I had learned Spanish as an adult and I figured this wasn&#8217;t going to be much different. I started with the vocabulary; I wrote down the definitions of arrays, methods, blocks, hashes, arguments, accessors&#8230; Avi had to painstakingly explain all the concepts I didn&#8217;t understand, which was pretty much everything.</p>

<p>At that point, Codecademy was still very young and it wasn&#8217;t a great fit for me. Instead, I <a href="http://tryruby.org/levels/1/challenges/0">tried Ruby</a>, <a href="http://pine.fm/LearnToProgram/">learned to program</a>, leaned on <a href="http://ruby.railstutorial.org/">Michael Hartl</a>, and even resorted to the <a href="http://railsforzombies.org/">Living Dead</a>. While I learned a lot on my own, I knew it wasn&#8217;t really enough.</p>

<h3>Immersion</h3>

<p>With the summer rolling around, it was clear that in order to get to where I wanted to go I needed full-blown immersion. It just so happened that Avi was founding what eventually became the <a href="http://flatironschool.com/">The Flatiron School</a>, but back then it was called the Keyvoon Experiment. I could dedicate a lot of space to how awesome the program was, but you can just look at <a href="http://www.adamjonas.com/blog/archives">my archives</a>. I wrote down pretty much everything we covered.</p>

<h3>Get a hair cut and get a real job</h3>

<p>Since finishing the program last month, I have interviewed with more than a dozen companies. Getting interviews was easy; getting though them was humbling. I got a lot of CS questions, though I had never been introduced to a binary tree structure. Some were nice about it. Others were dismissive. In the end, it worked out. A <a href="https://hiremecarrot.herokuapp.com/">little extra-credit project</a> led to a <a href="https://github.com/ajonas04/carrotfun/pull/1">clever job offer</a>. I couldn&#8217;t be happier.</p>

<h3>WIP</h3>

<p>It takes a village to raise a coder in less than a year. Learning something entirely new can be demoralizing. I have to thank my beautiful fianc√© for the free passes to attend weekend classes and for her patience when I woke up to jot down that elusive solution which arrived during my R.E.M. cycle. I have to thank <a href="http://flatironschool.com/#people">The Flatiron School guys</a> for giving a shit.</p>

<p>Clearly, my education isn&#8217;t complete. That first day I didn&#8217;t know what a method was. Now, I don&#8217;t know what lots of things are. But just maybe I&#8217;ll make the aforementioned people proud by creating something to justify all the work that they put into me. No promises, but thanks to them, I at least have a chance.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RubyMotion Day 5]]></title>
    <link href="http://www.adamjonas.com/blog/rubymotion-day-5/"/>
    <updated>2013-01-25T09:54:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/rubymotion-day-5</id>
    <content type="html"><![CDATA[<h3>CA Animation</h3>

<ul>
<li><p>Animation family tree</p>

<ul>
<li>CA Animattion

<ul>
<li>CA Animation Group</li>
<li>CA Property Animation</li>
<li>CA Transition

<ul>
<li>CA basic animation is for linear animation</li>
<li>keyanimattion is for more specific or non-linear animation</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>Animated Properties</p>

<ul>
<li>CGColorRef -> shadowColor, borderColor</li>
<li>NSNumber (float) -> opactity, shadowRadius</li>
<li>NSVAlue (CGRect) -> bounds, contentsRect</li>
<li>NSValue (CGPoint) -> anchorPoint (is the center point for rotation), position</li>
<li>NSValue (CATransform3D) -> transform</li>
</ul>
</li>
<li><p>CATransform3d</p>

<ul>
<li>CoreGraphics is just in 2 dimensions</li>
<li>Can add a perspective column in the z column &#8211; (as opposed to just x and y planes (the 3rd column is for perspective) &#8211; to create the illusion that it is tilted back</li>
</ul>
</li>
<li><p>Easing: to control the acceleration or deceleration of the objects in the animation. This is used to simulate real life forces like friction or gravity.</p></li>
</ul>


<h2>Web Services</h2>

<ul>
<li>Synchronous URL Fetch (not recommended) -> <em>if you block the main thread, your application will freeze</em>

<ul>
<li>NSURLConnection -(request)-> NSMutableURLRequest -(URL)-> NSURL

<ul>
<li>NSURLConnection, the class of CocoaTouch to send requests to web services</li>
</ul>
</li>
</ul>
</li>
<li><p>Asynchronous URL Fetch (the one we are going to use)</p></li>
<li><p>we can block the whole app execution until the web service responds OR send the request and forget about it, avoiding blocking the app execution. Once the service responds we process the result.</p>

<ul>
<li>The later option is the right one.</li>
</ul>
</li>
<li>We send and Asynchronous request to the service using a NSOperationQueue. This block of code will be executed in a background Queue defined by the NSOperationQueue.

<ul>
<li>This block receives three parameters:

<ul>
<li>response: An object with an instance of NSURLResponse.</li>
<li>data: The response returned by the service as a NSData object.</li>
<li>error: An NSError with the error, if any, returned by the service.</li>
</ul>
</li>
</ul>
</li>
</ul>


<h3>Core Data</h3>

<ul>
<li>StoreTypes

<ul>
<li>SQlite, binary file, NOT xml formats (only available in OS10)</li>
</ul>
</li>
<li>Predicates</li>
<li>NSManagedObject

<ul>
<li>class capable of storing data for an instance of any entity.</li>
<li>access properties (attributes, relationships) via key-value coding methods (valueForKey:, setValue:forKey)</li>
</ul>
</li>
<li>Relationships

<ul>
<li>delete rule: &#8220;if an attempt is made to delete the source object&#8230;&#8221;

<ul>
<li>nullify (the inverse relationship)</li>
<li>deny (if any destination relationships)</li>
<li>cascade (delete any destination relationships, too) -> <em>very dangeous</em></li>
<li>No action</li>
</ul>
</li>
</ul>
</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="c1"># In Core Data we can have relationship between objects, so lets add one</span>
</span><span class='line'>  <span class="c1"># to the Director Object</span>
</span><span class='line'>  <span class="vi">@relationships</span> <span class="o">||=</span> <span class="o">[</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># IMPORTANT: In Core Data is required to have a circular relationships between</span>
</span><span class='line'>    <span class="c1"># the two objects. In these case we are adding a Relationship from Movie to Director</span>
</span><span class='line'>    <span class="c1"># but also we will need one from Director to Movie, these relationship is called Inverse</span>
</span><span class='line'>    <span class="c1"># Relationship</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># Relationship Name, Relationship Class, Inverse Relationship, Is Optional, Is Indexed,</span>
</span><span class='line'>    <span class="c1"># Is Ordered, Min Count, Max Count, Delete Rule</span>
</span><span class='line'>    <span class="o">[</span><span class="s1">&#39;director&#39;</span><span class="p">,</span> <span class="s1">&#39;Director&#39;</span><span class="p">,</span> <span class="s1">&#39;movie&#39;</span><span class="p">,</span> <span class="kp">true</span><span class="p">,</span> <span class="kp">false</span><span class="p">,</span> <span class="kp">true</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="no">NSNullifyDeleteRule</span><span class="o">]</span>
</span><span class='line'>  <span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>The relationships in Core Data are circular, what these means is that if we want to create a relationship from Movie to Director we also need another one from Director to Movie.</li>
</ul>


<h3>Debugger</h3>

<ul>
<li>rake debug=1, backtrace (or bt), fr <number>

<ul>
<li>n to step to the next line in the file</li>
<li>quit to quit.</li>
</ul>
</li>
</ul>


<h3>3rd Party Libs</h3>

<ul>
<li>CorePlot -> to build graphs</li>
</ul>


<h3>Wrappers</h3>

<ul>
<li>[formotion](https://github.com/clayallsopp/formotion -> to easily create complex forms</li>
<li><a href="https://github.com/clayallsopp/formotion">walt</a> -> wrapper of core animation</li>
<li><a href="https://github.com/clayallsopp/formotion">teacup</a> -> pretty much create a stylesheet for the views</li>
<li><a href="https://github.com/clayallsopp/formotion">sugarcube</a> -> redefining methods to be more semantic</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RubyMotion Day 5]]></title>
    <link href="http://www.adamjonas.com/blog/rubymotion-day-5/"/>
    <updated>2013-01-25T09:54:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/rubymotion-day-5</id>
    <content type="html"><![CDATA[<h3>CA Animation</h3>

<pre><code>- Animation family tree
    - CA Animattion
        - CA Animation Group    
        - CA Property Animation
        - CA Transition
            - CA basic animation is for linear animation
            - keyanimattion is for more specific or non-linear animation


- Animated Properties
    - CGColorRef -&gt; shadowColor, borderColor
    - NSNumber (float) -&gt; opactity, shadowRadius
    - NSVAlue (CGRect) -&gt; bounds, contentsRect
    - NSValue (CGPoint) -&gt; anchorPoint (is the center point for rotation), position
    - NSValue (CATransform3D) -&gt; transform

- CATransform3d
    - CoreGraphics is just in 2 dimensions
    - Can add a perspective column in the z column -- (as opposed to just x and y planes (the 3rd column is for perspective) -- to create the illusion that it is tilted backs
    -  

- Easing
&gt;Easing means to control the acceleration or deceleration of the objects in the animation. This is used to simulate real life forces like friction or gravity.
</code></pre>

<h2>Web Services</h2>

<pre><code>- Synchronous URL Fetch (not recommended) -&gt; *if you block the main thread, your application will freeze*
    - NSURLConnection -(request)-&gt; NSMutableURLRequest -(URL)-&gt; NSURL
        - NSURLConnection, the class of CocoaTouch to send requests to web services
-  Asynchronous URL Fetch (the one we are going to use)

- we can block the whole app execution until the web service responds OR send the request and forget about it, avoiding blocking the app execution. Once the service responds we process the result.
    - The later option is the right one.
- We send and Asynchronous request to the service using a NSOperationQueue. This block of code will be executed in a background Queue defined by the NSOperationQueue.
        - This block receives three parameters:
            - response: An object with an instance of NSURLResponse.
            - data: The response returned by the service as a NSData object.
            - error: An NSError with the error, if any, returned by the service.
</code></pre>

<h3>Core Data</h3>

<pre><code>- StoreTypes
    - SQlite, binary file, NOT xml formats (only available in OS10)
- Predicates
- NSManagedObject
    - class capable of storing data for an instance of any entity.
    - access properties (attributes, relationships) via key-value coding methods (valueForKey:, setValue:forKey)
- Relationships
    - delete rule: "if an attempt is made to delete the source object..."
        - nullify (the inverse relationship)
        - deny (if any destination relationships)
        - cascade (delete any destination relationships, too) -&gt; *very dangeous*
        - No action
</code></pre>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="c1"># In Core Data we can have relationship between objects, so lets add one</span>
</span><span class='line'>  <span class="c1"># to the Director Object</span>
</span><span class='line'>  <span class="vi">@relationships</span> <span class="o">||=</span> <span class="o">[</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># IMPORTANT: In Core Data is required to have a circular relationships between</span>
</span><span class='line'>    <span class="c1"># the two objects. In these case we are adding a Relationship from Movie to Director</span>
</span><span class='line'>    <span class="c1"># but also we will need one from Director to Movie, these relationship is called Inverse</span>
</span><span class='line'>    <span class="c1"># Relationship</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># Relationship Name, Relationship Class, Inverse Relationship, Is Optional, Is Indexed,</span>
</span><span class='line'>    <span class="c1"># Is Ordered, Min Count, Max Count, Delete Rule</span>
</span><span class='line'>    <span class="o">[</span><span class="s1">&#39;director&#39;</span><span class="p">,</span> <span class="s1">&#39;Director&#39;</span><span class="p">,</span> <span class="s1">&#39;movie&#39;</span><span class="p">,</span> <span class="kp">true</span><span class="p">,</span> <span class="kp">false</span><span class="p">,</span> <span class="kp">true</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="no">NSNullifyDeleteRule</span><span class="o">]</span>
</span><span class='line'>  <span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<pre><code>- The relationships in Core Data are circular, what these means is that if we want to create a relationship from Movie to Director we also need another one from Director to Movie.
</code></pre>

<h3>Debugger</h3>

<pre><code>- rake debug=1, backtrace (or bt), fr &lt;number&gt;
    - n to step to the next line in the file
    - quit to quit.
</code></pre>

<h3>3rd Party Libs</h3>

<pre><code>- CorePlot -&gt; to build graphs
</code></pre>

<h3>Wrappers</h3>

<pre><code>- [formotion](https://github.com/clayallsopp/formotion -&gt; to easily create complex forms
- [walt](https://github.com/clayallsopp/formotion) -&gt; wrapper of core animation
-   [teacup](https://github.com/clayallsopp/formotion) -&gt; pretty much create a stylesheet for the views
- [sugarcube](https://github.com/clayallsopp/formotion) -&gt; redefining methods to be more semantic
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ember.js Meetup]]></title>
    <link href="http://www.adamjonas.com/blog/ember-dot-js-meetup/"/>
    <updated>2013-01-25T09:48:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/ember-dot-js-meetup</id>
    <content type="html"><![CDATA[<p>Watch router v2 video. Seattle.
  - <a href="http://www.youtube.com/watch?v=_6yMxU-_ARs">Tom Dale on Ember Data</a>
  - <a href="http://www.youtube.com/watch?v=4Ed_o3_59ME">Yahuda Katz on the router</a>
  - <a href="https://gist.github.com/3981133">Guide to the router is here</a></p>

<p>Log _transitions = true. Lets you see the log with the new router.</p>

<p>Emblem.js. compiles down to handlebars but has lots of syntactic sugar. Its just a parser.</p>

<p>Dependency injection is giving instance variables to an object.</p>

<ul>
<li><a href="https://github.com/emberjs-addons/ember-bootstrap">Ember Bootstrap</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RubyMotion Day 4]]></title>
    <link href="http://www.adamjonas.com/blog/rubymotion-day-4/"/>
    <updated>2013-01-24T09:58:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/rubymotion-day-4</id>
    <content type="html"><![CDATA[<h3>Auto-rotation in View Controller</h3>

<h3>Notifications</h3>

<h3>File Structure</h3>

<ul>
<li>the RubyMotion compiler recursively checks all the file directories and adds the files. If I brake out a method it will find it and I don&#8217;t need to wrap it in a class or anything in the other file.</li>
</ul>


<h3>Variables</h3>

<ul>
<li>always want to use the sdk_version</li>
<li>the deployment_target is the lowest version of the iOS device that you want to run on

<ul>
<li>in the app delegate file I can set the deployment target to <code>app.deployment_target = 5.1</code></li>
<li><code>rake target=5.1</code> launches the device in the specified iOS

<ul>
<li>check the device with <code>UIDevice.currentDevice.systemVersion</code></li>
</ul>
</li>
</ul>
</li>
</ul>


<h3>States</h3>

<ul>
<li><a href="http://developer.apple.com/library/ios/#documentation/iphone/conceptual/iphoneosprogrammingguide/ManagingYourApplicationsFlow/ManagingYourApplicationsFlow.html">Apple Explains States and Multi-tasking</a></li>
</ul>


<h3>CA Layers</h3>

<blockquote><p>The CALayer class manages image-based content and allows you to perform animations on that content <a href="The%20CALayer%20class%20manages%20image-based%20content%20and%20allows%20you%20to%20perform%20animations%20on%20that%20content">See Apple Docs</a></p></blockquote>

<ul>
<li><p>can create a tree structure for CA Layers just like you can create a tree structure for controllers and views</p></li>
<li><p>Using the REPL to play with the layers p. 138</p></li>
<li><p>We are using gradients in Chapter 20 p. 141-42.</p></li>
<li><p><code>addSublayer(grass_layer)</code> is for adding on top of an inserted sublayer</p></li>
</ul>


<h3>Bug with Objective-c array</h3>

<ul>
<li>ran into another instance of when the compiler breaks on an objective-c array. This happened on the first day as well. Need to pay attention to this.

<ul>
<li>the steps to debug are: <code>rake debug=1</code>, then <code>backtrace</code>, lower-case <code>quit</code> to quit the debugger</li>
</ul>
</li>
</ul>


<h3>Deploy to your device</h3>

<ul>
<li><code>rake device</code> will deploy it to the device</li>
<li><code>rake device debug=1</code> will deploy with a debugger</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RubyMotion Day 3]]></title>
    <link href="http://www.adamjonas.com/blog/rubymotion-day-3/"/>
    <updated>2013-01-23T10:27:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/rubymotion-day-3</id>
    <content type="html"><![CDATA[<h2>UIViewControllers</h2>

<blockquote><p>a view controller manages a set of views that makes up a portion of your app&#8217;s user interface.</p></blockquote>

<ul>
<li>UIViewController:

<ul>
<li>sends data to NSArray</li>
<li>sends view to UIView</li>
<li>sends a target to UIButton</li>
<li>Receives a delegate from UITextField</li>
</ul>
</li>
</ul>


<h3>UITabBarController</h3>

<ul>
<li>common to use that as the main controller</li>
<li>this controls the display of the main screen</li>
</ul>


<h3>UITabBarItem</h3>

<ul>
<li>displays the tab buttons in the along the top or bottom</li>
</ul>


<h2>TableViews</h2>

<ul>
<li>Very flexible</li>
<li>Uses the delegate pattern

<ul>
<li>UITableViewController is a controller object that manages a table view.

<ul>
<li>when the table view is about to appear the first time it&#8217;s loaded, it reloads the table view&#8217;s data</li>
<li>whent he table view has appeared, the controller flashes the tbale view&#8217;s scroll indicators</li>
</ul>
</li>
</ul>
</li>
<li><p>inherits from the view controller adn dispays the table view cells</p></li>
<li><p>supports different kinds of layouts</p>

<ul>
<li>plain</li>
<li>grouped -> Like the ones you can find in the Settings app of an iPhone.</li>
</ul>
</li>
<li><p>the UITableView has subviews that will contain the cells</p></li>
<li><p>Data sources</p>

<ul>
<li>special type of delegate
used by the tableView in order to get info needed to display

<ul>
<li><h1>of rows, etc</h1></li>
</ul>
</li>
</ul>
</li>
<li><p>like tabs this is set in the app delegate</p></li>
<li><p>when you have data that is more than will fit on the screen, you probably only need to create 9 or so cells and then you can send in the data to fit in those cells. Loading 50 cells will make the interface very slow.</p>

<ul>
<li>We reuse the cells with <em>dequeue</em> like <code>tableView.dequeueReusableCellWithIdentifier(NEWS_CELL_REUSE_ID)</code></li>
<li>Only if the table view can not find a cached cell with that identifier, we build it: <code>UITableViewCell.alloc.initWithStyle(UITableViewCellStyleSubtitle, reuseIdentifier: NEWS_CELL_REUSE_ID)</code></li>
</ul>
</li>
<li><p>System Cell Types</p>

<ul>
<li>four kinds provided by apple</li>
<li>can also create your own cells</li>
</ul>
</li>
<li><p><em>creating custom tableviews is a good example of using when to use Interface Builder.</em></p></li>
<li><p><code>viewWillAppear</code> method will be called every time the view is shown</p></li>
<li><p><code>initWithStyle:</code> This is the initializer method used to create instances of UITableViewController</p></li>
<li><p><code>p.list files</code> are Property list files -> files that store serialized objects</p>

<ul>
<li>Objective-C supports these files natively</li>
</ul>
</li>
<li><p>Animation for adding or deleting a cell with:</p></li>
</ul>


<figure class='code'><figcaption><span>Animation for deleting and inserting</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#to delete</span>
</span><span class='line'>  <span class="nb">self</span><span class="o">.</span><span class="n">tableView</span><span class="o">.</span><span class="n">deleteRowsAtIndexPaths</span><span class="p">(</span><span class="o">[</span><span class="n">selected_cell_index_path</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>    <span class="n">withRowAnimation</span><span class="ss">:UITableViewRowAnimationMiddle</span><span class="p">)</span>
</span><span class='line'><span class="c1">#to insert</span>
</span><span class='line'>  <span class="nb">self</span><span class="o">.</span><span class="n">tableView</span><span class="o">.</span><span class="n">insertRowsAtIndexPaths</span><span class="p">(</span><span class="o">[</span><span class="n">index_path</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>    <span class="n">withRowAnimation</span><span class="ss">:UITableViewRowAnimationRight</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Custom Cells</h3>

<ul>
<li>Need UITableViewCell as the super class</li>
</ul>


<h2>Navigation Controllers</h2>

<ul>
<li><p>very similar to TabBarControllers, but like a chain of views.</p>

<ul>
<li>when you have a master, detail relationship you should use a Navigation controller

<ul>
<li>you get a back button for free!</li>
</ul>
</li>
</ul>
</li>
<li><p>can use CoreAnimation to create your own animation instead of using the standard transition.</p></li>
<li><p>A Navigation Bar can only have two buttons, one to the left and one to right. T</p></li>
<li>The buttons should be instances of UIBarButtonItem not of UIButton.</li>
</ul>


<h3>Dirty Views</h3>

<ul>
<li>needed to update a view -> <code>@receiver.setNeedsDisplay</code></li>
</ul>


<h2>A ruby aside</h2>

<figure class='code'><figcaption><span>&#8216;not&#8217; examples</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="o">!</span> <span class="n">me</span>
</span><span class='line'>  <span class="ow">not</span> <span class="n">me</span>
</span><span class='line'>  <span class="n">i</span> <span class="o">!=</span> <span class="n">you</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#in the wild</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">isFormValid</span>
</span><span class='line'>    <span class="ow">not</span> <span class="vi">@email_textfield</span><span class="o">.</span><span class="n">text</span><span class="o">.</span><span class="n">empty?</span> <span class="ow">and</span> <span class="ow">not</span> <span class="vi">@password_textfield</span><span class="o">.</span><span class="n">text</span><span class="o">.</span><span class="n">empty?</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RubyMotion Day 2]]></title>
    <link href="http://www.adamjonas.com/blog/rubymotion-day-2/"/>
    <updated>2013-01-22T09:41:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/rubymotion-day-2</id>
    <content type="html"><![CDATA[<ul>
<li>Cocoa touch is the high-level Objective C programming API for iOS.</li>
</ul>


<h3>What is a framework</h3>

<ul>
<li>a collection of classes that are intended to be used together. That is, the classes are compiled together into a reusable library of code (static or dynamic).</li>
<li>The framework can define versions</li>
</ul>


<h3>Other Frameworks</h3>

<ul>
<li>CoreData</li>
<li>CoreLocation -> framework that allows you to access the geo location and heading of the device</li>
<li>MapKit -> provides an interface to embed maps into your applications as well as other advanced functionality such as adding custom annotations, reverse-geocoding lookups, etc.</li>
<li>CoreGraphics</li>
<li>GameKit</li>
</ul>


<h3>MVC/MVP</h3>

<ul>
<li>The presenter is more responsible in RubyMotion than in traditional MVC

<ul>
<li>model still a good place to abstract logic from the controller</li>
</ul>
</li>
</ul>


<h2>Callbacks</h2>

<blockquote><p>Callbacks are methods or functions that are invoked when something happens</p>

<pre><code>- Target-action -&gt; send one message to another object
- Delegates -&gt; send more than one message to another object
- Notifications -&gt; many to many. Send a message to 10-15 objects. The most flexible, but also the most dangerous.
</code></pre></blockquote>

<ul>
<li><p>Target-Action</p>

<ul>
<li>NSButton sends a target to TimeZoneController

<ul>
<li>(make sure to include the colon (:) )</li>
</ul>
</li>
</ul>
</li>
<li><p>Delegates</p>

<ul>
<li>NSTableView -> delegate -> MyClass</li>
</ul>
</li>
<li><p>Notifications</p>

<ul>
<li>NSNotifcationCenter is the class we use when we send or receive notifications

<ul>
<li>posting -> send a notification</li>
</ul>
</li>
</ul>
</li>
</ul>


<h3>UIApplication and AppDelegate</h3>

<ul>
<li>UIApplicaiton class provides a centralized point of control and coordination for apps running on iOS. Every app must have exactly one instance of UIApplication</li>
<li>app delegate is an object created at app launch time, usually by the UIApplicatioMAin function. Its primary job is to handle state transitions within the app. e.g. this object is responsible for launch-time initialization.</li>
</ul>


<h3>App Delegate</h3>

<ul>
<li>the app delegate class are optional

<ul>
<li>e.g. application:didFinishLaunchingWIthOptions: &amp; applicationDidBecomeActive:</li>
</ul>
</li>
</ul>


<h3>nib files</h3>

<ul>
<li>A nib file is a data archive that essentially contains a set of freeze-dried objects that you want to recreate at runtime. Nib files are used most commonly to store preconfigured windows, views, and other visually oriented objects but they can also store non-visual objects such as controllers.

<ul>
<li>nib files originate from NeXt</li>
</ul>
</li>
</ul>


<h3>Initializers</h3>

<ul>
<li>Objective-C uses init* methods to initialize new instances</li>
<li>A class can have zero or more initializers</li>
<li>One initializer is the &#8220;Designated&#8221; -> this does all the heavy work and all other will call this one.</li>
<li>All initializers in the same class must call the designated initializer</li>
<li>The designed initializer must call the superclass&#8217;s designed initializer</li>
</ul>


<h3>Overwriting Initializers</h3>

<ul>
<li>If you override the initializer you need to return self

<ul>
<li>This is very important</li>
</ul>
</li>
</ul>


<h3>Alloc and init</h3>

<ul>
<li>alloc is a static method and init is an instance method</li>
</ul>


<figure class='code'><figcaption><span>connects the UIButton to our controller</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="n">sign_in_button</span><span class="o">.</span><span class="n">addTarget</span><span class="p">(</span><span class="nb">self</span><span class="p">,</span>
</span><span class='line'>                          <span class="n">action</span><span class="ss">:&#39;sign_in:&#39;</span><span class="p">,</span>
</span><span class='line'>                          <span class="n">forControlEvents</span><span class="ss">:UIControlEventTouchUpInside</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Core Location</h2>

<ul>
<li>CLLocationManager</li>
<li>CLLocation</li>
</ul>


<h3>iOS Location</h3>

<ul>
<li><p>an iOS device can use up to 3 ways to determine its location (from best to worst accuracy):</p>

<ul>
<li>GPS. For devices with that functionality such as iPhones or iPads with GSM/LTE.

<ul>
<li>for navigation or running apps, but high battery consumption</li>
</ul>
</li>
<li>Cell towers triangulation. For devices with GSM/LTE.</li>
<li>WiFi hotspots.</li>
</ul>
</li>
<li><p>KCLLocationAccuracyBest -> Drains the battery</p></li>
<li>KCLLocationAccuracyThreeKilometeres -> doesn&#8217;t check all that often</li>
</ul>


<h3>MKMapView</h3>

<ul>
<li>MKMapTypeStandard. Displays a street map that shows the position of all roads and some road names.</li>
<li>MKMapTypeSatellite. Displays satellite imagery of the area.</li>
<li>MKMapTypeHybrid. Displays a satellite image of the area with road and road name information layered on top.</li>
</ul>


<h3>MapKit</h3>

<ul>
<li>MapKit uses a special structure called MKCoordinateRegion

<ul>
<li>has a CLLocationCoordinate2D  a structure which latitude and longitude values</li>
<li>and a MKCoordinateSpan, that represents the amount of map to display in the vertical and horizontal space. You can see this Span as the zoom that the map will have.</li>
</ul>
</li>
<li><p>To add a pin Annotations in MapKit you need to add an Annotation in Objective-C by creating a class that explicitly implements the MKAnnotation protocol.</p>

<ul>
<li>In RubyMotion you only need to create a class with the same methods defined in the protocol. These methods are:

<ul>
<li><em>coordinate</em>. Returns a CLLocationCoordinate</li>
<li><em>title.</em> NSString with the main title of the Annotation.</li>
<li><em>subtitle.</em> Optional, returns an NSString with the subtitle of the annotation.</li>
</ul>
</li>
</ul>
</li>
<li><p>MKAnnotion</p>

<ul>
<li>is a protocol</li>
</ul>
</li>
</ul>


<h2>UIVIEWS</h2>

<ul>
<li>responsible for how to draw themselves

<ul>
<li>can use coreGraphics to draw very complicated things</li>
</ul>
</li>
<li>knowing its subviews</li>
<li><p>accepting interaction</p></li>
<li><p>if you don&#8217;t specify a view, the system will create one for you.</p></li>
</ul>


<h3>Frames and bounds</h3>

<ul>
<li>all the dimensions are in points, not pixals (not affected by the definition of the device)</li>
<li>some APIs need bounds, while others need frames</li>
</ul>


<h3>Lifecycle of a UIView</h3>

<ul>
<li><p><em>life-cycle of UIView:</em> wait for an event -> touch event goes to a view -> event triggers -> custom method, may flag a view for refactoring -> redraw a view ->  render the view or views -></p></li>
<li><p>dirty views -> views that need to be redrawn</p></li>
</ul>


<h3>UIScrollView</h3>

<ul>
<li>provides support for displaying content that is larger than the size of the application&#8217;s window. It enables users to use swipe gestures, and to zoom in and back from portions of the content by making pinching gestures.</li>
</ul>


<h2>Testing</h2>

<ul>
<li>Bacon</li>
<li>Spec files</li>
<li>spec helpers</li>
<li>context</li>
<li>device events</li>
<li>Finding views</li>
<li><p>UIAutomation</p></li>
<li><p><a href="http://www.rubymotion.com/developer-center/articles/testing/">See the RubyMotion Testing Docs</a></p></li>
<li><p><code>rake spec:device</code> will push the code to the device as well as insert a debugger</p></li>
<li><p>MacBacon, a special flavor of the Ruby tool Bacon prepared to test iOS apps.</p></li>
</ul>


<h3>Playing with the interface builder</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RubyMotion Day 1]]></title>
    <link href="http://www.adamjonas.com/blog/rubymotion-day-1/"/>
    <updated>2013-01-21T09:45:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/rubymotion-day-1</id>
    <content type="html"><![CDATA[<h3>Course Goals</h3>

<ul>
<li>Objective-c Conventions</li>
<li>Using C Libraries</li>
<li>Platform Idioms</li>
<li>Key concepts: pointers, memory management, objects, messages</li>
<li>Fundamental iOS libraries</li>
<li>Cocoa patterns</li>
<li>Testing</li>
</ul>


<h3>History of why Objective-C</h3>

<ul>
<li>NeXt

<ul>
<li>used objective-c to write the main platform

<ul>
<li>there was a debate on which was better between objective-c and c++, C++ eventually won</li>
</ul>
</li>
<li>If you wanted to write an application on NeXt you needed to use NeXt builder</li>
<li>OSX was built next and there are a lot of things in OSX that were inherited from NeXt</li>
</ul>
</li>
<li>iOS is basically a version of OS10</li>
</ul>


<h3>iOS Overview</h3>

<ul>
<li>The window server and Cocoa send events and messages to each other. It is a two way communication.</li>
<li><p>each application has its own loop of communication. Responsible for send and receiving events from the window server.</p></li>
<li><p>For each object in the nib file</p>

<ul>
<li>Class is sent <code>alloc</code> to create interface</li>
<li>New instance is sent <code>init</code></li>
<li>Instance variables are set</li>
</ul>
</li>
</ul>


<h3>Application States</h3>

<ul>
<li>Two states: foreground and background

<ul>
<li>two states for foreground: inactive and active</li>
<li>in the background: you can do tasks in the background, after it is done it will go to suspended</li>
</ul>
</li>
</ul>


<h3>Cocoa</h3>

<ul>
<li>UIkit is the main library that comes with cocoa and certainly the most important.</li>
</ul>


<h3>App delegate</h3>

<ul>
<li>There are at least two classes. The application class and the application delegate.</li>
</ul>


<h3>Create a new project</h3>

<p><code>motion create &lt;app name&gt;</code></p>

<ul>
<li>fonts, images, assets all go in the resources folder</li>
</ul>


<h3>Rake</h3>

<ul>
<li><code>rake -T</code> gives me a list of all the rake tasks

<ul>
<li>can build for a device or build for the simulator</li>
</ul>
</li>
<li>can create a static library with <code>rake static</code></li>
<li><code>rake config</code> gives you output on the frameworks, delegate_class, etc.

<ul>
<li>CoreGraphics lib is what we use for animation</li>
</ul>
</li>
</ul>


<h3>Deploying the application</h3>

<ul>
<li>need an apple certificate and developer certificate</li>
</ul>


<h3>To see the UI structure</h3>

<p><code>UIApplication.sharedApplication.keyWindow.recursiveDescription</code> -> this will give you the tree structure of what you have created.</p>

<h3>Changing attributes in the console</h3>

<p><code>self.font = UIFont.fontWithName("Noteworthy-Bold",size:18)</code> will change the font of the label that you have highlighted.</p>

<h2>Object C</h2>

<ul>
<li>objective-c is an objected oriented flavor of c</li>
<li>heavily influenced from Smalltalk language</li>
<li><p>all keywords begin with @</p></li>
<li><p>RubyMotion adds named parameters similar to Ruby 2.0</p></li>
<li>Both Ruby and Objective C has the notion of open classes, single inheritance and single message dispatch</li>
</ul>


<p><code>now dateByAddingTimeInterval:1000</code>, structure is the <code>receiver theSelector:argument</code></p>

<ul>
<li>messages always enclose the receiver and the selector inside a pair of square brackets. These brackets can be nested.</li>
<li><p><em>id</em> is a pointer to any object type.</p></li>
<li><p>you can invoke objective-c OR ruby methods against built in classes</p></li>
<li><code>[1,2,3].send(:objectAtIndex, 1)</code> -> you need the colon or it won&#8217;t find the selector!</li>
<li>helpful to use short methods and callbacks because the method will not be released until it is terminated.</li>
</ul>


<h3>Objective C Classes</h3>

<ul>
<li>NSString (similar to when you freeze something in Ruby) v. NSMutableString</li>
<li>NSSArray v. NSMutableArray</li>
<li>NSSet v. NSMutableSet</li>
<li><p>NSDictionary v. NSMutableDictionary</p></li>
<li><p><code>my_string = "hello"</code> -> this is mutable</p></li>
<li><code>my_stgring = NSString.alloc.init</code> -> this is immutable</li>
</ul>


<h3>NSArray</h3>

<ul>
<li>NSArray is immutable. Once you create one it can&#8217;t be modified. NSMutableArray is a mutable subclass of NSArray

<ul>
<li>need to terminate a <code>NSArray.arrayWithObjects(foo, bar, baz, nil)</code> with a <code>nil</code> or it will crash.</li>
</ul>
</li>
</ul>


<h3>NSSet</h3>

<ul>
<li>Sets are collections with no order and objects can be present only once (can only be added once).It is useful when dealing with membership issues.</li>
<li><code>.unionSet</code>, <code>.intersectSet</code></li>
</ul>


<h3>NSDictionary</h3>

<ul>
<li>Dictionaries are unordered and associate a key.</li>
</ul>


<h3>Constants</h3>

<ul>
<li>in objective c -> constants usually start with k -> <code>kItemCode</code></li>
<li>in Ruby make sure that this is uppercase -> <code>KItemCode</code></li>
</ul>


<h3>Defining a class</h3>

<ul>
<li>Obj c uses the keyword <code>@interface</code> to define the class</li>
<li>Obj c only supports <em>single inheritance</em>. You can only inherit from one superclass at a time.</li>
</ul>


<h3>Protocols</h3>

<ul>
<li>similar to the concept of interfaces in java or C-sharp</li>
<li>a protocol is a contract. It is a promise to the compiler that a given class will implement a given interface.</li>
</ul>


<h3>Categories</h3>

<ul>
<li>the way to add methods to an existing class</li>
</ul>


<h3>Structures</h3>

<ul>
<li>C structures are mapped to classes in RubyMotion. <code>CGPoint</code> is very common.</li>
<li>It is possible to pass the field views directly to the constructor `pt= CGPoint.new(100,200)</li>
</ul>


<h3>Pointers</h3>

<ul>
<li>Pointers are basic data types of the C language</li>
<li>RubyMotion supports the creation o structure pointers, by passing their runtime type accordingly to <code>Pointer.new</code></li>
</ul>


<h3>Blocks</h3>

<ul>
<li>The caret (<sup>)</sup> character is used to define C blocks</li>
<li>The Prob object must have the same number of args as the C function pointer or block, otherwise an exception will be raised at runtime</li>
</ul>


<h3>Keyboard doesn&#8217;t toggle by default</h3>

<ul>
<li>Add this code</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="k">def</span> <span class="nf">textFieldShouldReturn</span><span class="p">(</span><span class="n">textfield</span><span class="p">)</span>
</span><span class='line'>    <span class="n">textfield</span><span class="o">.</span><span class="n">resignFirstResponder</span>
</span><span class='line'>    <span class="k">return</span> <span class="kp">false</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Setting a title of a button</h3>

<p><code>@instance_var.setTitle("TITLE",forState:UIControlStateNormal)</code></p>

<h3>List of wrappers</h3>

<ul>
<li><a href="http://rubymotion-wrappers.com/">http://rubymotion-wrappers.com/</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RubyMotion Pre-work]]></title>
    <link href="http://www.adamjonas.com/blog/rubymotion-pre-work/"/>
    <updated>2013-01-20T19:29:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/rubymotion-pre-work</id>
    <content type="html"><![CDATA[<ul>
<li>Ruby Motion Tool Chain from the command line with <code>motion</code></li>
<li><p>create a new project with <code>motion create &lt;app name&gt;</code></p></li>
<li><p><code>rake -T</code> gives you a list of tasks</p></li>
<li><p><code>rake</code> builds the application and opens the simulator</p></li>
<li><p>Cocoa touch is a framework and calls back into our code using the delegate pattern.</p>

<ul>
<li>there are special callback methods to hook into the lifecycle</li>
</ul>
</li>
</ul>


<figure class='code'><figcaption><span>Creating an alert</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">AppDelegate</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">application</span><span class="p">(</span><span class="n">application</span><span class="p">,</span> <span class="n">didFinishLaunchingWithOptions</span><span class="ss">:launchOptions</span><span class="p">)</span>
</span><span class='line'>    <span class="n">alert</span> <span class="o">=</span> <span class="no">UIAlertView</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>    <span class="n">alert</span><span class="o">.</span><span class="n">message</span> <span class="o">=</span> <span class="s2">&quot;Hello!&quot;</span>
</span><span class='line'>    <span class="n">alert</span><span class="o">.</span><span class="n">show</span>
</span><span class='line'>    <span class="kp">true</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>What is the frame?</h3>

<ul>
<li>a rectangle for the window.

<ul>
<li>it&#8217;s an origin, an X and Y coordinate</li>
<li>and it&#8217;s also a size</li>
</ul>
</li>
</ul>


<h3>Making a Yellow Screen</h3>

<figure class='code'><figcaption><span>A Yellow Flashlight!</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">AppDelegate</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">application</span><span class="p">(</span><span class="n">application</span><span class="p">,</span> <span class="n">didFinishLaunchingWithOptions</span><span class="ss">:launchOptions</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@window</span> <span class="o">=</span> <span class="no">UIWindow</span><span class="o">.</span><span class="n">alloc</span><span class="o">.</span><span class="n">initWithFrame</span><span class="p">(</span><span class="no">UIScreen</span><span class="o">.</span><span class="n">mainScreen</span><span class="o">.</span><span class="n">bounds</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@window</span><span class="o">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="no">UIColor</span><span class="o">.</span><span class="n">yellowColor</span>
</span><span class='line'>    <span class="vi">@window</span><span class="o">.</span><span class="n">makeKeyAndVisible</span>
</span><span class='line'>    <span class="kp">true</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Using the Console</h3>

<p>When the console builds it provides a console. If I hover with the mouse, nothing happens. But if I hold the cmd key, it puts the element in the console and you can assign it to self or a variable.</p>

<p>So <code>#&lt;UIWindow:0x10922060&gt;)&gt; self</code>
and <code>#&lt;UIWindow:0x10922060&gt;)&gt; self.backgroundColor = UIColor.greenColor</code> will change the color right in the console.</p>

<p>Can grab objects, put them in the console and manipulate them interactively.</p>

<h3>Views</h3>

<ul>
<li>each view that we have sits in a view and is managed by a view controller</li>
<li><p>Each</p></li>
</ul>


<h3>ViewController</h3>

<ul>
<li>UIViewController is where all the magic happens</li>
</ul>


<h3>UI Kit</h3>

<ul>
<li>the x and y coordinate starts in the upper left corner and x goes -> and y goes down.</li>
</ul>


<h3>Gesture Recognition</h3>

<ul>
<li>when a view is tapped it sends an action to a particaular target.</li>
</ul>


<h3>What is a delegate</h3>

<p>When the user launches our app, the system sets up a bunch of stuff for us. We need to give the operating system an object which can respond to different events during that process; we refer to that object as the &#8220;application delegate&#8221;. It gets callbacks for when the app starts, ends, goes to the background, gets a push notification, etc. <a href="http://rubymotion-tutorial.com/1-hello-motion/">source</a></p>

<h3>Views</h3>

<ul>
<li>Everything displayed in an app is called a &#8220;view&#8221;.- A view can have many &#8220;subviews&#8221;; when you move a view, you also move its subviews.

<ul>
<li>Subviews visually stacked on top of each other within their parent.</li>
</ul>
</li>
</ul>


<h3>Resources:</h3>

<ul>
<li><a href="http://pragmaticstudio.com/screencasts/rubymotion">50 min screencast</a></li>
<li><a href="http://www.clearsightstudio.com/insights/ruby-motion-promotion-tutorial">Promotion</a></li>
<li><a href="http://rubymotion-tutorial.com/">HTML book</a></li>
<li><a href="http://blog.crowdint.com/2013/01/16/developing-ios-applications-with-ruby.html">tutorial that also lists a bunch of resources</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Formulating a Gitbo plan]]></title>
    <link href="http://www.adamjonas.com/blog/formulating-a-gitbo-plan/"/>
    <updated>2013-01-17T19:23:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/formulating-a-gitbo-plan</id>
    <content type="html"><![CDATA[<p>Intro to the product&#8230;</p>

<p>present gitbo
  - show that it is integrated with github</p>

<pre><code>- largest open source code sharing platform
</code></pre>

<ul>
<li>show how easy it is to find and work on an issue.

<ul>
<li>by upvoting an issue, I communicate what is important to me, which is relfected in the popularity and the visibility of each issue and repository</li>
<li>uploading a third party repo bring visibility to a repo that you think deserves attention.</li>
</ul>
</li>
<li>bounty process</li>
<li><p>notified when solved (verbal &#8216;notified by email&#8217;)</p>

<ul>
<li>prompted to pay show stripe js (needed?)</li>
</ul>
</li>
<li><p>Founded a company.</p></li>
<li><p>express passion</p></li>
<li>capability</li>
<li>team cohesiveness - 3 month intense bootcamp</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Back to Sinatra]]></title>
    <link href="http://www.adamjonas.com/blog/back-to-sinatra/"/>
    <updated>2013-01-17T19:19:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/back-to-sinatra</id>
    <content type="html"><![CDATA[<ul>
<li>Couldn&#8217;t launch on heroku because I didn&#8217;t have a gemfile.</li>
<li><p>Then I could removed all the gem requirements from the top of the <code>main.rb</code> file. Not how it&#8217;s done.</p></li>
<li><p>Since I need two different keys to for FB authentication I configured them in the main <code>app.rb</code> file. I tried setting these in a <code>.env</code> file and start up the app locally with foreman, but I couldn&#8217;t get it to work.</p></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">MyApp</span> <span class="o">&lt;</span> <span class="no">Sinatra</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">configure</span> <span class="ss">:development</span> <span class="k">do</span>
</span><span class='line'>    <span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;FACEBOOK_APP_ID&quot;</span><span class="o">]=</span><span class="s1">&#39;numbers&#39;</span>
</span><span class='line'>    <span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;FACEBOOK_SECRET&quot;</span><span class="o">]=</span><span class="s1">&#39;key&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">configure</span> <span class="ss">:production</span> <span class="k">do</span>
</span><span class='line'>    <span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;FACEBOOK_APP_ID&quot;</span><span class="o">]=</span><span class="s1">&#39;numbers&#39;</span>
</span><span class='line'>    <span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;FACEBOOK_SECRET&quot;</span><span class="o">]=</span><span class="s1">&#39;key&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Found this solution on <a href="http://stackoverflow.com/questions/4486634/is-there-a-rack-or-sinatra-based-environment-configuration-utility">stackoverflow</a></p>

<ul>
<li><a href="http://stackoverflow.com/questions/658044/tick-symbol-in-html-xhtml">HTML Tick symbol</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jan 14 Notes]]></title>
    <link href="http://www.adamjonas.com/blog/jan-14-notes/"/>
    <updated>2013-01-15T11:05:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/jan-14-notes</id>
    <content type="html"><![CDATA[<h3>Simple Search</h3>

<p><a href="http://railscasts.com/episodes/37-simple-search-form">Ryan Bates to the rescue</a></p>

<h3>Find</h3>

<p>Getting back to basics (or at least closer to SQL). I haven&#8217;t used find much in the couple months, but it was what I needed for the set up search on the index pages.</p>

<p>The <a href="http://apidock.com/rails/ActiveRecord/Base/find/class">documentation is awesome</a>.</p>

<h3>ActiveRelation Queries</h3>

<p><a href="http://blog.mitchcrowe.com/blog/2012/04/14/10-most-underused-activerecord-relation-methods/">Good article on underused queries</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[XMPP]]></title>
    <link href="http://www.adamjonas.com/blog/xmpp/"/>
    <updated>2013-01-12T06:57:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/xmpp</id>
    <content type="html"><![CDATA[<h2>XMPP</h2>

<ul>
<li>instant messaging for servers -> mobile, desktop or whatever</li>
<li>it&#8217;s an open standard -> what google uses.</li>
<li>rss -> needs to ask every server if they have info.

<ul>
<li><strong>Polling is inefficient</strong></li>
</ul>
</li>
<li>In email, messages are push to the recipient -> it&#8217;s push notification.

<ul>
<li>the server and the client need to stay online constantly.</li>
</ul>
</li>
</ul>


<blockquote><p>XMPP is about pushing out info rather than pulling (which would be a continuous poll).</p></blockquote>

<h3>XMPP is built around push (not pull)</h3>

<ul>
<li>a not guaranteed queue, if a client is offline when it is sent, it may be lost</li>
<li>XMPP is built around XML</li>
<li>it can be secure, but it isn&#8217;t required by default</li>
</ul>


<h3>Upsides</h3>

<ul>
<li>publish notifications to a list of subscribers (maybe a replacement for RSS)</li>
<li>Declare presence (think about status messages)</li>
<li>control</li>
</ul>


<h3>Message status is an attribute</h3>

<ul>
<li>:normal</li>
<li>:chat</li>
<li>:groupchat</li>
<li>:heading</li>
<li>:error</li>
</ul>


<h3>Presence is also an attribute</h3>

<ul>
<li>nil</li>
<li>:chat</li>
<li>:away</li>
<li>:dnd</li>
<li>:xa</li>
</ul>


<h3>Jabber account</h3>

<ul>
<li>sign up at &lt;jabber.orb></li>
<li>IM client applications that speak jabber e.g. Psi, cross platform, can monitor raw xml sent in between</li>
<li>openfire on mac os 10 is a jabber server</li>
<li>&lt;ejabberd.im> an open source jabber server written in erlang</li>
<li><code>cd /Applications/ejabberd-2.0.1/bin</code></li>
<li><code>./ejabberdctl start</code></li>
<li>there is a web intergace on port 5280 by default</li>
<li>can only register one account every 10 minutes</li>
</ul>


<h3>xmpp4r Gem</h3>

<ul>
<li><a href="http://home.gna.org/xmpp4r/">Docs</a></li>
<li><a href="https://github.com/ln/xmpp4r">The source files on github</a></li>
</ul>


<h3>XMPP callbacks</h3>

<ul>
<li>receive parameters about the context, the sender, and the message</li>
</ul>


<h3>Create a config</h3>

<ul>
<li>create outside the class and then just pass it in later</li>
</ul>


<h3>Jabber is not the place for complicated logic</h3>

<ul>
<li>Keep your jabber simple as possible and use the rails API for more complicated business logic</li>
</ul>


<h3>There are examples in xmpp4r gem</h3>

<ul>
<li>There are some inconsistencies, but they are decent templates</li>
</ul>


<h3>Tips</h3>

<ul>
<li>can customize the avatar</li>
</ul>


<h3>Interacting with rails</h3>

<ul>
<li><code>render_then_call(render)</code> from merb (not sure what it&#8217;s current status is)</li>
<li>can also sent this to a job queue so that it is done asynchronously, but this uses two jabber accounts which will send the original message from the other</li>
<li>keep a DRb port open on your jabber script, its not fully asynchronous, but it works since the slowest part is opening the connection</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Recursion]]></title>
    <link href="http://www.adamjonas.com/blog/recursion/"/>
    <updated>2013-01-11T22:04:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/recursion</id>
    <content type="html"><![CDATA[<ul>
<li><p><a href="http://www.youtube.com/watch?v=MyzFdthuUcA">How to write a recursive method</a></p></li>
<li><p>Step one- write &#8216;if&#8217;
a. There must be two cases: a recursive case (where the method calls itself)
b. and a base case (where the method does not)</p></li>
<li>Handle the simplest case(s).
a. Simplest = no recursive call needed (no looping)</li>
<li>Write the recurisve call(s)
a. On the next simplest input/state</li>
<li>Assume the recursive call works (maybe store the result in a variable)
a. Ask yourself, what does it do?
b. How does it help?</li>
</ul>


<p>9! = <code>9*8*7*6..</code>
10! = <code>10*9!</code>
n! = n * (n - 1)! -> a recursive definition of factorial</p>

<p>&#8220;`ruby
def factorial(n)
  if n == 0</p>

<pre><code>return 1
</code></pre>

<p>  else</p>

<pre><code>result = factorial(n - 1) #computes n-1 factorial
result * n
</code></pre>

<p>  end
end</p>

<ul>
<li><a href="http://www.youtube.com/watch?v=ozmE8G6YKww">How recursion works</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Data Structures]]></title>
    <link href="http://www.adamjonas.com/blog/data-structures/"/>
    <updated>2013-01-11T17:55:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/data-structures</id>
    <content type="html"><![CDATA[<h3>MIT lecture on Intro to Algorithms</h3>

<p><em>Analysis of algorithms:</em></p>

<blockquote><p>the theoretical study of computer program performance and resource usage</p></blockquote>

<ul>
<li><p>What is more important than performance?</p>

<ul>
<li>correctness</li>
<li>simplicity</li>
<li>maintainability</li>
<li>stability / robustness</li>
<li>features / functionality</li>
<li>modularity</li>
<li>security</li>
<li>user friendliness</li>
</ul>
</li>
<li><p>Why study this then?</p>

<ul>
<li>real time constraints</li>
<li>sometime user friendliness is a function of performance</li>
<li>performance measures the line between feasible and infeasible -> algorithms are on the edge of entrepreneurship</li>
<li>algorithms provides a common language to talk about programming behavior</li>
</ul>
</li>
<li><p>Permutation (an arrangement of numbers)</p></li>
</ul>


<blockquote><p>Take a bunch of numbers and arrangement them in order</p></blockquote>

<ul>
<li>Insertion sort:

<ul>
<li>depends on the input order. If sorted, there is little work to do. Worst case is if it is reverse sorted.</li>
<li>depends also on the input size.</li>
<li><em>expected time</em> is the time of every input multiplied by the probability of every input AKA a weighted average.

<ul>
<li>the assumption is based on the statistical distribution of the inputs

<ul>
<li>all inputs are equally likely -> uniform distribution</li>
</ul>
</li>
<li>a best case analysis is bogus&#8230;</li>
</ul>
</li>
</ul>
</li>
</ul>


<p>Relative speed:</p>

<blockquote><p>speed that depends on the speed of the</p></blockquote>

<p>Absolute speed:</p>

<blockquote><p>speed that depends on the speed of the</p></blockquote>

<p>Asymptotic Analysis:</p>

<blockquote><p>Considers the performance of algorithms when applied to very large input datasets. It ignores machine dependent constants and focuses on the growth of the running time.</p></blockquote>

<ul>
<li>Asymptotic notation:

<ul>
<li>Theta notation -> drop low order terms and ignore leading constants</li>
<li>e.g. -> <code>3n^3 + 90n^2 - 5n + 6046 = Œ∏(n^3)</code> in asymptotic notation

<ul>
<li>As n approaches infinity, <code>Œ∏(n^2)</code> <strong>always beats</strong> <code>Œ∏(n^3)</code> alogrithm.</li>
</ul>
</li>
</ul>
</li>
</ul>


<p>Sometimes choosing a slower algorithm allows you to attack a problem that a faster algorithm would not allow you to. (56 min)</p>

<ul>
<li>can</li>
</ul>


<h3>Selection Sort</h3>

<ul>
<li><a href="http://www.youtube.com/watch?v=MZ-ZeQnUL1Q">Vid</a></li>
<li>Time complexity is O(n<sup>2).</sup> It makes n comparisons, n times. It needs to make a pass through the list for every element it sorts.</li>
<li>For whatever data you give it, it will make the exact same amount of comparisons. Even if you give selection sort a sorted list, it still will have to make the same amount of passes. Thus, the best case, worst case and average case are all O(n<sup>2).</sup></li>
</ul>


<h3>Bubble Sort</h3>

<ul>
<li><a href="http://www.youtube.com/watch?v=jAoBsroEow4">Vid</a></li>
<li>Compare items with the item to its right (or left).</li>
<li>Large numbers are pushed to the right side of an unsorted list.</li>
<li>Called a bubble sort since the large numbers rise up to the right.</li>
<li>A O(n<sup>2),</sup> same time complexity as selection sort.

<ul>
<li>while selection sort will always be a O(n<sup>2),</sup> bubble sort may be more efficient if the list is fully sorted.</li>
<li>the best case is a O(n), while the average and worst case are both O(n<sup>2)</sup></li>
</ul>
</li>
</ul>


<h3>Cocktail Sort</h3>

<ul>
<li><a href="http://www.youtube.com/watch?v=Xmx_6YRBaq8">Vid</a></li>
<li>Saw in bubble sort, that larger numbers rise to the right.

<ul>
<li>The larger numbers are sorted to the right and on the pass back, the smaller numbers are bubbled to the left.</li>
<li>The time complexity is still O(n<sup>2)</sup> and is pretty similar to bubble sort.</li>
</ul>
</li>
</ul>


<h3>Insertion Sort</h3>

<ul>
<li>Only makes one pass through the list. This doesn&#8217;t mean it is an efficient algorithm.</li>
<li>Start at the second element</li>
<li>with each new item, you are sorting the item in its correct position it will be sorted in its relative position.

<ul>
<li>Every arrow to the left are sorted properly.</li>
</ul>
</li>
<li>As it is inserting itself back through the list, but this is still n comparisons or n items meaning it is a O(n<sup>2)</sup> time complexity.</li>
<li>The best case scenario is like bubble sort of n comparisons. An inversely sorted list will require O(n<sup>2).</sup>
-> moderately fast for small n, but not at all for large n</li>
</ul>


<h3>Bucket Sort</h3>

<ul>
<li><a href="http://www.youtube.com/watch?NR=1&amp;feature=endscreen&amp;v=ovAfqUafjAA">Vid</a></li>
<li>Not a sorting algorithm. It breaks down a list into sub-lists. The purpose is to break it down into smaller chunks so that each list takes less time to sort than the larger list.

<ul>
<li>Instead of sorting one list of 8 items, I could sort two lists of 4 items.

<ul>
<li>need to know the upper and lower items of each list.</li>
</ul>
</li>
</ul>
</li>
<li>Why do this? Because if you use bubble sort you reduce the overall time complexity of N<sup>2</sup> if the list 8<sup>2</sup> items by making it 2 x 4<sup>2.</sup></li>
<li>Average case is O(n+k), k represents the number of buckets created. Worst case scenario is still O(n<sup>2).</sup></li>
</ul>


<h3>Recursion</h3>

<ul>
<li>similar to recurrence relations in math</li>
<li>any form of recursion must have a base case for the recursion to stop as well as a recursive case which makes recursive calls to itself.</li>
</ul>


<h3>Quick Sort</h3>

<ul>
<li>sorting algorithm that relies on recursion.</li>
<li>where you put the pivot doesn&#8217;t matter, pointers go to the extreme left or right of the list</li>
<li>the items at the pointers are compared</li>
<li>when both pointers and pivot are at the same value, it is in the right position</li>
<li>recursively done on the left sublist and then the right sublist.</li>
<li>Time complexity -> O(nlogn) for best and average. An inversely sorted list will still require O(n<sup>2).</sup></li>
</ul>


<h3>Merge Sort</h3>

<ul>
<li>MIT-> 1:03</li>
<li><p>A[1..n]</p></li>
<li><p>If n=1, done</p></li>
<li>Recursively sort A[1..(n/2)] &amp;&amp; A[n/2+1..n] (we are sorting two halves of the input)</li>
<li>Take the two lists and merge them
a. say you have two lists [2, 7, 13, 20], [1, 9, 11, 12]
b. check the head of the two arrays, then ouput the smallest.</li>
<li><p>The time to do this is Œ∏(n) or linear time which is proportional to the size of n.</p></li>
<li><p>Worst case this is a O(nlogn). Anything more than 30 this would be more performant than insert sort (1:20 MIT)</p></li>
</ul>


<h3>Example</h3>

<p>Given‚Ä© a ‚Ä©sorted ‚Ä©array ‚Ä©of ‚Ä©integers, ‚Ä©how ‚Ä©can ‚Ä©you ‚Ä©find‚Ä© the ‚Ä©location ‚Ä©of ‚Ä©a ‚Ä©particular ‚Ä©integer‚Ä© x?</p>

<p><em>Good‚Ä© answer:</em> ‚Ä©Use ‚Ä©binary ‚Ä©search. ‚Ä©‚Ä©Compare ‚Ä©the‚Ä© number ‚Ä©in ‚Ä©the ‚Ä©middle ‚Ä©of ‚Ä©the ‚Ä©array‚Ä© with ‚Ä©x.‚Ä© ‚Ä©If ‚Ä©it ‚Ä©is ‚Ä©equal,‚Ä© we ‚Ä©are ‚Ä©done. ‚Ä©‚Ä©If ‚Ä©the ‚Ä©number ‚Ä©is ‚Ä©greater, ‚Ä©we‚Ä© know ‚Ä©to ‚Ä©look ‚Ä©in‚Ä© the‚Ä© second ‚Ä©half ‚Ä©of ‚Ä©the ‚Ä©array. ‚Ä©‚Ä©If‚Ä© it ‚Ä©is ‚Ä©smaller, ‚Ä©we ‚Ä©know ‚Ä©to ‚Ä©look ‚Ä©in ‚Ä©the ‚Ä©first ‚Ä©half. ‚Ä©‚Ä©We ‚Ä©can‚Ä© repeat ‚Ä©the ‚Ä©search ‚Ä©on ‚Ä©the ‚Ä©appropriate ‚Ä©half ‚Ä©of ‚Ä©the ‚Ä©array ‚Ä©by ‚Ä©comparing ‚Ä©the‚Ä© middle element‚Ä© of ‚Ä©that ‚Ä©array ‚Ä©with ‚Ä©x,‚Ä© once ‚Ä©again ‚Ä©narrowing ‚Ä©our ‚Ä©search ‚Ä©by ‚Ä©a ‚Ä©factor‚Ä© of ‚Ä©2. ‚Ä©‚Ä©We‚Ä© repeat ‚Ä©this ‚Ä©process‚Ä© until ‚Ä©we ‚Ä©find ‚Ä©x. ‚Ä©This ‚Ä©algorithm ‚Ä©takes ‚Ä©<em>O(log‚Ä©n)</em> ‚Ä©time.</p>

<p><em>Not‚Äêso‚Äêgood‚Ä© answer</em>:‚Ä© Go‚Ä© through‚Ä© each‚Ä© number‚Ä© in‚Ä© order‚Ä© and‚Ä© compare‚Ä© it‚Ä© to‚Ä© x.‚Ä©‚Ä©This‚Ä©
algorithm‚Ä© takes‚Ä© <em>O(n)</em>‚Ä© time.</p>

<ul>
<li>(<a href="http://courses.csail.mit.edu/iap/interview/Hacking_a_Google_Interview_Handout_1.pdf">from</a>)</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jan 8 Notes]]></title>
    <link href="http://www.adamjonas.com/blog/jan-8-notes/"/>
    <updated>2013-01-08T12:14:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/jan-8-notes</id>
    <content type="html"><![CDATA[<h3>Railscast 240 8min</h3>

<ul>
<li>Sortable table columns #228 railscast</li>
<li>pagination with will_paginate gem, 3.0.pre2 version</li>
<li>Will ajax improve the user experience?</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jan 4 Notes]]></title>
    <link href="http://www.adamjonas.com/blog/jan-4-notes/"/>
    <updated>2013-01-04T11:30:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/jan-4-notes</id>
    <content type="html"><![CDATA[<ul>
<li>Created deploy user or go as root?

<ul>
<li>scp => ssh copy from home dir to files online</li>
</ul>
</li>
</ul>


<h3>Goals for payments</h3>

<ul>
<li>verification is done.

<ul>
<li>set up payment long form for when a user submits a bounty for the first time.

<ul>
<li>short form for 2nd payment and beyond?</li>
</ul>
</li>
<li>need to notify the bounty author when a bounty has been claimed &amp;&amp; verified.</li>
</ul>
</li>
</ul>


<h3>Reference Spike&#8217;s resources</h3>

<ul>
<li><a href="https://github.com/spikegrobstein/flatironschool-deployment_lecture">Github</a></li>
</ul>


<h3>Setting up a staging server</h3>

<ul>
<li><p>need to configure nginx to handle another environment</p></li>
<li><p>configured <code>nginx.conf</code></p></li>
<li><p>copy up or pull down files: <code>scp /fileonmycomp deploy@git.bo:filename</code></p></li>
<li><p><code>sudo nginx -s stop</code></p></li>
<li><p><code>sudo nginx</code> -> starts nginx</p></li>
<li><p>update the DNS so that it points to that IP address</p></li>
</ul>


<h3>Railscast on setting up another env #72</h3>

<ul>
<li>can make as many environments as you want

<ul>
<li>add a <code>staging.rb</code></li>
<li>copy <code>production.rb</code>, but enable debug for the log</li>
<li>need to create block in the <code>database.yml</code> file as well</li>
<li><code>rails s -e staging</code> will start the server in that env

<ul>
<li><code>rails c staging</code> will start the console in that env</li>
</ul>
</li>
<li></li>
</ul>
</li>
</ul>


<h3>Ruby Gems</h3>

<p><code>gem env</code> shows the paths of your RubyGem Enviroment</p>

<h3>Create Postgres DB</h3>

<ul>
<li><a href="http://www.cyberciti.biz/faq/howto-add-postgresql-user-account/">Cyberciti</a></li>
</ul>


<h3>Migrate Postgres DB</h3>

<ul>
<li><code>bundle exec rake db:migrate RAILS_ENV=staging</code></li>
</ul>


<h3>Precompiling locally</h3>

<ul>
<li><code>bundle exec rake assets:precompile</code></li>
</ul>


<h3>Undoing the last Github commit</h3>

<ul>
<li><a href="http://stackoverflow.com/questions/927358/undo-last-git-commit"><code>git reset --soft HEAD^</code></a></li>
</ul>


<h3>Passenger environment nginx config</h3>

<ul>
<li></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jan 3 Notes]]></title>
    <link href="http://www.adamjonas.com/blog/jan-3-notes/"/>
    <updated>2013-01-03T12:12:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/jan-3-notes</id>
    <content type="html"><![CDATA[<h3>Adding a comma for big numbers</h3>

<p><code>&lt;%= number_with_delimiter(repo.watchers, :delimiter =&gt; ',')</code>
<a href="http://stackoverflow.com/questions/1078347/is-there-a-rails-trick-to-adding-commas-to-large-numbers">From</a></p>

<h3>UI/UX strategy</h3>

<ul>
<li>kickstarter- encouraging click through rather than interaction.</li>
<li>digg, stackoverflow, and reddit are closer to the functionality we want.</li>
<li>don&#8217;t reinvent the wheel -> move forward.</li>
</ul>


<h3>Bounty Claims</h3>

<ul>
<li><p>Psuedo code: collect the info from the user (modal)</p></li>
<li><p>this is sent to verification layer</p>

<ul>
<li><p>bounty controller?</p></li>
<li><p>make sure the issue is closed</p></li>
<li>make sure that an issue has a bounty</li>
<li>make sure the issue was solved by the bounty claimer</li>
</ul>
</li>
<li><p>if true- send verification to both bounty claimer and bounty author</p>

<ul>
<li>write the user id for all bounties the claimer solved</li>
<li>change the badge/trigger payment on the profile pages of the bounty issuer</li>
<li>tell gitbo admin that this was solved.</li>
</ul>
</li>
<li><p>if false tell them why</p></li>
</ul>


<h3>A modal mess</h3>

<ul>
<li>We were trying to pass in multiple parameters in the url. But why do that?</li>
</ul>


<figure class='code'><figcaption><span>This is simpler</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">div</span> <span class="n">class</span><span class="o">=</span><span class="s2">&quot;modal-body&quot;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="sx">%= form_tag(bounty_claim_path) do %&gt;</span>
</span><span class='line'><span class="sx">  &lt;div class=</span><span class="s2">&quot;field&quot;</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="n">label</span> <span class="k">for</span><span class="o">=</span><span class="s2">&quot;owner_name&quot;</span><span class="o">&gt;</span><span class="no">Repo</span> <span class="no">Owner</span> <span class="no">Name</span><span class="o">&lt;</span><span class="sr">/label&gt;</span>
</span><span class='line'><span class="sr">    &lt;input id=&quot;owner_name&quot; name=&quot;owner_name&quot; type=&quot;text&quot; /</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="sr">/div&gt;</span>
</span><span class='line'><span class="sr">  &lt;div class=&quot;field&quot;&gt;</span>
</span><span class='line'><span class="sr">    &lt;label for=&quot;repo_name&quot;&gt;Repo Name&lt;/</span><span class="n">label</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="n">input</span> <span class="nb">id</span><span class="o">=</span><span class="s2">&quot;repo_name&quot;</span> <span class="nb">name</span><span class="o">=</span><span class="s2">&quot;repo_name&quot;</span> <span class="n">type</span><span class="o">=</span><span class="s2">&quot;text&quot;</span> <span class="sr">/&gt;</span>
</span><span class='line'><span class="sr">  &lt;/</span><span class="n">div</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">div</span> <span class="n">class</span><span class="o">=</span><span class="s2">&quot;field&quot;</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="n">label</span> <span class="k">for</span><span class="o">=</span><span class="s2">&quot;git_number&quot;</span><span class="o">&gt;</span><span class="no">Github</span> <span class="no">Issue</span> <span class="no">Number</span><span class="o">&lt;</span><span class="sr">/label&gt;</span>
</span><span class='line'><span class="sr">    &lt;input id=&quot;git_number&quot; name=&quot;git_number&quot; type=&quot;text&quot; /</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="sr">/div&gt;</span>
</span><span class='line'><span class="sr">  &lt;div class=&quot;modal-footer&quot;&gt;</span>
</span><span class='line'><span class="sr">    &lt;span id=&quot;error&quot;&gt;&lt;/s</span><span class="n">pan</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="n">div</span> <span class="n">class</span><span class="o">=</span><span class="s2">&quot;actions&quot;</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="n">button</span> <span class="n">class</span><span class="o">=</span><span class="s1">&#39;btn btn-success btn-small&#39;</span><span class="o">&gt;</span><span class="no">Submit</span><span class="o">&lt;</span><span class="sr">/button&gt;</span>
</span><span class='line'><span class="sr">      &lt;button class=&quot;btn btn-danger btn-small&quot; data-dismiss=&quot;modal&quot; aria-hidden=&quot;true&quot;&gt;Oopsy&lt;/</span><span class="n">button</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="sr">/div&gt;</span>
</span><span class='line'><span class="sr">  &lt;/</span><span class="n">div</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="sx">% end %&gt;</span>
</span><span class='line'><span class="sx">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Just submit to a static url and pass in the info via params.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jan 2 Notes]]></title>
    <link href="http://www.adamjonas.com/blog/jan-2-notes/"/>
    <updated>2013-01-02T13:11:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/jan-2-notes</id>
    <content type="html"><![CDATA[<h3>Bash Environment Variables</h3>

<p>I was getting a double render on my bounty form. This was because I had precompiled my assets in an attempt to rectify Gitbo&#8217;s server issue last week. Since <code>issue.js</code> has been compiled into <code>application.js</code>, it is listening twice.</p>

<p>StackOverflow had <a href="http://stackoverflow.com/questions/9641320/rails-assets-dont-get-updated">this to say</a> and this solution <code>bundle exec RAILS_ENV=development rake rails_group=assets assets:clean</code>.</p>

<ol>
<li>The <code>bundle exec</code> would be needed if the gem file and my system files were different. In Gitbo&#8217;s case, there is no discrepancy. On the server, that can&#8217;t be assumed and <code>bundle exec</code> would be needed.</li>
<li>The default environment for a rake task is development <strong>except</strong> for assets which obviously have more to do with production.</li>
<li>Rake tasks are very flexible in terms of how they take <em>bash environment variables</em> (they are sort of like arguments, but they aren&#8217;t). Passing in the rails_environment before the rake task is how I did it, but they could be passed in afterwards and that would be fine because BASH reads the entire line of code before it executes it.</li>
</ol>


<p>Here was the final command I used: <code>RAILS_ENV=development RAILS_GROUP=assets rake assets:clean</code></p>

<h3>Skeleton</h3>

<ul>
<li>Site is <a href="http://www.getskeleton.com/">here</a></li>
<li>Installed <a href="https://github.com/helios-technologies/skeleton-rails">skeleton-rails</a></li>
<li>An alternative to rails</li>
</ul>


<h3>Instance Variables</h3>

<ul>
<li><p>Show does have an instance variable. The view is attached to an instance of a controller</p></li>
<li><p>In a partial, this is just crazy&#8230;</p>

<ul>
<li>a view is not part of the controller, so why should it have access to an instance of a controller.</li>
</ul>
</li>
</ul>


<p>Further reading on this: <a href="http://rails-bestpractices.com/posts/27-replace-instance-variable-with-local-variable">Rails Best Practices</a> and <a href="http://programmers.stackexchange.com/questions/127838/why-do-people-suggest-not-to-use-instance-variable-for-views-in-ruby-on-rails">Stack Exchange</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Parallelism]]></title>
    <link href="http://www.adamjonas.com/blog/parallelism/"/>
    <updated>2013-01-01T21:30:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/parallelism</id>
    <content type="html"><![CDATA[<h3>Threads‚Ä© and‚Ä© processes:</h3>

<p>A‚Ä© computer‚Ä© will‚Ä© often‚Ä© appear‚Ä© to‚Ä© be‚Ä© doing‚Ä© many‚Ä© things‚Ä© simultaneously,‚Ä© such‚Ä© as‚Ä© checking‚Ä© for‚Ä© new‚Ä© e‚Äêmail‚Ä© messages,‚Ä© saving‚Ä© a‚Ä© Word‚Ä© document,‚Ä© and‚Ä© loading‚Ä© a ‚Ä©website. Each‚Ä© program‚Ä© is‚Ä© a‚Ä© separate‚Ä© &#8220;process&#8221;.‚Ä©‚Ä© Each‚Ä© process‚Ä© has‚Ä© one‚Ä© or‚Ä© more‚Ä© &#8220;threads. &#8220;‚Ä©‚Ä©If ‚Ä©a ‚Ä©process‚Ä© has‚Ä© several‚Ä© threads,‚Ä© they‚Ä© appear‚Ä© to‚Ä© run‚Ä© simultaneously. ‚Ä©For‚Ä© example,‚Ä© an‚Ä© e‚Äêmail‚Ä© client‚Ä© may‚Ä© have‚Ä© one‚Ä© thread‚Ä© that‚Ä© checks‚Ä© for‚Ä© new‚Ä© e‚Äêmail‚Ä© messages‚Ä© and‚Ä© one‚Ä© thread‚Ä© for‚Ä© the‚Ä© GUI‚Ä© so‚Ä© that‚Ä© it‚Ä© can‚Ä© show‚Ä© a ‚Ä©button‚Ä© being‚Ä© pressed. ‚Ä©In ‚Ä©fact,‚Ä© only‚Ä© one‚Ä© thread‚Ä© is ‚Ä©being‚Ä© run‚Ä© at‚Ä© any‚Ä© given‚Ä© time. ‚Ä©The‚Ä© processor‚Ä© switches‚Ä© between‚Ä© threads‚Ä© so‚Ä© quickly‚Ä© that‚Ä© they‚Ä© appear‚Ä© to‚Ä© be‚Ä© running‚Ä© simultaneously. Multiple‚Ä© threads‚Ä© in ‚Ä©a ‚Ä©single‚Ä© process‚Ä© have‚Ä© access‚Ä© to ‚Ä©the‚Ä© same‚Ä© memory.‚Ä©‚Ä© By‚Ä© contrast,‚Ä© multiple‚Ä© processes‚Ä© have‚Ä© separate‚Ä© regions‚Ä© of‚Ä© memory‚Ä© and‚Ä© can‚Ä© only‚Ä© communicate‚Ä© by‚Ä© special‚Ä© mechanisms. ‚Ä©The‚Ä© processor‚Ä© loads‚Ä© and‚Ä© saves‚Ä© a‚Ä© separate‚Ä© set‚Ä© of‚Ä© registers‚Ä© for‚Ä© each‚Ä© thread. Remember,‚Ä© each‚Ä© process‚Ä© has‚Ä© one‚Ä© or‚Ä© more‚Ä© threads,‚Ä© and‚Ä© the‚Ä© processor‚Ä© switches‚Ä© between‚Ä© threads.</p>

<ul>
<li><a href="http://courses.csail.mit.edu/iap/interview/Hacking_a_Google_Interview_Handout_1.pdf">From</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
