<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Hack hack hack...]]></title>
  <link href="http://www.adamjonas.com/atom.xml" rel="self"/>
  <link href="http://www.adamjonas.com/"/>
  <updated>2013-05-03T11:06:43-04:00</updated>
  <id>http://www.adamjonas.com/</id>
  <author>
    <name><![CDATA[Adam Jonas]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Fancy Specs]]></title>
    <link href="http://www.adamjonas.com/blog/fancy-specs/"/>
    <updated>2013-04-30T11:10:00-04:00</updated>
    <id>http://www.adamjonas.com/blog/fancy-specs</id>
    <content type="html"><![CDATA[<h3>Multiple content tags</h3>

<ul>
<li><a href="http://gabriel-dehan.github.io/2012/08/07/render-multiple-tags-in-a-helper/">need to concat multiple content tags</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pergola]]></title>
    <link href="http://www.adamjonas.com/blog/pergola/"/>
    <updated>2013-04-25T11:25:00-04:00</updated>
    <id>http://www.adamjonas.com/blog/pergola</id>
    <content type="html"><![CDATA[<h3>Names</h3>

<ul>
<li>Taken

<ul>
<li>ivy</li>
<li>trellis</li>
<li>grapevine</li>
<li>chlorophyll</li>
<li>vinify</li>
</ul>
</li>
</ul>


<h3>Building the gem</h3>

<ul>
<li>Ryan Bates <a href="http://railscasts.com/episodes/245-new-gem-with-bundler">you stud</a></li>
<li>create the gem with builder <strong>before</strong> you create files within it.</li>
</ul>


<h3>Removing a file from Github</h3>

<ul>
<li><code>git rm examples/all.rb</code></li>
<li><code>git rm examples/all.rb --cached</code> leaves a local version</li>
</ul>


<h3>class &lt;&lt; self</h3>

<ul>
<li>see nice stackoverflow responses <a href="http://stackoverflow.com/questions/2505067/class-self-idiom-in-ruby">here</a> and <a href="http://stackoverflow.com/questions/2567956/rails-class-self">here</a></li>
<li><a href="http://yehudakatz.com/2009/11/15/metaprogramming-in-ruby-its-all-about-the-self/">katz write up</a></li>
</ul>


<h3>Reading</h3>

<ul>
<li>http://www.gironda.org/2013/02/25/digging-in-the-vineyard-part-1.html</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[calendar app 2]]></title>
    <link href="http://www.adamjonas.com/blog/calendar-app-2/"/>
    <updated>2013-04-24T12:35:00-04:00</updated>
    <id>http://www.adamjonas.com/blog/calendar-app-2</id>
    <content type="html"><![CDATA[<h3>Active Admin</h3>

<ul>
<li><a href="http://www.tomordonez.com/blog/2012/06/22/add-an-activeadmin-adminuser-through-rails-console/">creating a user through the console</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[.powconfig]]></title>
    <link href="http://www.adamjonas.com/blog/dot-powconfig/"/>
    <updated>2013-03-27T11:27:00-04:00</updated>
    <id>http://www.adamjonas.com/blog/dot-powconfig</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>.powconfig</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">eval</span> <span class="err">$</span><span class="p">(</span><span class="n">rbenv</span> <span class="n">init</span> <span class="o">-</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">export</span> <span class="no">POW_DOMAINS</span><span class="o">=</span><span class="n">dev</span><span class="p">,</span><span class="nb">test</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#because I loaded pow with brew and not manually it was a different path...</span>
</span><span class='line'><span class="n">export</span> <span class="no">PATH</span><span class="o">=</span><span class="s2">&quot;/usr/local/opt/rbenv/shims:$PATH&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">export</span> <span class="no">POW_TIMEOUT</span><span class="o">=</span><span class="mi">900</span>
</span><span class='line'><span class="n">export</span> <span class="no">POW_WORKERS</span><span class="o">=</span><span class="mi">1</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[calendar app 1]]></title>
    <link href="http://www.adamjonas.com/blog/calendar-app-1/"/>
    <updated>2013-03-26T10:17:00-04:00</updated>
    <id>http://www.adamjonas.com/blog/calendar-app-1</id>
    <content type="html"><![CDATA[<h3>Setup</h3>

<ul>
<li>added a EventTimeValidator to lib. this needed to be updated in the app config file as well so that the autoload path would pick up the changes in the lib dir.</li>
</ul>


<figure class='code'><figcaption><span>rspec tests on valdidations</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">expect</span><span class="p">(</span><span class="n">event</span><span class="p">)</span><span class="o">.</span><span class="n">to_not</span> <span class="n">be_valid</span>
</span><span class='line'><span class="n">expect</span><span class="p">(</span><span class="n">event</span><span class="o">.</span><span class="n">errors</span><span class="o">[</span><span class="ss">:end_date</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span> <span class="o">[</span><span class="s2">&quot;must be after start date&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Git global config github</h3>

<ul>
<li>needed to link email from my new macbook

<ul>
<li><a href="https://help.github.com/articles/setting-your-email-in-git">used this as a guide</a></li>
</ul>
</li>
</ul>


<h3>Uploads</h3>

<ul>
<li>we used carrierwave

<ul>
<li>remember to set multipart to true</li>
</ul>
</li>
</ul>


<h3>Extend self</h3>

<ul>
<li>from <a href="http://stackoverflow.com/a/11607912/1496757">stackoverflow</a></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">A</span>
</span><span class='line'>  <span class="k">class</span> <span class="o">&lt;&lt;</span> <span class="nb">self</span>
</span><span class='line'>    <span class="kp">include</span> <span class="n">A</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">x</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s1">&#39;x&#39;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">y</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s1">&#39;y&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">A</span><span class="o">.</span><span class="n">x</span> <span class="c1">#=&gt; &#39;x&#39;</span>
</span><span class='line'><span class="n">A</span><span class="o">.</span><span class="n">y</span> <span class="c1">#=&gt; &#39;y&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="http://ozmm.org/posts/singin_singletons.html">classic post</a></li>
</ul>


<h3>Method Stubs</h3>

<ul>
<li>A method stub is an implementation that returns a pre-determined value. Method stubs can be declared on test doubles or real objects using the same syntax.</li>
</ul>


<figure class='code'><figcaption><span>E.G.</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">book</span><span class="o">.</span><span class="n">stub</span><span class="p">(</span><span class="ss">:title</span><span class="p">)</span> <span class="p">{</span> <span class="s2">&quot;The RSpec Book&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="n">book</span><span class="o">.</span><span class="n">stub</span><span class="p">(</span><span class="ss">:title</span> <span class="o">=&gt;</span> <span class="s2">&quot;The RSpec Book&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">book</span><span class="o">.</span><span class="n">stub</span><span class="p">(</span><span class="ss">:title</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="s2">&quot;The RSpec Book&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>any_instance</h3>

<ul>
<li>stub on any instance of a class

<ul>
<li>Use <code>any_instance.stub</code> on a class to tell any instance of that class to return a value (or values) in response to a given message. If no instance receives the message, nothing happens.</li>
</ul>
</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">describe</span> <span class="s2">&quot;any_instance.stub&quot;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">it</span> <span class="s2">&quot;returns the specified value on any instance of the class&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="no">Object</span><span class="o">.</span><span class="n">any_instance</span><span class="o">.</span><span class="n">stub</span><span class="p">(</span><span class="ss">:foo</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="ss">:return_value</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">o</span> <span class="o">=</span> <span class="no">Object</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>    <span class="n">o</span><span class="o">.</span><span class="n">foo</span><span class="o">.</span><span class="n">should</span> <span class="n">eq</span><span class="p">(</span><span class="ss">:return_value</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://www.relishapp.com/rspec/rspec-mocks/v/2-6/docs/method-stubs/stub-on-any-instance-of-a-">from</a></li>
</ul>


<h3>Alias Attribute</h3>

<ul>
<li><code>alias_attribute :value, :url</code></li>
</ul>


<h3>Chop v. Chomp</h3>

<ul>
<li>subtle difference between <code>chop</code> and <code>chomp</code></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#chop</span>
</span><span class='line'><span class="s2">&quot;string</span><span class="se">\r\n</span><span class="s2">&quot;</span><span class="o">.</span><span class="n">chop</span>   <span class="c1">#=&gt; &quot;string&quot;</span>
</span><span class='line'><span class="s2">&quot;string</span><span class="se">\n\r</span><span class="s2">&quot;</span><span class="o">.</span><span class="n">chop</span>   <span class="c1">#=&gt; &quot;string\n&quot;</span>
</span><span class='line'><span class="s2">&quot;string</span><span class="se">\n</span><span class="s2">&quot;</span><span class="o">.</span><span class="n">chop</span>     <span class="c1">#=&gt; &quot;string&quot;</span>
</span><span class='line'><span class="s2">&quot;string&quot;</span><span class="o">.</span><span class="n">chop</span>       <span class="c1">#=&gt; &quot;strin&quot;</span>
</span><span class='line'><span class="s2">&quot;x&quot;</span><span class="o">.</span><span class="n">chop</span><span class="o">.</span><span class="n">chop</span>       <span class="c1">#=&gt; &quot;&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#chomp</span>
</span><span class='line'><span class="s2">&quot;hello&quot;</span><span class="o">.</span><span class="n">chomp</span>            <span class="c1">#=&gt; &quot;hello&quot;</span>
</span><span class='line'><span class="s2">&quot;hello</span><span class="se">\n</span><span class="s2">&quot;</span><span class="o">.</span><span class="n">chomp</span>          <span class="c1">#=&gt; &quot;hello&quot;</span>
</span><span class='line'><span class="s2">&quot;hello</span><span class="se">\r</span><span class="s2">&quot;</span><span class="o">.</span><span class="n">chomp</span>          <span class="c1">#=&gt; &quot;hello&quot;</span>
</span><span class='line'><span class="s2">&quot;hello </span><span class="se">\n</span><span class="s2"> there&quot;</span><span class="o">.</span><span class="n">chomp</span>   <span class="c1">#=&gt; &quot;hello \n there&quot;</span>
</span><span class='line'><span class="s2">&quot;hello&quot;</span><span class="o">.</span><span class="n">chomp</span><span class="p">(</span><span class="s2">&quot;llo&quot;</span><span class="p">)</span>     <span class="c1">#=&gt; &quot;he&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="http://ruby-doc.org/core-2.0/String.html#method-i-chop">see</a></li>
</ul>


<h3>Setting develop as the default</h3>

<ul>
<li><code>git branch --track develop origin/develop</code></li>
</ul>


<h3>Formtastic</h3>

<ul>
<li>collection groups together elements for a select box

<ul>
<li>include blank false</li>
</ul>
</li>
</ul>


<h3>Deploying</h3>

<ul>
<li>need to add new deploy instructions to .git/config file</li>
</ul>


<h3>Nano</h3>

<ul>
<li>basic text editor that appears to be pre-loaded&#8230;</li>
</ul>


<h3>Offsetting an image and a link</h3>

<ul>
<li>use padding to offset an image from its link

<ul>
<li>I use this a lot when putting an icon in front of a link</li>
<li>see <a href="http://shapeshed.com/using_background_images_with_links/">here</a> for more</li>
</ul>
</li>
</ul>


<h3>Deploying to heroku</h3>

<ul>
<li><code>git push staging develop:master</code></li>
</ul>


<h3>Each with index</h3>

<figure class='code'><figcaption><span>E.G.</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vi">@something</span><span class="o">.</span><span class="n">each_with_index</span> <span class="k">do</span> <span class="o">|</span><span class="n">thing</span><span class="p">,</span><span class="n">index</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">index</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>S3</h3>

<ul>
<li>used <a href="https://github.com/fog/fog">fog</a> to store the carrierwave uploaded images on AWS</li>
<li>needed to config heroku with the <code>heroku config:add ENV_VARIABLE=bucket-name -r staging</code> to make it work</li>
<li>in carrierwave.rb need to specify the <code>config.fog_host</code>, but this is NOT the right method. It is supposed to be <code>config.asset_host</code>

<ul>
<li>implemented via <a href="https://github.com/carrot/rolex-world-of-rolex/commit/b58dbf36c38a3932c51eeab1700ac09171cae338">this commit</a></li>
<li>and <a href="http://stackoverflow.com/questions/13041498/undefined-method-fog-host">corrected by</a>

<ul>
<li>also push the config variable via <code>heroku config:add CLOUDFRONT='&lt;cloudfront URL&gt;' -r staging</code></li>
</ul>
</li>
<li><a href="http://stackoverflow.com/questions/10777712/carrierwave-s3-how-to-specify">this post was helpful</a></li>
</ul>
</li>
</ul>


<h3>xip.io</h3>

<ul>
<li>Construct your xip.io domain by appending your application&#8217;s name to your LAN IP address followed by .xip.io. For example, if your development computer&#8217;s LAN IP address is 10.0.1.43, you can visit myapp.dev from another computer on your local network using the URL http://myapp.10.0.1.43.xip.io/. <a href="http://pow.cx/manual.html#section_2.1.5">via</a></li>
</ul>


<h3>Sweepers and caching actions</h3>

<ul>
<li><code>caches_action :index</code> is all that is needed to cache an action <a href="http://api.rubyonrails.org/classes/ActionController/Caching/Actions.html">via</a></li>
<li><code>cache_sweeper :event_sweeper</code> is added to the Events controller to trigger the sweeper&#8230;</li>
<li>Cache sweeping is a mechanism which allows you to get around having a ton of expire_{page,action,fragment} calls in your code. It does this by moving all the work required to expire cached content into an ActionController::Caching::Sweeper subclass. This class is an observer and looks for changes to an object via callbacks, and when a change occurs it expires the caches associated with that object in an around or after filter.</li>
<li><a href="http://guides.rubyonrails.org/caching_with_rails.html#sweepers">Rails Guide</a></li>
<li><p>also need to turn on <code>config.cache_store = :dalli_store, ENV['MEMCACHE_SERVERS']</code></p></li>
<li><p>In the context of ActiveAdmin</p>

<ul>
<li>We weren&#8217;t expiring the events index page, but were rather expiring the ActiveAdmin page instead. <a href="http://stackoverflow.com/questions/11600087/how-do-i-expire-home-page-cache-when-an-article-is-updated">This solved the problem</a>, but more specifically specifying the controller.

<ul>
<li>see <a href="https://github.com/carrot/rolex-world-of-rolex/commit/1a217f8b2f8e1ba49a79c2b07dab4347c30604b0">here</a></li>
</ul>
</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Another new MacBook Air load]]></title>
    <link href="http://www.adamjonas.com/blog/another-new-macbook-air-load/"/>
    <updated>2013-03-12T13:34:00-04:00</updated>
    <id>http://www.adamjonas.com/blog/another-new-macbook-air-load</id>
    <content type="html"><![CDATA[<h3>RBENV</h3>

<ul>
<li>ran into a pow issue not recognizing my gemset -> similar <a href="https://github.com/37signals/pow/issues/202">issue to the one here</a> and <a href="http://thelucid.com/2012/10/11/pow-meet-rbenv/">here</a>.

<ul>
<li>it ended up because I had installed rbenv with homebrew which meant it was in the opts directory. What a pain.</li>
</ul>
</li>
<li>the rbenv install went pretty smoothly save for that. Used [this as a guide](http://www.bounga.org/ruby/2012/02/06/pow-using-rbenv/.</li>
</ul>


<h3>PSQL</h3>

<ul>
<li><p>the install went much smoother this time. I used this <a href="http://stackoverflow.com/questions/12028037/postgres-app-could-not-start-on-port-5432/13847738#13847738">ref</a> when I ran into problems.</p></li>
<li><p><a href="http://stackoverflow.com/questions/6867401/postgres-postgresql-fatal-database-ew-dev-does-not-exist">this helped</a> on my old air&#8230; the app installed without a hitch, but I was missing the creating of the databases.</p></li>
<li><p>when the psql app wasn&#8217;t active</p>

<p>♕ psql
psql: could not connect to server: No such file or directory
  Is the server running locally and accepting
  connections on Unix domain socket &#8220;/var/pgsql_socket/.s.PGSQL.5432&#8221;?</p></li>
<li><p>after turning it on, I got this</p>

<p>♕ psql
psql: FATAL:  database &#8220;Ajonas&#8221; does not exist</p></li>
<li><p>the PATH clearly isn&#8217;t right, but by adding <code>rake db:create:all</code> I got the app to bootup.</p></li>
</ul>


<h3>Bundler and Octopress reinstall</h3>

<ul>
<li>bundler wasn&#8217;t recognized because of the different ruby version. Installed the new version and <code>gem install bundler</code> as [advised](http://stackoverflow.com/questions/7483515/rake-aborted-no-such-file-to-load-bundler-setup-rails-3-1.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[KCA 4]]></title>
    <link href="http://www.adamjonas.com/blog/kca-4/"/>
    <updated>2013-03-12T13:26:00-04:00</updated>
    <id>http://www.adamjonas.com/blog/kca-4</id>
    <content type="html"><![CDATA[<h3>Google Analytics</h3>

<ul>
<li>We passed in the <a href="https://developers.google.com/analytics/devguides/collection/gajs/eventTrackerGuide">onclick trackers</a> as <a href="http://stackoverflow.com/questions/4274002/rails-link-to-ruby-variable-in-onclick-javascript">options</a></li>
<li>This the gem we used to install the UA code in the footer, also used this for <a href="https://raw.github.com/carrot/hw-packages-private/master/google_analytics.rb?login=tmilewski&amp;token=2e0a477e5793c263c3ba48d191995233">reference</a>.</li>
</ul>


<h3>Arel</h3>

<ul>
<li>[Some cool arel queries](http://stackoverflow.com/questions/4402815/is-there-a-particularly-elegant-way-to-do-a-count-query-with-rails-3-arel.</li>
<li>used a lamba as shown <a href="http://stackoverflow.com/questions/5284696/how-can-i-search-date-range-in-rails-with-%20variable-date">here</a>, because otherwise the queries will be cached and we were running queries for a day to day basis.</li>
<li>ARel has some good <a href="https://github.com/rails/arel">documentation.</a></li>
</ul>


<h3>Local Storage</h3>

<ul>
<li>used <a href="https://github.com/marcuswestin/store.js">store.js</a></li>
<li>nice <a href="http://javascriptplayground.com/blog/2012/06/javascript-local-storage-store-js-tutorial">little screencast</a></li>
<li>here is an <a href="http://coding.smashingmagazine.com/2010/10/11/local-storage-and-how-to-use-it/">older article</a> from 2010</li>
<li><em>NOTE:</em> We ended up using <a href="https://github.com/marcuswestin/store.js/blob/master/store%2Bjson2.min.js">store.js with json</a> because ie7 apparently doesn&#8217;t come equiped with JSON. Tom and I broke our heads trying to figure out why <code>store.enabled</code> wasn&#8217;t <code>true</code> for ie7. It came down to the fact that ie7 didn&#8217;t have JSON.</li>
</ul>


<p>Thought this was a cool little way to store whether a td square had been clicked on&#8230;</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>addRedTiles: -&gt;
</span><span class='line'>  selected = store.get("board_#{@board_id}")
</span><span class='line'>
</span><span class='line'>  for tile_number in selected
</span><span class='line'>    $("[data-title-num=#{tile_number}]").addClass('clicked_space')
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>duringBoardClick: -&gt;
</span><span class='line'>  if store.enabled
</span><span class='line'>    $('td').click =&gt;
</span><span class='line'>      $(event.target).toggleClass('clicked_space')
</span><span class='line'>      clicked_tiles = []
</span><span class='line'>      all_clicked = $('td.clicked_space')
</span><span class='line'>
</span><span class='line'>      for tile in all_clicked
</span><span class='line'>        clicked_tiles.push $(tile).attr('data-title-num')
</span><span class='line'>
</span><span class='line'>      store.set("board_#{@board_id}", clicked_tiles)
</span><span class='line'>  else
</span><span class='line'>    console?.log? 'store is not enabled'</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>This needed to be updated b/c of event.targer</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">duringBoardClick</span><span class="o">:</span> <span class="o">-&gt;</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">store</span><span class="p">.</span><span class="nx">enabled</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">board_id</span> <span class="o">=</span> <span class="err">@</span><span class="nx">board_id</span>
</span><span class='line'>    <span class="err">\\</span><span class="nx">notice</span> <span class="nx">that</span> <span class="nx">I</span> <span class="nx">declared</span> <span class="nx">the</span> <span class="nx">above</span> <span class="nx">variable</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;td&#39;</span><span class="p">).</span><span class="nx">click</span> <span class="o">-&gt;</span> <span class="err">\\</span><span class="nx">and</span> <span class="nx">changed</span> <span class="k">this</span> <span class="nx">to</span> <span class="nx">a</span> <span class="nx">single</span> <span class="o">-&gt;</span>
</span><span class='line'>      <span class="nx">$</span><span class="p">(</span><span class="err">@</span><span class="p">).</span><span class="nx">toggleClass</span><span class="p">(</span><span class="s1">&#39;clicked_space&#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">clicked_tiles</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>      <span class="nx">all_clicked</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;td.clicked_space&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">for</span> <span class="nx">tile</span> <span class="k">in</span> <span class="nx">all_clicked</span>
</span><span class='line'>        <span class="nx">clicked_tiles</span><span class="p">.</span><span class="nx">push</span> <span class="nx">$</span><span class="p">(</span><span class="nx">tile</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;data-title-num&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="nx">store</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s2">&quot;board_#{board_id}&quot;</span><span class="p">,</span> <span class="nx">clicked_tiles</span><span class="p">)</span>
</span><span class='line'>      <span class="err">\\</span><span class="nx">board</span> <span class="nx">then</span> <span class="nx">becomes</span> <span class="nx">a</span> <span class="nx">local</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="nx">console</span><span class="o">?</span><span class="p">.</span><span class="nx">log</span><span class="o">?</span> <span class="s1">&#39;store is not enabled&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>I think this was the first time I used the <a href="http://stackoverflow.com/questions/7398354/in-coffeescript-how-do-you-append-a-value-to-an-array">push method</a> in coffeescript.</p>

<h3>Z-index</h3>

<ul>
<li>in order to use z-index you need to use the position absolute, relative, or fixed as mentioned <a href="http://www.w3schools.com/cssref/pr_pos_z-index.asp">here</a></li>
</ul>


<h3>SASS</h3>

<ul>
<li><code>&gt;*</code> selects all the elements in the selector</li>
</ul>


<h3>PG backups</h3>

<ul>
<li>Backing up a larger DB on heroku -> <a href="https://devcenter.heroku.com/articles/pgbackups">docs</a></li>
</ul>


<h3>Anchor in a path helper</h3>

<ul>
<li>pass it in as an option <code>redirect_to post_path(comment.post, :anchor =&gt; "comment-#{comment.id}")</code> -> <a href="http://stackoverflow.com/questions/4981029/how-do-you-use-anchors-for-ids-in-routes-in-rails-3">from</a></li>
</ul>


<h3>Regex</h3>

<ul>
<li>remember there is no whitespacing in regex

<ul>
<li><code>background_\w|clicked_space</code> not <code>background_\w | clicked_space</code></li>
</ul>
</li>
</ul>


<h3>Background images in mobile</h3>

<ul>
<li>need to make sure to explicity define the background image and background size for mobile</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[KCA 3]]></title>
    <link href="http://www.adamjonas.com/blog/kca-3/"/>
    <updated>2013-02-15T10:14:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/kca-3</id>
    <content type="html"><![CDATA[<ul>
<li><p>Everytime you clone a project you get its full history&#8230;</p>

<ul>
<li>to get a specific commit

<ul>
<li><code>$ git checkout -b aNewBranch SHA1</code> with SHA1 representing the commit id from which you want to proceed.</li>
</ul>
</li>
</ul>
</li>
<li><p>config env variables on heroku</p>

<ul>
<li><code>heroku config:add FACEBOOK_APP_TOKEN='&lt;tokenhere&gt;' --remote staging</code></li>
</ul>
</li>
<li><p><code>rake deploy:staging</code> but need to make sure staging db is up to date <code>rake db:migrate RAILS_ENV=staging</code></p></li>
<li><p>custom actions are for dream big are <a href="https://github.com/carrot/target-dream-big/blob/develop/app/controllers/facebook_controller.rb">here</a></p></li>
<li><p><code>git bisect</code> -> <a href="http://git-scm.com/book/en/Git-Tools-Debugging-with-Git">docs</a></p></li>
</ul>


<h3>Expect syntax</h3>

<ul>
<li>remember to not including whitespaces between expect and the parentheses

<ul>
<li>correct -> <code>expect(sm.current_number_of_boards).to eq 24</code></li>
<li>incorrect -> <code>expect (sm.current_number_of_boards).to eq 24</code></li>
</ul>
</li>
</ul>


<h3>Testing the cache</h3>

<ul>
<li><p>it&#8217;s not easy to test the cache.</p>

<ul>
<li>one problem is that when you write to the cache you are affecing the dev cache</li>
</ul>
</li>
<li><p>can clear the cache with <code>Rails.cache.clear</code> <a href="http://stackoverflow.com/questions/10443535/manually-clear-fragment-cache-in-rails">found here</a></p></li>
<li><p><a href="http://broadcastingadam.com/2011/05/advanced_caching_in_rails/">complicated caching</a></p></li>
</ul>


<h3>Progress bar</h3>

<ul>
<li><a href="http://stackoverflow.com/questions/7190898/progress-bar-with-html-and-css?lq=1">stackoverflow</a></li>
</ul>


<h3>HAML</h3>

<ul>
<li>partial -> <code>= render :partial =&gt; "partial_name"</code></li>
<li>yield -> <code>#masthead= yield :masthead</code></li>
<li>setting a variable in HAML -> <code>- check_mark = image_tag("http://placehold.it/21x21", class: 'check')</code> need the <code>-</code></li>
<li>submit button -> <code>%input{:type =&gt; "submit", :value =&gt; "Send", :class =&gt; "button"}</code></li>
</ul>


<figure class='code'><figcaption><span>sweet helper allows you to reduce whitespace</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">=</span> <span class="n">surround</span> <span class="s1">&#39;GiftCard&#39;</span><span class="p">,</span> <span class="s1">&#39;.&#39;</span> <span class="k">do</span>
</span><span class='line'>   <span class="o">%</span><span class="n">sup</span> <span class="o">&amp;</span><span class="n">reg</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>There are a bunch <a href="http://haml.info/docs/yardoc/Haml/Helpers.html">in the docs.</a></p>

<h3>Content_for</h3>

<figure class='code'><figcaption><span>Using content_for</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">% content_for </span><span class="ss">:not_authorized</span> <span class="k">do</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  alert(&#39;You are not authorized to do that!&#39;)</span>
</span><span class='line'><span class="sx">&lt;% end %&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#You can then use content_for :not_authorized anywhere in your templates.</span>
</span><span class='line'><span class="o">&lt;</span><span class="sx">%= content_for :not_authorized if current_user.nil? %&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sx">#This is equivalent to:</span>
</span><span class='line'><span class="sx">&lt;%=</span> <span class="k">yield</span> <span class="ss">:not_authorized</span> <span class="k">if</span> <span class="n">current_user</span><span class="o">.</span><span class="n">nil?</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="http://apidock.com/rails/ActionView/Helpers/CaptureHelper/content_for">Api-dock</a></li>
</ul>


<h3>Escaping a space</h3>

<ul>
<li><code>&amp;nbsp;</code></li>
<li><a href="9http://www.samuelhwong.com/blog/2011/09/29/quick-tip-ascii-codes-and-link-to/">ascii character in link_to</a>, just add <code>.html_safe</code></li>
</ul>


<h3>Creating or updating many records at a time in rails</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#creating new records</span>
</span><span class='line'><span class="o">[</span><span class="s2">&quot;array&quot;</span> <span class="s2">&quot;of&quot;</span> <span class="s2">&quot;strings&quot;</span><span class="o">].</span><span class="n">each_with_index</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="p">,</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>  <span class="no">Tile</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="n">t</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#updating existing records</span>
</span><span class='line'><span class="o">[</span><span class="s2">&quot;array&quot;</span> <span class="s2">&quot;of&quot;</span> <span class="s2">&quot;strings&quot;</span><span class="o">].</span><span class="n">each_with_index</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="p">,</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>  <span class="no">Tile</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">update_attribute</span><span class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="n">t</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Collection in routes</h3>

<figure class='code'><figcaption><span>Need collection to lose the id requirement</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">resources</span> <span class="ss">:superlatives</span><span class="p">,</span> <span class="ss">:only</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="ss">:create</span><span class="o">]</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">collection</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">post</span> <span class="ss">:skip</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>.length</h3>

<p>You can look for the number of instances in the DOM and update it accordingly if there are the right number. I used this when I was updating the DOM and to see if the page had 3 classes indicating that three friends had been nominated.</p>

<figure class='code'><figcaption><span>Need collection to lose the id requirement</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">if</span> <span class="err">$</span><span class="p">(</span><span class="s1">&#39;div.friend-nomination&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">length</span> <span class="o">==</span> <span class="mi">3</span>
</span><span class='line'>  <span class="n">console?</span><span class="o">.</span><span class="n">log?</span> <span class="s1">&#39;this has three&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Heroku console</h3>

<ul>
<li><code>heroku run rails console --remote &lt;name of branch&gt;</code> or <code>heroku run console -r &lt;name of branch&gt;</code> for short</li>
</ul>


<h3>CSS Positioning</h3>

<ul>
<li><a href="http://www.barelyfitz.com/screencast/html-training/css/positioning/">old but cool little reference</a></li>
</ul>


<h3>Print Stylesheets</h3>

<ul>
<li>had a problem with getting the @media print file to recognize the sass styling that I was writing. Discovered that every single element needed to be to explicitly defined for it to work&#8230;. what a pain in the ass.</li>
</ul>


<h3>JQuery Migrate</h3>

<ul>
<li> Was removed from the <a href="https://github.com/jquery/jquery-migrate/">jquery core</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Paypal integration]]></title>
    <link href="http://www.adamjonas.com/blog/paypal-integration/"/>
    <updated>2013-02-08T14:45:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/paypal-integration</id>
    <content type="html"><![CDATA[<h3>IPN</h3>

<blockquote><p>instant payment notification</p></blockquote>

<ul>
<li>Paypal will provide an asynch call made to our server from paypal to update us of the status.

<ul>
<li>this is asynch so it could take a few seconds or it could take more.</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[KCA 2]]></title>
    <link href="http://www.adamjonas.com/blog/kca-2/"/>
    <updated>2013-02-06T13:40:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/kca-2</id>
    <content type="html"><![CDATA[<h3>Heroku</h3>

<ul>
<li><code>git push staging develop:master</code></li>
</ul>


<h3>FB</h3>

<ul>
<li>target &#8216;_top&#8217; will put the new window on top</li>
<li><code>http://app.facebook.com/name-space</code></li>
<li>make sure to disable secure browsing in FB</li>
<li><p>change fields from address <code>state</code> to <code>state_loc</code> to avoid collisions with state machine gems like transitions</p></li>
<li><p>can simulate mobile with overrides in the inspector</p></li>
<li><p><code>heroku run rake db:migrate --remote staging</code></p></li>
<li><code>heroku config:add &lt;env variable&gt; &lt;env variable&gt;</code></li>
<li><p><code>heroku log --remote staging</code></p></li>
<li><p><code>.shuffle</code> method</p></li>
<li><code>.floor</code> returns an integer</li>
<li><p>if diving two integers you need to th make sure one of them is a float</p></li>
<li><p>In routes, <code>member do</code> block adds a resource on a specific record, while collect do</p></li>
<li><p>in config/application.rb in order to load libs automatically need to change config to <code>config.autoload_paths += %W(#{config.root}/lib)</code></p></li>
<li><p><code>has_mobile_fu false</code> in appcontroller, need false</p></li>
<li><p><a href="https://github.com/voxdolo/decent_exposure">decent exposure</a></p>

<ul>
<li><ul>
<li><code>expose(:articles) { current_user.articles }</code> scopes articles belonging to that user</li>
</ul>
</li>
</ul>
</li>
<li><p>output the boards on board show page, new board page, and how to play</p></li>
<li><p><a href="http://apidock.com/rails/ActionView/Helpers/TagHelper/content_tag">content tag</a></p>

<ul>
<li>need to use .html_safe</li>
</ul>
</li>
<li><p>to start memcache <code>/usr/local/opt/memcached/bin/memcached</code></p></li>
<li><p>deploy to heroku staging with <code>git push staging develop:master</code></p></li>
<li><p>creating a table with content tags in a helper</p></li>
<li><code>.update_attribute!</code> versus <code>.update_attribute</code> -> raise an exception rahter than false.</li>
</ul>


<h3>Tests</h3>

<ul>
<li>Make sure to migrate the Test DB -> <code>rake db:migrate RAILS_ENV=test</code></li>
<li><code>watchr .watchr</code></li>
<li>using <a href="http://robots.thoughtbot.com/post/23673635798/remove-duplication-with-factorygirls-traits">traits with Factory Girl</a></li>
<li><a href="http://myronmars.to/n/dev-blog/2012/06/rspecs-new-expectation-syntax">expect syntax</a></li>
<li>rake start to start spork</li>
<li>{:id => board.id}.merge(opts)</li>
</ul>


<h3>HAML</h3>

<ul>
<li><code>= f.hidden_field :customer_id, value: @customer.id</code> <a href="http://stackoverflow.com/questions/10387077/rails3-hidden-field-in-haml">from</a></li>
<li><a href="http://html2haml.heroku.com/">html to haml</a></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.shuffle.hidden
</span><span class='line'>.delete.hidden</span></code></pre></td></tr></table></div></figure>


<p>Makes divs with classes above</p>

<ul>
<li><a href="http://9elements.github.com/haml-coffee/classes/Haml.html">HAML id and class declaration</a></li>
<li>passing in partials with locals on <a href="http://stackoverflow.com/questions/5255874/rendering-partial-with-locals-in-haml">stackoverflow</a></li>
</ul>


<h3>Ajax with coffeescript</h3>

<p>Used the call below to make a friend request.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>getFriends: (callback) -&gt;
</span><span class='line'>    FB.api '/me/friends', (response) =&gt; 
</span><span class='line'>      $.each response.data, (k, v) =&gt;
</span><span class='line'>        @friends.push({ label: v.name, value: v.id })
</span><span class='line'>      callback()</span></code></pre></td></tr></table></div></figure>


<p>The callback is to ensure that other function do not proceed before the friends are loaded asynchronously.</p>

<h3>Auto-complete with JQuery UI</h3>

<ul>
<li>Got it from <a href="http://jqueryui.com/autocomplete/#custom-data">here</a></li>
<li>also loaded the js and css minified versions in the lib directory.</li>
<li>there was a small change to be made, <a href="http://stackoverflow.com/questions/9513251/cannot-set-property-renderitem-of-undefined-jquery-ui-autocomplete-with-html">documented here</a></li>
</ul>


<h3>Javascript to coffee</h3>

<ul>
<li><p><a href="http://js2coffee.org/">really cool site</a></p></li>
<li><p>Posting to a wall, note the method and the <code>:to</code> method, taken mostly from <a href="http://developers.facebook.com/docs/reference/dialogs/feed/">here</a></p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  sendMessage: (fb_uid, details = {}) -&gt;
</span><span class='line'>    obj =
</span><span class='line'>      to: fb_uid
</span><span class='line'>      method: "feed"
</span><span class='line'>      redirect_uri: "http://kca.dev"
</span><span class='line'>      link: "http://google.com"
</span><span class='line'>      picture: "http://fbrell.com/f8.jpg"
</span><span class='line'>      name: "Facebook Dialogs"
</span><span class='line'>      caption: "Reference Documentation"
</span><span class='line'>      description: "Using Dialogs to interact with users."
</span><span class='line'>
</span><span class='line'>    obj = $.extend obj, details
</span><span class='line'>
</span><span class='line'>    FB.ui obj, -&gt;
</span><span class='line'>      alert 'posted'</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p><code>= link_to "Something", some_path, :method =&gt; :post</code></p></li>
<li><p><strong>Need to remember to add () after a method call</strong></p></li>
<li>defaults to auth user if no <code>to:</code> method</li>
<li><a href="https://github.com/raganwald/homoiconic/blob/master/2012/09/lexical-scope-in-coffeescript.md">discussion on lexical scope</a></li>
</ul>


<h3>Counter_cache</h3>

<ul>
<li>In the model -> <code>belongs_to :project, :counter_cache =&gt; true</code></li>
<li><a href="http://railscasts.com/episodes/23-counter-cache-column">railscast #23</a></li>
</ul>


<h3>Jquery</h3>

<ul>
<li><code>$("div,p,span")</code> this works as a multiple selector</li>
<li><a href="http://stackoverflow.com/questions/1992114/how-do-you-create-a-hidden-div-that-doesnt-create-a-line-break-or-horizontal-sp">hidden divs</a></li>
</ul>


<h3>Selecting a winner</h3>

<ul>
<li>use the <a href="https://github.com/spilliton/randumb">randumb gem</a></li>
</ul>


<h3>Migrate test db</h3>

<ul>
<li><code>ake db:migrate RAILS_ENV=test</code></li>
</ul>


<h3>No merge message for a no-ff flag</h3>

<ul>
<li><code>--no-edit</code></li>
</ul>


<h3>FB app auto-grow</h3>

<ul>
<li><a href="http://stackoverflow.com/questions/9197411/facebook-iframe-fb-canvas-setautogrow-does-not-auto-grow-after-initial-load">auto-grow canvas in fb app</a></li>
</ul>


<h3>Gem from a git url</h3>

<ul>
<li><code>gem 'redcarpet', :git =&gt; 'git://github.com/tanoku/redcarpet.git'</code></li>
</ul>


<h3>With an options hash</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">facepile</span><span class="p">(</span><span class="o">*</span><span class="n">options</span><span class="p">)</span>
</span><span class='line'><span class="n">opts</span> <span class="o">=</span> <span class="p">{</span><span class="ss">:href</span> <span class="o">=&gt;</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;FACEBOOK_APP_URL&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>        <span class="ss">:max_rows</span> <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>        <span class="ss">:width</span> <span class="o">=&gt;</span> <span class="mi">300</span><span class="p">,</span>
</span><span class='line'>        <span class="ss">:show_count</span> <span class="o">=&gt;</span> <span class="kp">true</span> <span class="p">}</span>
</span><span class='line'><span class="n">opts</span><span class="o">.</span><span class="n">merge!</span><span class="p">(</span><span class="n">options</span><span class="o">.</span><span class="n">first</span><span class="p">)</span> <span class="k">unless</span> <span class="n">options</span><span class="o">.</span><span class="n">empty?</span>
</span><span class='line'>
</span><span class='line'><span class="k">raise</span> <span class="s2">&quot;Must provide a :url option parameter or ENV[&#39;FACEBOOK_APP_URL&#39;]&quot;</span> <span class="k">unless</span> <span class="n">opts</span><span class="o">[</span><span class="ss">:href</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="sx">%Q{</span>
</span><span class='line'><span class="sx">&lt;div class=&quot;fb-facepile&quot; </span>
</span><span class='line'><span class="sx">data-href=&quot;</span><span class="si">#{</span><span class="n">opts</span><span class="o">[</span><span class="ss">:href</span><span class="o">]</span><span class="si">}</span><span class="sx">&quot; </span>
</span><span class='line'><span class="sx">data-max-rows=&quot;</span><span class="si">#{</span><span class="n">opts</span><span class="o">[</span><span class="ss">:max_rows</span><span class="o">]</span><span class="si">}</span><span class="sx">&quot;</span>
</span><span class='line'><span class="sx">data-show-count=&quot;</span><span class="si">#{</span><span class="n">opts</span><span class="o">[</span><span class="ss">:show_count</span><span class="o">]</span><span class="si">}</span><span class="sx">&quot;</span>
</span><span class='line'><span class="sx">data-width=&quot;</span><span class="si">#{</span><span class="n">opts</span><span class="o">[</span><span class="ss">:width</span><span class="o">]</span><span class="si">}</span><span class="sx">&quot;&gt;</span>
</span><span class='line'><span class="sx">&lt;/div&gt;</span>
</span><span class='line'><span class="sx">}</span><span class="o">.</span><span class="n">html_safe</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>FB invite friends</h3>

<figure class='code'><figcaption><span>in coffeescript</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">inviteFriend</span><span class="p">:</span> <span class="o">-&gt;</span>
</span><span class='line'>  <span class="n">obj</span> <span class="o">=</span>
</span><span class='line'>    <span class="nb">method</span><span class="p">:</span> <span class="s1">&#39;apprequests&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">message</span><span class="p">:</span> <span class="s1">&#39;Come check this out&#39;</span>
</span><span class='line'>
</span><span class='line'>  <span class="no">FB</span><span class="o">.</span><span class="n">ui</span> <span class="n">obj</span><span class="p">,</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="n">alert</span> <span class="s1">&#39;invited&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Delpoy</h3>

<ul>
<li><code>rake deploy:staging</code> and <code>rake deploy:production</code></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MacPro Set Up]]></title>
    <link href="http://www.adamjonas.com/blog/macpro-set-up/"/>
    <updated>2013-02-06T13:26:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/macpro-set-up</id>
    <content type="html"><![CDATA[<ul>
<li><p>My postgres paths were screwed up. <a href="http://stackoverflow.com/questions/12028037/postgres-app-could-not-start-on-port-5432/13847738#13847738">This helped</a></p></li>
<li><p>need to install bundler for every ruby install</p></li>
<li><p>Pow path was screwed up. Need to create and set paths in <code>.powconfig</code> file.</p></li>
<li><p>needed to rm symlink for git completion per the discussion <a href="https://github.com/mxcl/homebrew/issues/16992#issuecomment-13162321">here</a></p></li>
<li><p>opens up the same terminal tab in a new window&#8230;</p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#opens new tab in same dir
</span><span class='line'>precmd () {print -Pn "\e]2; %~/ \a"}
</span><span class='line'>preexec () {print -Pn "\e]2; %~/ \a"}</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[KCA]]></title>
    <link href="http://www.adamjonas.com/blog/kca/"/>
    <updated>2013-02-05T14:37:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/kca</id>
    <content type="html"><![CDATA[<ul>
<li><code>rails g model Model attr:string{75}</code> 75 is the char limit</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Person</span><span class="o">.</span><span class="n">pluck</span><span class="p">(</span><span class="ss">:id</span><span class="p">)</span> <span class="c1"># SELECT people.id FROM people</span>
</span><span class='line'><span class="no">Person</span><span class="o">.</span><span class="n">uniq</span><span class="o">.</span><span class="n">pluck</span><span class="p">(</span><span class="ss">:role</span><span class="p">)</span> <span class="c1"># SELECT DISTINCT role FROM people</span>
</span><span class='line'><span class="no">Person</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="ss">:confirmed</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">)</span><span class="o">.</span><span class="n">limit</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span><span class="o">.</span><span class="n">pluck</span><span class="p">(</span><span class="ss">:id</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Devise -> <code>gem 'devise'</code>, then <code>rails g install devise</code></li>
<li><code>rails g devise &lt;model&gt;</code></li>
<li><code>rails g devise:views</code></li>
<li>more steps on <a href="https://github.com/carrot/hw-packages-private/blob/master/devise.rb">github</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Angular Skillshare]]></title>
    <link href="http://www.adamjonas.com/blog/angular-skillshare/"/>
    <updated>2013-02-04T19:11:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/angular-skillshare</id>
    <content type="html"><![CDATA[<h2>Single Page apps with Angular.js</h2>

<ul>
<li><a href="http://docs.angularjs.org/guide/">Angular docs</a>

<ul>
<li>looks like a templating system, but more like a lightweight framework</li>
<li>designed to be testable</li>
</ul>
</li>
</ul>


<h3>Quick ways to learn any client MVC js</h3>

<ul>
<li><a href="http://addyosmani.github.com/todomvc/">TodoMVC</a></li>
</ul>


<h3>Angular</h3>

<ul>
<li><code>ng-model</code> is a way of describing the parameters that are bound to it</li>
</ul>


<h3>Extensions</h3>

<ul>
<li><a href="https://github.com/angular/angularjs-batarang">batarang</a>

<ul>
<li><a href="http://www.youtube.com/embed/q-7mhcHXSfM">Tutorial screencast</a></li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Doug Crockfords Javascript Lectures]]></title>
    <link href="http://www.adamjonas.com/blog/doug-crockfords-javascript-lectures/"/>
    <updated>2013-02-02T19:38:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/doug-crockfords-javascript-lectures</id>
    <content type="html"><![CDATA[<p>Thomas Edison was the first person to reference a bug. Grace Hopper actually found a moth in her machine.</p>

<p>The prototype model is poorly named but you can build enormously complext object-oriented systems. You don&#8217;t need classes.</p>

<p>Javascript inherited aspects of java, scheme, and self. The bad parts of js were mostly a function of being built in haste&#8211; it was created by netscape in 10 days.</p>

<ul>
<li>Object have prototype properties:

<ul>
<li><code>Object.getPrototype(object)</code> copies the object, something they did have befor</li>
<li><p><code>Object.create(object, properties)</code> -> creates a new object</p></li>
<li><p>Crockford doesn&#8217;t use Object.new rather he thinks prototypally, so he uses <code>Object.create</code></p></li>
<li><code>Object.create(null)</code> can take null as a parameter so you get a pristine object</li>
<li>the enumerator is exposed so you can set it as true or false.</li>
<li>keys must be strings</li>
<li><p>can find if an object is extensible and you can set it to not extensible with <code>Object.preventExtensible</code>, <code>Object.seal</code> and <code>Object.freeze</code> -> immuatble objects</p></li>
<li><p>There is only one number type in JS. Memory is no longer a problem. So why create smaller types of numbers? In JS they didn&#8217;t. Prevents a whole class of errors.</p></li>
<li>Associateive law does not hold. (41 min)

<ul>
<li>decimal fractions are approximate ->  So if A, B, and C are 0.1 + 0.2. + 0.3, they do not associate. This is a real problem because the world works on the decimal system. Especially money.

<ul>
<li>to solve, turn them into integers. e.g. with money, work in cents.</li>
</ul>
</li>
</ul>
</li>
<li>All numbers inherit from the <code>number.prototype</code>.</li>
<li>numbers are first class objects-> a number can be stored as a var, can be passed in a param, can be returned as a function, can be stored as an object (java cannot do this)</li>
<li>Math function should be part of number, but they aren&#8217;t</li>
<li><p>Nan, not a number, but it is a number. You don&#8217;t get back an exception with bad math, you get a bad value.</p>

<ul>
<li>NaN is not equal to NaN, but NaN === NaN is true. This is appaling.</li>
</ul>
</li>
<li><p>Boolean</p></li>
<li><p><strong>Strings</strong> -> no one knows why they are called strings.</p>

<ul>
<li>JavaScript tolerates the surrogate characters but has no knowledge of them, so if you have a string containing one surrogate character, JavaScript thinks it is a string with two characters in it. The counts will be wrong and you&#8217;ve got to be really careful when you do your substring operations because you donít want to split those things.</li>
<li>strings are frozen.</li>
<li>similar strings are equal (===)</li>
<li>no type char, an individual character is just a short string</li>
<li>string literals can use single or double quotes with \ escapements</li>
<li>can convert a number to string with <code>str = num.toString();</code> or <code>str = String(num);</code> except the first will throw an exception for null or undefined</li>
<li>convert a string to num with <code>num = Number(str)</code> or <code>num = +str</code></li>
<li>parseInt(str, 10), converts the value into a number. It stops at the first non-digit character.

<ul>
<li><code>parseInt("12em") === 12</code></li>
<li>The radix(10) should always be used

<ul>
<li><code>parseInt("08") === 0</code></li>
<li><code>parseInt("08", 10) === 8</code></li>
</ul>
</li>
<li>(56 min) string</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Coil]]></title>
    <link href="http://www.adamjonas.com/blog/coil/"/>
    <updated>2013-01-30T10:46:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/coil</id>
    <content type="html"><![CDATA[<h3>Git Workflow</h3>

<ul>
<li><a href="http://nvie.com/posts/a-successful-git-branching-model/">git workflow</a></li>
</ul>


<h3>Powder</h3>

<ul>
<li><a href="http://pow.cx/">pow</a></li>
<li><code>binding.remote_pry</code> in the code to drop into pry. Also need to have <code>pry-remote</code> open in a terminal window.</li>
<li><code>powder applog</code> -> is like trace for pow</li>
<li>to output notices to the log <code>logger.debug "message"</code></li>
</ul>


<h3>Hooks</h3>

<ul>
<li><p><a href="https://help.github.com/articles/post-receive-hooks">post-receive hooks</a></p>

<ul>
<li><a href="http://developer.github.com/v3/repos/hooks/#pubsubhubbub">Pubsubhubbub</a></li>
</ul>
</li>
<li><p>wrote a rake task to hit the route with <a href="https://github.com/jnunemaker/httparty">httparty</a></p>

<ul>
<li>This <a href="http://stackoverflow.com/questions/6154176/changing-body-type-to-json-using-httparty">stackoverflow post</a> helped</li>
</ul>
</li>
<li><p>need to <a href="http://guides.rubyonrails.org/layouts_and_rendering.html"><code>render :nothing =&gt; true</code></a> when hitting a controller acton that doesn&#8217;t render a view</p></li>
<li><p>Ran into an <code>uninitialized constant GitFetch</code> error. I actually remembered to restart my Redis server!!! (after 20 minutes)</p></li>
</ul>


<h3>Redis</h3>

<p>To access the Reds cli and flushall these are the commands&#8230;</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>♕ redis-cli
</span><span class='line'>redis&gt; flushall</span></code></pre></td></tr></table></div></figure>


<h3>Reg-ex</h3>

<p>reg expressions can kick out multiple match groups. These are accessible with array notion. <code>[0]</code> is always the matching string, <code>[1]</code> would be the first match, and <code>[2]</code> would be the second and so on. <a href="http://rubular.com/">Rubular</a> throws off the match groups for you to access.</p>

<figure class='code'><figcaption><span>e.g. of URL parse</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">p</span><span class="o">.</span><span class="n">slug</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">github_url</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="sr">/https:\/\/github\.com\/.*\/(.*)\.git/</span><span class="p">)</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="nb">p</span><span class="o">.</span><span class="n">repo_owner</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">github_url</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="sr">/https:\/\/github\.com\/(.*)\/.*\.git/</span><span class="p">)</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Disable CSRF</h3>

<ul>
<li>disabled the CSRF verifcation with <code>skip_before_filter :verify_authenticity_token</code> <a href="http://stackoverflow.com/questions/5669322/turn-off-csrf-token-in-rails-3">found at</a></li>
</ul>


<h3>Pubsubhubbub</h3>

<ul>
<li>think about subscribe or unsubscribe on pubsubhubbub

<ul>
<li>when to trigger the subscription? in an asynch worker? in the clone method</li>
<li>because you have have access to the process and the user?</li>
</ul>
</li>
<li>this can be easily called with Octokit (See below)</li>
</ul>


<h3>cURL</h3>

<p>We really shouldn&#8217;t be invoke cURL methods in the model or background job. Octokit allows users to easily subscribe to pubsubhubbub. <a href="https://github.com/pengwynn/octokit/blob/master/lib/octokit/client/pub_sub_hubbub.rb">It&#8217;s all here.</a></p>

<p>I was going to do this&#8230; but it wasn&#8217;t neccessary with octokit</p>

<figure class='code'><figcaption><span>Pubsubhubbub and cURL</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">curl</span> <span class="o">-</span><span class="n">u</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">user</span><span class="o">.</span><span class="n">nickname</span><span class="si">}</span><span class="s2">:</span><span class="si">#{</span><span class="n">user</span><span class="o">.</span><span class="n">password</span><span class="si">}</span><span class="s2">&quot;</span> <span class="o">-</span><span class="n">i</span> <span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">api</span><span class="o">.</span><span class="n">github</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">hub</span>
</span><span class='line'>  <span class="o">-</span><span class="n">F</span> <span class="s2">&quot;hub.mode=subscribe&quot;</span>
</span><span class='line'>  <span class="o">-</span><span class="n">F</span> <span class="s2">&quot;hub.topic=https://github.com/</span><span class="si">#{</span><span class="n">project</span><span class="o">.</span><span class="n">repo_owner</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">project</span><span class="o">.</span><span class="n">slug</span><span class="si">}</span><span class="s2">/events/push&quot;</span>
</span><span class='line'>  <span class="o">-</span><span class="n">F</span> <span class="s2">&quot;hub.callback=http://coil.io/hook/</span><span class="si">#{</span><span class="n">project</span><span class="o">.</span><span class="n">key</span><span class="si">}</span><span class="s2">&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Sidekiq best practices</h3>

<ul>
<li><a href="https://github.com/mperham/sidekiq/wiki/Best-Practices">WIKI</a></li>
</ul>


<h3>Parsing a yaml file of quotes</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">thing</span> <span class="o">=</span> <span class="no">YAML</span><span class="o">.</span><span class="n">load_file</span><span class="p">(</span><span class="s1">&#39;some.yml&#39;</span><span class="p">)</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">thing</span><span class="o">.</span><span class="n">inspect</span>
</span></code></pre></td></tr></table></div></figure>


<p>See <a href="http://stackoverflow.com/questions/3877004/how-do-i-parse-a-yaml-file">here</a></p>

<ul>
<li><a href="http://api.rubyonrails.org/classes/Hash.html#method-i-symbolize_keys">symbolize_keys()</a></li>
<li><a href="http://www.yaml.org/YAML_for_ruby.htm">Yaml cookbook was really helpful</a></li>
</ul>


<p>Formatted array of strings in YAML:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">-</span> <span class="s2">&quot;“We build but to tear down. Most of our work and resource is squandered. Our onward march </span>
</span><span class='line'><span class="s2">is marked by devastation. Everywhere there is an appalling loss of time, effort and life. A </span>
</span><span class='line'><span class="s2">cheerless view, but true”</span>
</span><span class='line'><span class="se">\n</span><span class="s2"> - Nikola Tesla, 1910&quot;</span>
</span><span class='line'><span class="o">-</span> <span class="s2">&quot;“If the genius of invention were to reveal to-morrow the secret of immortality, of eternal </span>
</span><span class='line'><span class="s2">beauty and youth, for which all humanity is aching, the same inexorable agents which prevent a </span>
</span><span class='line'><span class="s2">mass from changing suddenly its velocity would likewise resist the force of the new knowledge </span>
</span><span class='line'><span class="s2">until time gradually modifies human thought.”</span>
</span><span class='line'><span class="se">\n</span><span class="s2"> - Nikola Tesla, 1907&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Yaml is white space sensitive, but not new-line sensitive for strings as long as the new-line is within the the quotes.</p>

<p>I then selected a random element with the <a href="http://stackoverflow.com/questions/3482149/how-do-i-pick-randomly-from-an-array"><code>.sample</code> method</a>. Very cool.</p>

<h3>Slim</h3>

<p>Had to look in the <a href="http://rdoc.info/github/slim-template/slim#Control_code_-">Slim docs</a>. I was looking for output, which is controlled by the = sign. Figured it out after that&#8230;</p>

<h3>Testing</h3>

<ul>
<li>remember to migrate Test DB <code>rake environment RAILS_ENV=test db:migrate</code></li>
<li>add <a href="https://github.com/plataformatec/devise">test helpers for devise</a></li>
</ul>


<h3>Factory Girl</h3>

<ul>
<li>A factory generates test data to pass to the controller method; note the use of Factory Girl’s <code>attributes_for</code> option, which generates a hash of values as opposed to a Ruby object.</li>
<li>Rewatched the RailsCasts no. 158</li>
</ul>


<h3>Refactoring lessons</h3>

<ul>
<li>Don&#8217;t pass in more params than you need. It makes the unit testing harder and it isn&#8217;t neccessary.

<ul>
<li>refer to Sandi Metz&#8217;s comments about passing in a params hash if you are accessing multiple attributes of an object</li>
</ul>
</li>
</ul>


<h3>Random</h3>

<ul>
<li><a href="http://www.teslauniverse.com/nikola-tesla-quotes">Tesla quotes</a></li>
<li><a href="http://www.random.org/strings/">Random String Generator</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rugged]]></title>
    <link href="http://www.adamjonas.com/blog/rugged/"/>
    <updated>2013-01-29T16:26:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/rugged</id>
    <content type="html"><![CDATA[<p>Gists were redesigned with libgit2 gem with Rugged.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#In IRB
</span><span class='line'>require 'rugged'
</span><span class='line'>#git init the repo then...
</span><span class='line'>repo = Rugged::Repository.new('/file/path')
</span><span class='line'>
</span><span class='line'>#what worked
</span><span class='line'>index = repo.index
</span><span class='line'>repo.bare?
</span><span class='line'>repo.empty?
</span><span class='line'>tree= repo.lookup( repo.index.write_tree ) 
</span><span class='line'>
</span><span class='line'>#what didnt
</span><span class='line'>oid = rugged.write("This is a blob.", :blob) #didnt recognize rugged
</span><span class='line'>parents=[ repo.lookup( repo.head.target ).oid ]</span></code></pre></td></tr></table></div></figure>


<p>In this <a href="http://stackoverflow.com/questions/12649697/how-to-commit-with-ruby-bindings-for-libgit2/12651234">StackOverflow question</a> there seem to be some issues with the 0.16 build. They suggest to use the <code>gem install --prerelease rugged</code> for commits.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How I got an awesome job]]></title>
    <link href="http://www.adamjonas.com/blog/how-i-got-an-awesome-job/"/>
    <updated>2013-01-25T16:19:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/how-i-got-an-awesome-job</id>
    <content type="html"><![CDATA[<h2>Code changed my life</h2>

<p>On Thursday, I was offered a job with <a href="http://carrotcreative.com/">Carrot Creative</a> in a <a href="https://github.com/ajonas04/carrotfun/pull/1">very original way</a>. I made the decision to learn how to program less than a year ago and code delivered me a mentor, an embracing community, and now, a new job.</p>

<h3>The beginnings</h3>

<p>I wrote my first line of code February of 2012 as a student in a <a href="http://www.skillshare.com/Become-a-Ruby-on-Rails-Developer-An-Intensive-5-Week-Course/962578898/250012953">Rails Skillshare class</a>. That first class was three hours focused exclusively on Rails. In the first ten minutes, I realized I was out of my depth. The teacher, <a href="https://twitter.com/aviflombaum">Avi Flombaum</a>, offered me two options: 1) I could have my money back or 2) I could continue to come back until I got it. I took his class three times.</p>

<h3>Tipping Point</h3>

<p>Inspired by guys like <a href="http://viniciusvacanti.com/2010/09/13/cant-find-a-technical-co-founder-do-it-yourself/">Vin Vacanti</a>, I knew that while it wasn&#8217;t going to be easy, I could do this. I had learned Spanish as an adult and I figured this wasn&#8217;t going to be much different. I started with the vocabulary; I wrote down the definitions of arrays, methods, blocks, hashes, arguments, accessors&#8230; Avi had to painstakingly explain all the concepts I didn&#8217;t understand, which was pretty much everything.</p>

<p>At that point, Codecademy was still very young and it wasn&#8217;t a great fit for me. Instead, I <a href="http://tryruby.org/levels/1/challenges/0">tried Ruby</a>, <a href="http://pine.fm/LearnToProgram/">learned to program</a>, leaned on <a href="http://ruby.railstutorial.org/">Michael Hartl</a>, and even resorted to the <a href="http://railsforzombies.org/">Living Dead</a>. While I learned a lot on my own, I knew it wasn&#8217;t really enough.</p>

<h3>Immersion</h3>

<p>With the summer rolling around, it was clear that in order to get to where I wanted to go I needed full-blown immersion. It just so happened that Avi was founding what eventually became the <a href="http://flatironschool.com/">The Flatiron School</a>, but back then it was called the Keyvoon Experiment. I could dedicate a lot of space to how awesome the program was, but you can just look at <a href="http://www.adamjonas.com/blog/archives">my archives</a>. I wrote down pretty much everything we covered.</p>

<h3>Get a hair cut and get a real job</h3>

<p>Since finishing the program last month, I have interviewed with more than a dozen companies. Getting interviews was easy; getting though them was humbling. I got a lot of CS questions, though I had never been introduced to a binary tree structure. Some were nice about it. Others were dismissive. In the end, it worked out. A <a href="https://hiremecarrot.herokuapp.com/">little extra-credit project</a> led to a <a href="https://github.com/ajonas04/carrotfun/pull/1">clever job offer</a>. I couldn&#8217;t be happier.</p>

<h3>WIP</h3>

<p>It takes a village to raise a coder in less than a year. Learning something entirely new can be demoralizing. I have to thank my beautiful fiancé for the free passes to attend weekend classes and for her patience when I woke up to jot down that elusive solution which arrived during my R.E.M. cycle. I have to thank <a href="http://flatironschool.com/#people">The Flatiron School guys</a> for giving a shit.</p>

<p>Clearly, my education isn&#8217;t complete. That first day I didn&#8217;t know what a method was. Now, I don&#8217;t know what lots of things are. But just maybe I&#8217;ll make the aforementioned people proud by creating something to justify all the work that they put into me. No promises, but thanks to them, I at least have a chance.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RubyMotion Day 5]]></title>
    <link href="http://www.adamjonas.com/blog/rubymotion-day-5/"/>
    <updated>2013-01-25T09:54:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/rubymotion-day-5</id>
    <content type="html"><![CDATA[<h3>CA Animation</h3>

<pre><code>- Animation family tree
    - CA Animattion
        - CA Animation Group    
        - CA Property Animation
        - CA Transition
            - CA basic animation is for linear animation
            - keyanimattion is for more specific or non-linear animation


- Animated Properties
    - CGColorRef -&gt; shadowColor, borderColor
    - NSNumber (float) -&gt; opactity, shadowRadius
    - NSVAlue (CGRect) -&gt; bounds, contentsRect
    - NSValue (CGPoint) -&gt; anchorPoint (is the center point for rotation), position
    - NSValue (CATransform3D) -&gt; transform

- CATransform3d
    - CoreGraphics is just in 2 dimensions
    - Can add a perspective column in the z column -- (as opposed to just x and y planes (the 3rd column is for perspective) -- to create the illusion that it is tilted backs
    -  

- Easing
&gt;Easing means to control the acceleration or deceleration of the objects in the animation. This is used to simulate real life forces like friction or gravity.
</code></pre>

<h2>Web Services</h2>

<pre><code>- Synchronous URL Fetch (not recommended) -&gt; *if you block the main thread, your application will freeze*
    - NSURLConnection -(request)-&gt; NSMutableURLRequest -(URL)-&gt; NSURL
        - NSURLConnection, the class of CocoaTouch to send requests to web services
-  Asynchronous URL Fetch (the one we are going to use)

- we can block the whole app execution until the web service responds OR send the request and forget about it, avoiding blocking the app execution. Once the service responds we process the result.
    - The later option is the right one.
- We send and Asynchronous request to the service using a NSOperationQueue. This block of code will be executed in a background Queue defined by the NSOperationQueue.
        - This block receives three parameters:
            - response: An object with an instance of NSURLResponse.
            - data: The response returned by the service as a NSData object.
            - error: An NSError with the error, if any, returned by the service.
</code></pre>

<h3>Core Data</h3>

<pre><code>- StoreTypes
    - SQlite, binary file, NOT xml formats (only available in OS10)
- Predicates
- NSManagedObject
    - class capable of storing data for an instance of any entity.
    - access properties (attributes, relationships) via key-value coding methods (valueForKey:, setValue:forKey)
- Relationships
    - delete rule: "if an attempt is made to delete the source object..."
        - nullify (the inverse relationship)
        - deny (if any destination relationships)
        - cascade (delete any destination relationships, too) -&gt; *very dangeous*
        - No action
</code></pre>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="c1"># In Core Data we can have relationship between objects, so lets add one</span>
</span><span class='line'>  <span class="c1"># to the Director Object</span>
</span><span class='line'>  <span class="vi">@relationships</span> <span class="o">||=</span> <span class="o">[</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># IMPORTANT: In Core Data is required to have a circular relationships between</span>
</span><span class='line'>    <span class="c1"># the two objects. In these case we are adding a Relationship from Movie to Director</span>
</span><span class='line'>    <span class="c1"># but also we will need one from Director to Movie, these relationship is called Inverse</span>
</span><span class='line'>    <span class="c1"># Relationship</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># Relationship Name, Relationship Class, Inverse Relationship, Is Optional, Is Indexed,</span>
</span><span class='line'>    <span class="c1"># Is Ordered, Min Count, Max Count, Delete Rule</span>
</span><span class='line'>    <span class="o">[</span><span class="s1">&#39;director&#39;</span><span class="p">,</span> <span class="s1">&#39;Director&#39;</span><span class="p">,</span> <span class="s1">&#39;movie&#39;</span><span class="p">,</span> <span class="kp">true</span><span class="p">,</span> <span class="kp">false</span><span class="p">,</span> <span class="kp">true</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="no">NSNullifyDeleteRule</span><span class="o">]</span>
</span><span class='line'>  <span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<pre><code>- The relationships in Core Data are circular, what these means is that if we want to create a relationship from Movie to Director we also need another one from Director to Movie.
</code></pre>

<h3>Debugger</h3>

<pre><code>- rake debug=1, backtrace (or bt), fr &lt;number&gt;
    - n to step to the next line in the file
    - quit to quit.
</code></pre>

<h3>3rd Party Libs</h3>

<pre><code>- CorePlot -&gt; to build graphs
</code></pre>

<h3>Wrappers</h3>

<pre><code>- [formotion](https://github.com/clayallsopp/formotion -&gt; to easily create complex forms
- [walt](https://github.com/clayallsopp/formotion) -&gt; wrapper of core animation
-   [teacup](https://github.com/clayallsopp/formotion) -&gt; pretty much create a stylesheet for the views
- [sugarcube](https://github.com/clayallsopp/formotion) -&gt; redefining methods to be more semantic
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RubyMotion Day 5]]></title>
    <link href="http://www.adamjonas.com/blog/rubymotion-day-5/"/>
    <updated>2013-01-25T09:54:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/rubymotion-day-5</id>
    <content type="html"><![CDATA[<h3>CA Animation</h3>

<ul>
<li><p>Animation family tree</p>

<ul>
<li>CA Animattion

<ul>
<li>CA Animation Group</li>
<li>CA Property Animation</li>
<li>CA Transition

<ul>
<li>CA basic animation is for linear animation</li>
<li>keyanimattion is for more specific or non-linear animation</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>Animated Properties</p>

<ul>
<li>CGColorRef -> shadowColor, borderColor</li>
<li>NSNumber (float) -> opactity, shadowRadius</li>
<li>NSVAlue (CGRect) -> bounds, contentsRect</li>
<li>NSValue (CGPoint) -> anchorPoint (is the center point for rotation), position</li>
<li>NSValue (CATransform3D) -> transform</li>
</ul>
</li>
<li><p>CATransform3d</p>

<ul>
<li>CoreGraphics is just in 2 dimensions</li>
<li>Can add a perspective column in the z column &#8211; (as opposed to just x and y planes (the 3rd column is for perspective) &#8211; to create the illusion that it is tilted back</li>
</ul>
</li>
<li><p>Easing: to control the acceleration or deceleration of the objects in the animation. This is used to simulate real life forces like friction or gravity.</p></li>
</ul>


<h2>Web Services</h2>

<ul>
<li>Synchronous URL Fetch (not recommended) -> <em>if you block the main thread, your application will freeze</em>

<ul>
<li>NSURLConnection -(request)-> NSMutableURLRequest -(URL)-> NSURL

<ul>
<li>NSURLConnection, the class of CocoaTouch to send requests to web services</li>
</ul>
</li>
</ul>
</li>
<li><p>Asynchronous URL Fetch (the one we are going to use)</p></li>
<li><p>we can block the whole app execution until the web service responds OR send the request and forget about it, avoiding blocking the app execution. Once the service responds we process the result.</p>

<ul>
<li>The later option is the right one.</li>
</ul>
</li>
<li>We send and Asynchronous request to the service using a NSOperationQueue. This block of code will be executed in a background Queue defined by the NSOperationQueue.

<ul>
<li>This block receives three parameters:

<ul>
<li>response: An object with an instance of NSURLResponse.</li>
<li>data: The response returned by the service as a NSData object.</li>
<li>error: An NSError with the error, if any, returned by the service.</li>
</ul>
</li>
</ul>
</li>
</ul>


<h3>Core Data</h3>

<ul>
<li>StoreTypes

<ul>
<li>SQlite, binary file, NOT xml formats (only available in OS10)</li>
</ul>
</li>
<li>Predicates</li>
<li>NSManagedObject

<ul>
<li>class capable of storing data for an instance of any entity.</li>
<li>access properties (attributes, relationships) via key-value coding methods (valueForKey:, setValue:forKey)</li>
</ul>
</li>
<li>Relationships

<ul>
<li>delete rule: &#8220;if an attempt is made to delete the source object&#8230;&#8221;

<ul>
<li>nullify (the inverse relationship)</li>
<li>deny (if any destination relationships)</li>
<li>cascade (delete any destination relationships, too) -> <em>very dangeous</em></li>
<li>No action</li>
</ul>
</li>
</ul>
</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="c1"># In Core Data we can have relationship between objects, so lets add one</span>
</span><span class='line'>  <span class="c1"># to the Director Object</span>
</span><span class='line'>  <span class="vi">@relationships</span> <span class="o">||=</span> <span class="o">[</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># IMPORTANT: In Core Data is required to have a circular relationships between</span>
</span><span class='line'>    <span class="c1"># the two objects. In these case we are adding a Relationship from Movie to Director</span>
</span><span class='line'>    <span class="c1"># but also we will need one from Director to Movie, these relationship is called Inverse</span>
</span><span class='line'>    <span class="c1"># Relationship</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># Relationship Name, Relationship Class, Inverse Relationship, Is Optional, Is Indexed,</span>
</span><span class='line'>    <span class="c1"># Is Ordered, Min Count, Max Count, Delete Rule</span>
</span><span class='line'>    <span class="o">[</span><span class="s1">&#39;director&#39;</span><span class="p">,</span> <span class="s1">&#39;Director&#39;</span><span class="p">,</span> <span class="s1">&#39;movie&#39;</span><span class="p">,</span> <span class="kp">true</span><span class="p">,</span> <span class="kp">false</span><span class="p">,</span> <span class="kp">true</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="no">NSNullifyDeleteRule</span><span class="o">]</span>
</span><span class='line'>  <span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>The relationships in Core Data are circular, what these means is that if we want to create a relationship from Movie to Director we also need another one from Director to Movie.</li>
</ul>


<h3>Debugger</h3>

<ul>
<li>rake debug=1, backtrace (or bt), fr <number>

<ul>
<li>n to step to the next line in the file</li>
<li>quit to quit.</li>
</ul>
</li>
</ul>


<h3>3rd Party Libs</h3>

<ul>
<li>CorePlot -> to build graphs</li>
</ul>


<h3>Wrappers</h3>

<ul>
<li>[formotion](https://github.com/clayallsopp/formotion -> to easily create complex forms</li>
<li><a href="https://github.com/clayallsopp/formotion">walt</a> -> wrapper of core animation</li>
<li><a href="https://github.com/clayallsopp/formotion">teacup</a> -> pretty much create a stylesheet for the views</li>
<li><a href="https://github.com/clayallsopp/formotion">sugarcube</a> -> redefining methods to be more semantic</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ember.js Meetup]]></title>
    <link href="http://www.adamjonas.com/blog/ember-dot-js-meetup/"/>
    <updated>2013-01-25T09:48:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/ember-dot-js-meetup</id>
    <content type="html"><![CDATA[<p>Watch router v2 video. Seattle.
  - <a href="http://www.youtube.com/watch?v=_6yMxU-_ARs">Tom Dale on Ember Data</a>
  - <a href="http://www.youtube.com/watch?v=4Ed_o3_59ME">Yahuda Katz on the router</a>
  - <a href="https://gist.github.com/3981133">Guide to the router is here</a></p>

<p>Log _transitions = true. Lets you see the log with the new router.</p>

<p>Emblem.js. compiles down to handlebars but has lots of syntactic sugar. Its just a parser.</p>

<p>Dependency injection is giving instance variables to an object.</p>

<ul>
<li><a href="https://github.com/emberjs-addons/ember-bootstrap">Ember Bootstrap</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
