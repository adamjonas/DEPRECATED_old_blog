<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Hack hack hack...]]></title>
  <link href="http://www.adamjonas.com/atom.xml" rel="self"/>
  <link href="http://www.adamjonas.com/"/>
  <updated>2014-02-04T10:14:50-05:00</updated>
  <id>http://www.adamjonas.com/</id>
  <author>
    <name><![CDATA[Adam Jonas]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[New Beginnings]]></title>
    <link href="http://www.adamjonas.com/blog/new-beginnings/"/>
    <updated>2014-02-03T20:31:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/new-beginnings</id>
    <content type="html"><![CDATA[<p>It has been a little more than a year from when I started at <a href="http://carrot.is">Carrot Creative</a>. It has been an <a href="http://www.nytimes.com/2013/12/11/business/media/vice-media-buys-a-tech-company-to-experiment-with-content-distribution.html?_r=0">exciting year in Carrot history</a> and year in which I had some personal milestones. Carrot was the perfect place for me over the past year and I&#8217;m eternally grateful for the opportunity to work on some large scale using a variety of technologies.</p>

<p>I am excited to be returning to the <a href="http://flatironschool.com">Flatiron School</a>, this time as an instructor. Working with eager students who want to change the world through code is an exciting proposition and one I ultimately couldn&#8217;t resist.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[computer chips rd2]]></title>
    <link href="http://www.adamjonas.com/blog/computer-chips-rd2/"/>
    <updated>2014-01-24T12:55:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/computer-chips-rd2</id>
    <content type="html"><![CDATA[<h3>Devise</h3>

<ol>
<li>ran into issues with rails 4 strong parameters. <a href="https://github.com/plataformatec/devise/#strong-parameters">See</a></li>
<li>Then my user edit form was not writing to the DB because the <a href="https://github.com/plataformatec/devise/blob/master/app/controllers/devise/registrations_controller.rb#L88">update_resource method</a> requires a current password parameter passed along

<ul>
<li>one <a href="https://github.com/plataformatec/devise/wiki/How-To:-Allow-users-to-edit-their-account-without-providing-a-password">can override this default behavior</a></li>
</ul>
</li>
</ol>


<h3>State Machine Transitions</h3>

<ul>
<li>ended up going with <a href="https://github.com/troessner/transitions">transitions</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[marionette-cms]]></title>
    <link href="http://www.adamjonas.com/blog/marionette-cms/"/>
    <updated>2014-01-15T16:59:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/marionette-cms</id>
    <content type="html"><![CDATA[<h3>Jade template</h3>

<p>  <code>&lt;%- %&gt;</code> insert into DOM
  <code>&lt;%= %&gt;</code> html escapes?</p>

<h3>Markdown</h3>

<ul>
<li>so apparently markdown doesn&#8217;t come standard? I installed <a href="https://github.com/chjj/marked">marked</a> as the markdown interpreter.

<ul>
<li>with an install with npm this gave immediate markdown functionality to the jade templates, but it was still required in the specific model in order to call markdown related functions on a string of markdown within the template helper.</li>
</ul>
</li>
<li>I also need to translate the modifications made to the HTML on the page to be translated back into markdown to store them on the server. This required another plugin and I settled on <a href="https://github.com/neocotic/html.md">html.md</a>. The install was clean and worked smoothly from the start.</li>
</ul>


<h3><code>This</code> in the view</h3>

<ul>
<li>something that was not immediately apparent was the fact that <code>this</code> has different meanings in the template helper versus <code>onRender</code> for example.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[node, express, backbone and marionette -- sorting out the pieces]]></title>
    <link href="http://www.adamjonas.com/blog/node-express-backbone-marionette-sorting-out-the-pieces/"/>
    <updated>2014-01-10T17:47:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/node-express-backbone-marionette-sorting-out-the-pieces</id>
    <content type="html"><![CDATA[<h3>Express with Node</h3>

<ul>
<li>Express is a framework that takes Node from a barebones application and turns it into something that behaves more like the web servers we&#8217;re all used to working with.</li>
<li>Express feels like the <a href="http://www.sinatrarb.com/">sinatra</a> of node.</li>
</ul>


<h3>Bower vs. npm</h3>

<ul>
<li>It was advised that bower is the front end dependencies package manager, where the npm is for the backend. <a href="https://www.google.com/search?q=npm+of+backend+and+bower+for+the+front+end&amp;oq=npm+of+backend+and+bower+for+the+front+end&amp;aqs=chrome..69i57.8637j0j9&amp;sourceid=chrome&amp;espv=210&amp;es_sm=91&amp;ie=UTF-8#es_sm=91&amp;espv=210&amp;q=npm+for+backend+and+bower+for+the+front+end">see</a></li>
<li>You specify what dir your want to install the bower packages with a <code>.bowerrc</code> file which goes in the project root. Here are <a href="https://gist.github.com/facultymatt/5482781">some examples</a> of these types of files.

<ul>
<li><a href="http://net.tutsplus.com/tutorials/javascript-ajax/a-requirejs-backbone-and-bower-starter-template/">This tutorial</a> was helpful to get up and running with require.js and bower</li>
</ul>
</li>
</ul>


<h3>Mean stack</h3>

<ul>
<li><a href="http://mean.io/">Mean.io</a></li>
<li>Really like this <a href="http://cwbuecheler.com/web/tutorials/2013/node-express-mongo/">tutorial here</a></li>
</ul>


<h3>Asynchronous Module Definition</h3>

<ul>
<li>The AMD format comes from wanting a module format that was better than today&#8217;s &#8220;write a bunch of script tags with implicit dependencies that you have to manually order&#8221; and something that was easy to use directly in the browser. <a href="http://requirejs.org/docs/whyamd.html">further reading</a></li>
<li>The standard loader is <a href="http://requirejs.org/">RequireJS</a>, but in production you could use a replacement AMD loader called <a href="https://github.com/jrburke/almond">Almond</a>. It is a smaller &#8220;shim&#8221; loader, providing the minimal AMD API footprint that includes loader plugin support. Some developers like to use the AMD API to code modular JavaScript, but after doing an optimized build, they do not want to include a full AMD loader like RequireJS, since they do not need all that functionality. Some use cases, like mobile, are very sensitive to file sizes. By including almond in the built file, there is no need for RequireJS. almond is around 1 kilobyte when minified with Closure Compiler and gzipped.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[require.js]]></title>
    <link href="http://www.adamjonas.com/blog/require-dot-js/"/>
    <updated>2013-12-16T16:04:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/require-dot-js</id>
    <content type="html"><![CDATA[<h3>In roots</h3>

<ul>
<li><code>require ['jquery', 'fitvid', 'modal'], ($) -&gt;</code> is how I might require a non underscored file</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[wearables]]></title>
    <link href="http://www.adamjonas.com/blog/wearables/"/>
    <updated>2013-12-09T10:18:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/wearables</id>
    <content type="html"><![CDATA[<h3>Dl rather than ul</h3>

<ul>
<li>for question/answer format <a href="http://www.cssnewbie.com/using-definition-lists-question-answer-formatting/#.UqYh6HJgZKk">this article argues</a> that dl, dt, dd is a more appropriate choice of ul, li.</li>
<li><a href="http://html5doctor.com/the-dl-element/">More reading</a></li>
<li><a href="http://css-tricks.com/utilizing-the-underused-but-semantically-awesome-definition-list/">and</a></li>
<li><a href="http://www.dave-woods.co.uk/creating-faqs-using-a-definition-list/">also</a></li>
</ul>


<h3>IP detection with CloudFlare and nginx</h3>

<ul>
<li><a href="http://nginxlibrary.com/using-cloudflare-for-country-blocking/">ip detection using CloudFlare</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rack]]></title>
    <link href="http://www.adamjonas.com/blog/rack/"/>
    <updated>2013-12-06T12:18:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/rack</id>
    <content type="html"><![CDATA[<h2>Config.ru</h2>

<h3>Difference between run and use</h3>

<blockquote><p><strong>Run</strong> - Takes an argument that is an object that responds to call and returns a Rack response.
<strong>Use</strong> - Specifies middleware to use in a stack.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[bash]]></title>
    <link href="http://www.adamjonas.com/blog/bash/"/>
    <updated>2013-12-05T09:57:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/bash</id>
    <content type="html"><![CDATA[<h3>grant sudo permissions for the local user</h3>

<ul>
<li><code>sudo chown -R $USER /usr/local</code></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[asynch js]]></title>
    <link href="http://www.adamjonas.com/blog/asynch-js/"/>
    <updated>2013-12-04T10:52:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/asynch-js</id>
    <content type="html"><![CDATA[<h3>Asynch</h3>

<ul>
<li>Async is a tool for your Javascript utility belt that helps you out with the asynchronous tasks

<ul>
<li><a href="https://github.com/caolan/async">asynch.js</a></li>
</ul>
</li>
</ul>


<h3>Promises</h3>

<ul>
<li><a href="http://net.tutsplus.com/tutorials/javascript-ajax/wrangle-async-tasks-with-jquery-promises/">Wrangle Async Tasks With JQuery Promises</a></li>
<li><a href="http://blog.parse.com/2013/01/29/whats-so-great-about-javascript-promises/">What’s so great about JavaScript Promises?</a></li>
</ul>


<h3>Reading</h3>

<ul>
<li><a href="http://javascriptplayground.com/blog/2013/06/think-async/">think asynch</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Context and functions in Javascript]]></title>
    <link href="http://www.adamjonas.com/blog/context-and-functions-in-javascript/"/>
    <updated>2013-11-19T17:55:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/context-and-functions-in-javascript</id>
    <content type="html"><![CDATA[<p>Bind and fat arrow result in something similar but with different implementations.</p>

<pre><code>fn = -&gt; console.log @
ctx = {foo: 'bar', fn: -&gt; console.log(@)}
pusher.execute('event_name', ctx.fn.bind(ctx))
</code></pre>

<p>In most cases, the context of the function (also known as <code>@</code>) is based on the receiver. In this contrived example, to execute the function on the pusher object, we might pass in the function name and then the callback function. When we call a function to an outside source, we have no idea in what context it might be executed. In our case, <code>ctx.fn</code> and <code>@fn</code> might be the exact same &#8211; these are just references to how to call the function, but an important takeaway is that these do not pass determine the context. To ensure the context, one must specify it with the bind function. <code>pusher.execute('event_name', ctx.fn.bind(ctx))</code> is essentially equal to <code>pusher.execute('event_name', @fn.bind(ctx))</code>. The receiver in this case doesn&#8217;t matter.</p>

<p>JS OOP isn&#8217;t a joy ride. Oh well.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Backbone beginner's basics]]></title>
    <link href="http://www.adamjonas.com/blog/backbone-beginners-basics/"/>
    <updated>2013-11-19T17:02:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/backbone-beginners-basics</id>
    <content type="html"><![CDATA[<h3>Validations</h3>

<p>  This is a neat little <a href="https://github.com/thedersen/backbone.validation">validation plugin</a> that passes back error objects.</p>

<h3>Form serialization</h3>

<ul>
<li>Used <a href="https://github.com/derickbailey/backbone.syphon/blob/master/apidoc.md">syphon</a> built by Derick Bailey.</li>
</ul>


<h3>onBeforeRender versus onRender</h3>

<ul>
<li>Was trying to call a function <code>onBeforeRender</code> but it wouldn&#8217;t execute until it was changed to <code>onRender</code>.</li>
</ul>


<h3>Resources</h3>

<ul>
<li>code school backbone.js class</li>
<li>watch this for <a href="http://vimeo.com/59431658">explanation for backbone.js to marionette</a></li>
</ul>


<h3>Google Analytics on Backbone</h3>

<ul>
<li>this was a <a href="https://gist.github.com/daveaugustine/1771986">good guide</a> though it did not include the fact that</li>
<li>used <code>universal.js</code> so had to use the <code>ga('create', 'UA-XXXX-Y', 'auto');</code> syntax</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jquery promises]]></title>
    <link href="http://www.adamjonas.com/blog/jquery-promises/"/>
    <updated>2013-11-15T15:41:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/jquery-promises</id>
    <content type="html"><![CDATA[<p>A <strong>Promise</strong> is an object that represents a one-time event, typically the outcome of an async task like an AJAX call.</p>

<ul>
<li><a href="http://net.tutsplus.com/tutorials/javascript-ajax/wrangle-async-tasks-with-jquery-promises/">started here</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Marionette]]></title>
    <link href="http://www.adamjonas.com/blog/marionette/"/>
    <updated>2013-11-14T11:54:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/marionette</id>
    <content type="html"><![CDATA[<h3>Backbone.Model And Backbone.Collection</h3>

<ul>
<li><strong>model</strong> in Backbone represent a singular entity — a record in a database if you will.</li>
<li><strong>collections</strong> in Backbone are essentially just a collection of models

<ul>
<li>e.g. collections are the results of a query where the results consists of a number of records [models]</li>
</ul>
</li>
</ul>


<h3>Backbone.View</h3>

<ul>
<li>Is the HTML representation of the model</li>
<li>A view handles two duties fundamentally:

<ul>
<li>Listen to events thrown by the DOM and models/collections.</li>
<li>Represent the application’s state and data model to the user.</li>
</ul>
</li>
<li>Said another way, the primary responsibility of a view is to coordinate interactions between the end user and the application’s services.</li>
<li>In spite of their importance and having their fingers in all the pies of Backbone, views are not in control. They respond to changes in the application state in order to render the right HTML at the right time. They also facilitate changing the state by calling other objects that can change the state, but only on behalf of the user who initiates a state change by interacting with the DOM. Views are effectively the middle-man of a Backbone app.</li>
</ul>


<h3>Backbone.Events</h3>

<ul>
<li>The primary responsibility of Backbone.Events is to decouple the knowledge of state changes from the response to those state changes, through the use of the observer pattern.</li>
<li>Backbone.Events is the little powerhouse that facilitates nearly every aspect of a Backbone application. This is the one piece of Backbone that is found in every other piece of Backbone. Every time you call “bind” or “trigger” on any Backbone object, you’re using Backbone.Events. <a href="http://lostechies.com/derickbailey/2011/12/27/the-responsibilities-of-the-various-pieces-of-backbone-js/">From</a></li>
</ul>


<h3>App.vent</h3>

<ul>
<li><a href="https://github.com/marionettejs/backbone.marionette/blob/master/docs/marionette.application.md#appvent-event-aggregator">appvent-event-aggregator</a>

<ul>
<li>from the <a href="https://github.com/marionettejs/backbone.wreqr">wreqr</a></li>
<li>basic example is <code>MyApp.vent.on("foo", function(){ alert("bar"); });</code> triggered by <code>MyApp.vent.trigger("foo");</code></li>
</ul>
</li>
<li>one can also pass along an object or a string as a second parameter such as <code>App.vent.trigger('user_loaded', true)</code> or <code>App.vent.trigger('user_loaded', false)</code> that means that the listener can adjust accordingly (i.e. <code>App.vent.once('user_loaded', (user_loaded) -&gt; $('.change-scene').show() if user_loaded ))</code></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Local Storage]]></title>
    <link href="http://www.adamjonas.com/blog/local-storage/"/>
    <updated>2013-11-11T15:38:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/local-storage</id>
    <content type="html"><![CDATA[<h3>From KCA</h3>

<ul>
<li>used <a href="https://github.com/marcuswestin/store.js">store.js</a></li>
<li>nice <a href="http://javascriptplayground.com/blog/2012/06/javascript-local-storage-store-js-tutorial">little screencast</a></li>
<li>here is an <a href="http://coding.smashingmagazine.com/2010/10/11/local-storage-and-how-to-use-it/">older article</a> from 2010</li>
<li><em>NOTE:</em> We ended up using <a href="https://github.com/marcuswestin/store.js/blob/master/store%2Bjson2.min.js">store.js with json</a> because ie7 apparently doesn&#8217;t come equiped with JSON. Tom and I broke our heads trying to figure out why <code>store.enabled</code> wasn&#8217;t <code>true</code> for ie7. It came down to the fact that ie7 didn&#8217;t have JSON.</li>
</ul>


<p>Thought this was a cool little way to store whether a td square had been clicked on&#8230;</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>addRedTiles: -&gt;
</span><span class='line'>  selected = store.get("board_#{@board_id}")
</span><span class='line'>
</span><span class='line'>  for tile_number in selected
</span><span class='line'>    $("[data-title-num=#{tile_number}]").addClass('clicked_space')
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>duringBoardClick: -&gt;
</span><span class='line'>  if store.enabled
</span><span class='line'>    $('td').click =&gt;
</span><span class='line'>      $(event.target).toggleClass('clicked_space')
</span><span class='line'>      clicked_tiles = []
</span><span class='line'>      all_clicked = $('td.clicked_space')
</span><span class='line'>
</span><span class='line'>      for tile in all_clicked
</span><span class='line'>        clicked_tiles.push $(tile).attr('data-title-num')
</span><span class='line'>
</span><span class='line'>      store.set("board_#{@board_id}", clicked_tiles)
</span><span class='line'>  else
</span><span class='line'>    console?.log? 'store is not enabled'</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>This needed to be updated b/c of event.targer</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">duringBoardClick</span><span class="o">:</span> <span class="o">-&gt;</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">store</span><span class="p">.</span><span class="nx">enabled</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">board_id</span> <span class="o">=</span> <span class="err">@</span><span class="nx">board_id</span>
</span><span class='line'>    <span class="err">\\</span><span class="nx">notice</span> <span class="nx">that</span> <span class="nx">I</span> <span class="nx">declared</span> <span class="nx">the</span> <span class="nx">above</span> <span class="nx">variable</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;td&#39;</span><span class="p">).</span><span class="nx">click</span> <span class="o">-&gt;</span> <span class="err">\\</span><span class="nx">and</span> <span class="nx">changed</span> <span class="k">this</span> <span class="nx">to</span> <span class="nx">a</span> <span class="nx">single</span> <span class="o">-&gt;</span>
</span><span class='line'>      <span class="nx">$</span><span class="p">(</span><span class="err">@</span><span class="p">).</span><span class="nx">toggleClass</span><span class="p">(</span><span class="s1">&#39;clicked_space&#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">clicked_tiles</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>      <span class="nx">all_clicked</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;td.clicked_space&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">for</span> <span class="nx">tile</span> <span class="k">in</span> <span class="nx">all_clicked</span>
</span><span class='line'>        <span class="nx">clicked_tiles</span><span class="p">.</span><span class="nx">push</span> <span class="nx">$</span><span class="p">(</span><span class="nx">tile</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;data-title-num&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="nx">store</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s2">&quot;board_#{board_id}&quot;</span><span class="p">,</span> <span class="nx">clicked_tiles</span><span class="p">)</span>
</span><span class='line'>      <span class="err">\\</span><span class="nx">board</span> <span class="nx">then</span> <span class="nx">becomes</span> <span class="nx">a</span> <span class="nx">local</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="nx">console</span><span class="o">?</span><span class="p">.</span><span class="nx">log</span><span class="o">?</span> <span class="s1">&#39;store is not enabled&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>local storage versus cookies</h3>

<ul>
<li><strong>client versus server</strong> -> Cookies and local storage really serve difference purposes. Cookies are primarily for reading server-side, local storage can only be read client-side. So the question is, in your app, who needs this data — the client or the server? If it&#8217;s your client (your JavaScript), then by all means switch. You&#8217;re wasting bandwidth by sending all the data in each HTTP header. If it&#8217;s your server, local storage isn&#8217;t so useful because you&#8217;d have to forward the data along somehow (with Ajax or hidden form fields or something). This might be okay if the server only needs a small subset of the total data for each request.</li>
<li><strong>Size</strong> -> Apart from being an old way of saving data, Cookies give you a limit of 4096 bytes (4095, actually) - its per cookie. Local Storage is as big as 5MB per domain.</li>
<li>you can test your local storage <a href="http://arty.name/localstorage.html">here</a>.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Grape Api]]></title>
    <link href="http://www.adamjonas.com/blog/grape-api/"/>
    <updated>2013-11-11T15:13:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/grape-api</id>
    <content type="html"><![CDATA[<h2><a href="https://github.com/intridea/grape">Grape</a></h2>

<ul>
<li>Grape is a REST-like API micro-framework for Ruby. It&#8217;s designed to run on Rack or complement existing web application frameworks such as Rails and Sinatra by providing a simple DSL to easily develop RESTful APIs.</li>
<li>Here is a nice <a href="http://www.slideshare.net/yorzi/rapid-rubyapiongrape-8674582">slide share</a> of the API possibilities (though it is from 2011).</li>
<li><a href="http://joeybeninghove.com/2012/01/21/grape-apis-few-quick-tidbits/">some tips here</a></li>
</ul>


<h3>Rack::Cors</h3>

<ul>
<li>Rack::Cors provides support for Cross-Origin Resource Sharing (CORS) for Rack compatible web applications. The CORS spec allows web applications to make cross domain AJAX calls without using workarounds such as JSONP.</li>
<li><a href="http://www.nczonline.net/blog/2010/05/25/cross-domain-ajax-with-cross-origin-resource-sharing/">explaination worth reading</a></li>
</ul>


<h3>Trouble with protected_attributes</h3>

<ul>
<li>rails 4 &#8211; learned via <a href="https://github.com/rails/rails/issues/12360">issue 12360</a> that protected_attr needs to be up to date. In my case, v 1.0.5.</li>
</ul>


<h3>Rack Console</h3>

<ul>
<li>used gem <a href="https://github.com/sickill/racksh"><code>racksh</code></a> for a rack console. Pretty dandy.</li>
</ul>


<h3>Mind f<sup>ck</sup></h3>

<ul>
<li><a href="https://github.com/rosenfeld/active_record_migrations">active_record_migrations</a> worked when vendored locally, but the config options were not configuring anything when remote.

<ul>
<li>went hunting in <a href="https://github.com/rails/rails/tree/master/activerecord">active_record</a> (specifically in the <a href="https://github.com/rails/rails/blob/d8b173607da94419e841c4d36f251987c9acf156/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb">postgres adapter</a>, but didn&#8217;t find anything to solve the problem. Some <a href="https://github.com/rails/rails/blob/d8b173607da94419e841c4d36f251987c9acf156/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb#L390">cool datatypes</a> in there though.</li>
</ul>
</li>
<li>ended up using the <code>DATABASE_URL</code> env instead of database.yml to configure the postgres DB.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[memories and holiday]]></title>
    <link href="http://www.adamjonas.com/blog/memories-and-holiday/"/>
    <updated>2013-10-22T10:52:00-04:00</updated>
    <id>http://www.adamjonas.com/blog/memories-and-holiday</id>
    <content type="html"><![CDATA[<h3>Generate a new secret token</h3>

<ul>
<li>I copied over app with a foundation built in. Can&#8217;t of course copy over the secret token. <code>rake secret</code> will generate the new token <a href="http://www.jamesbadger.ca/2012/12/18/generate-new-secret-token/">via</a>.</li>
</ul>


<h3>Geolocation</h3>

<ul>
<li><a href="http://stackoverflow.com/questions/2248404/about-geolocation-in-html-5">used enabled geo location in the app</a></li>
<li>the method <a href="http://diveintohtml5.info/geolocation.html">found here</a>, which should be the canonical source didn&#8217;t work for me.</li>
</ul>


<h3>Print styling</h3>

<ul>
<li>needed to remove the deafult media=&#8217;screen&#8217; in order to load these styles via <a href="http://lawrencenaman.com/optimisation/print-media-queries-not-working/">this post</a></li>
<li>in application.rb needed to include <code>config.assets.precompile += ['print_wishlist.css']</code> so that it is precompiled separately. Though it was written in sass it needed the print_wishlist.css.sass extensions as sass isn&#8217;t recognized in the app.rb as it expect the file after compilation rather than before <a href="http://jalada.co.uk/2012/01/23/adding-files-to-config-assets-precompile-in-rails-3-1.html">via</a>.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[turbolinks]]></title>
    <link href="http://www.adamjonas.com/blog/turbolinks/"/>
    <updated>2013-09-25T10:27:00-04:00</updated>
    <id>http://www.adamjonas.com/blog/turbolinks</id>
    <content type="html"><![CDATA[<p>Turbolinks replaces the body of the page but doesn&#8217;t reload the header files. This limits the number of calls and makes the site appear faster to the user by a noticeable margin.</p>

<h3>To remove turbolinks for Rails 4</h3>

<ul>
<li>(3 steps from Steve Klabnik)[http://blog.steveklabnik.com/posts/2013-06-25-removing-turbolinks-from-rails-4]</li>
</ul>


<h3>Breaking my JS</h3>

<ul>
<li>Turbolink breaks my JS calls when the page loads up the Facebook SDK. So I started disabling turbolinks on certain pages in my HAML a tag with the &#8220;data-no-turbolink&#8221; option <code>= link_to 'add friends', next_wizard_path, "data-no-turbolink" =&gt; "true"</code></li>
<li>There are also events that one can hook into. They are (listed here)[https://github.com/rails/turbolinks/#events].</li>
<li>You can also put the click event on the doc rather than the element which will solve this issue. In this case ajax tasks would also have the click event applied to them as well.</li>
</ul>


<figure class='code'><figcaption><span>Click Event on doc rather than element</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span><span class="p">(</span><span class="s1">&#39;document&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">on</span> <span class="s1">&#39;click&#39;</span><span class="p">,</span> <span class="s1">&#39;.edit_task input[type=checkbox]&#39;</span><span class="p">,</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="err">$</span><span class="p">(</span><span class="n">this</span><span class="p">)</span><span class="o">.</span><span class="n">parent</span><span class="p">(</span><span class="s1">&#39;form&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">submit</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<h3>The jquery turbolinks gem</h3>

<ul>
<li>Using (the gem)[https://github.com/kossnocorp/jquery.turbolinks] just straight fixes it. This likely means that the turbolinks is disabled for all jquery related calls.</li>
</ul>


<h3>Reading</h3>

<ul>
<li>a (basic summary by treehouse)[http://blog.teamtreehouse.com/rails-4-a-look-at-turbolinks]</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rum Fun]]></title>
    <link href="http://www.adamjonas.com/blog/rum-fun/"/>
    <updated>2013-09-16T16:02:00-04:00</updated>
    <id>http://www.adamjonas.com/blog/rum-fun</id>
    <content type="html"><![CDATA[<h3>Asset Trouble</h3>

<ul>
<li>Rails 3.1.3 legacy app The images were coming through, but the JS and css wasn&#8217;t compiling.</li>
<li><a href="http://stackoverflow.com/questions/15811889/my-rails-javascript-manifest-file-doesnt-compile-nor-include-any-required-files">This</a> inspired us to roll back to 1.9.3, which worked.</li>
</ul>


<h3>Coffeescript hashes</h3>

<ul>
<li><p>this one took me a hot second -> <code>delete obj[key]</code></p>

<ul>
<li>courtesy of <a href="http://coffeescript.org/documentation/docs/helpers.html">the docs</a></li>
</ul>
</li>
<li><p>counting the keys in an object was pretty close to javascript <code>Object.keys(obj).length</code> <a href="http://stackoverflow.com/questions/15629799/count-number-of-keys-in-object-with-coffeescript">from</a>.</p></li>
</ul>


<h3>Thought process on adding a friend</h3>

<ul>
<li>page loads

<ul>
<li><p>checks to see if local storage has values</p>

<ul>
<li>if not it assigns empty array</li>
<li>if so it assigns to local array which contains a hash of both the name, the uid, and its input position

<ul>
<li>names are loaded into the input field</li>
<li>names and uid(pic) are loaded with the appropriate number of beach passes</li>
</ul>
</li>
</ul>
</li>
<li><p>if when a name is removed from the input field, it is removed from the local array</p>

<ul>
<li>a listener on the array updates the proper number of beach passes</li>
</ul>
</li>
<li><p>when a name is selected by the autocomplete, it assigns pushes the new record of name, uid and position into the array</p>

<ul>
<li>a listener on the array updates the proper number of beach passes</li>
</ul>
</li>
<li><p>a validator prevents the user from continuing without having at least one friend OR checking the &#8216;alone&#8217; checkbox</p></li>
<li><p>upon hitting the continue btn, the local array is assigned to local storage</p></li>
</ul>
</li>
</ul>


<h3>Devise sign out</h3>

<ul>
<li>In the <code>devise.rb</code> initializer -> The default HTTP method used to sign out a resource. Default is :delete.

<ul>
<li><code>config.sign_out_via = :get</code> will allow me to use a regular link</li>
</ul>
</li>
</ul>


<h3>PG setup</h3>

<ul>
<li>this is the <a href="https://devcenter.heroku.com/articles/upgrade-heroku-postgres-with-pgbackups">process prelaunch</a></li>
<li>otherwise you want to use a follower method</li>
</ul>


<h3>IP Spoof</h3>

<ul>
<li>had a client on a plane that triggered a <code>ActionDispatch::RemoteIp::IpSpoofAttackError: IP spoofing attack?!</code> error.</li>
</ul>


<figure class='code'><figcaption><span>To turn off ip spoof</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">IpSpoof</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">app</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@app</span> <span class="o">=</span> <span class="n">app</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">call</span><span class="p">(</span><span class="n">env</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@app</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">_strip_ip_spoofable_headers</span><span class="p">(</span><span class="n">env</span><span class="p">))</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">_strip_ip_spoofable_headers</span><span class="p">(</span><span class="n">env</span><span class="p">)</span>
</span><span class='line'>    <span class="n">env</span><span class="o">.</span><span class="n">reject</span> <span class="p">{</span> <span class="o">|</span><span class="n">key</span><span class="p">,</span> <span class="n">value</span><span class="o">|</span> <span class="n">key</span><span class="o">.</span><span class="n">upcase</span> <span class="o">==</span> <span class="s1">&#39;HTTP_CLIENT_IP&#39;</span> <span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<ul>
<li>this needed to be inserted before the rack middleware <code>ActionDispatch::RemoteIp</code> so used <code>config.middleware.insert_before ActionDispatch::RemoteIp, IpSpoof</code> as suggested in <a href="http://guides.rubyonrails.org/rails_on_rack.html#configuring-middleware-stack">rails guide</a>. Pretty cool.</li>
</ul>


<h3>Location Tracking</h3>

<ul>
<li>after many protests, I was forced to include a tracking script that pilled down users&#8217; lat and long coordinates. Not sure I believe it is right to pull down location info without providing the user with some benefit.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[objective-c for rubyists]]></title>
    <link href="http://www.adamjonas.com/blog/objective-c-for-rubyists/"/>
    <updated>2013-09-11T16:35:00-04:00</updated>
    <id>http://www.adamjonas.com/blog/objective-c-for-rubyists</id>
    <content type="html"><![CDATA[<p>So RubyMotion is great. I can create an app in a few minutes by leveraging resources like <a href="http://bubblewrap.io/">Bubblewrap</a> and styling becomes pretty straight-forward with <a href="https://github.com/rubymotion/teacup">Teacup</a> and syntax looks much more Ruby-ish with <a href="https://github.com/rubymotion/sugarcube">SugarCube</a>.</p>

<p>Here&#8217;s the thing. As a spoiled Rubyist, Objective-C as a language and CocoaTouch/iOS as is a framework is a verbose. That means that the code comes out really sounding like English. Not the poetry that Ruby is, but more like prose.  The fact that I am not learning the language isolated from the framework has led to problems for me in the past when I initially learned Rails before I learned Ruby. It isn&#8217;t really a great way to learn, but I have always been driven by the application of a language more than the language itself, which is the case here.</p>

<h3>That whole thing is the method?</h3>

<p>So RubyMotion isn&#8217;t a superiority thing. I&#8217;d certainly prefer to be 100% fluent in objective-c from day one. Apple&#8217;s documentation appears to be pretty steller. The problem for me however, is that everything just looks so hard in obj-c. Method declarations are pretty intimidating. So here I go to look up how to set the title of a UIButton and I find <code>- (void)setTitle:(NSString *)title forState:(UIControlState)state</code>. Now come on. That&#8217;s a little much to set a title of a button right? A guideline I have always tried to follow with my own code is to only create complicated methods for complicated tasks.</p>

<ul>
<li>This declaration is preceded by a minus (-) sign, which indicates that this is an instance method, as opposed to a class method. It requires an object to call it, and instance variables of the object are available to it inside its definition.</li>
<li>The (void) indicates the return type. This method doesn&#8217;t return anything, so its result can&#8217;t be assigned to anything.</li>
<li>This method name is <code>setTitle:forState:</code></li>
<li>The number of colons (:) indicate how many arguments it takes. T</li>
<li>The first argument is the string to set the title to.</li>
<li>The second argument is the button state (such as normal or pressed) in which to set the title.</li>
</ul>


<p>Here&#8217;s an example of this method in use: <code>[myButton setTitle:@"Clicked!" forState:UIControlStateHighlighted];</code>. So after you break it down things seems little more reasonable, but it feels like it shouldn&#8217;t be this hard.</p>

<h3></h3>

<p>The specification of a class in Objective-C requires two distinct pieces: the interface and the implementation. The interface portion contains the class declaration and defines the instance variables and methods associated with the class. The interface is usually in a .h file. The implementation portion contains the actual code for the methods of the class. The implementation is usually in a .m file.</p>

<p>A class in Objective-C can declare two types of methods: instance methods and class methods. An instance method is a method whose execution is scoped to a particular instance of the class. In other words, before you call an instance method, you must first create an instance of the class. Class methods, by comparison, do not require you to create an instance</p>

<p>There&#8217;s strong and weak typing for variables.</p>

<p>Objective-c is from around 1983, invented by Brad Cox. Ruby is from 1995, which makes it a contemporary of Java.</p>

<p>Ruby is more script oriented, obj-c looks a lot more like lisp. The semi-colon takes some getting used to.</p>

<p>Underscore versus camelCase. Short method names in Ruby, while the cocoa convention is much more verbose.</p>

<p>Name spacing in Ruby which Objective-C doesn&#8217;t have.</p>

<p>On the surface, these look like very different languages.</p>

<p>Ruby is a decedent of Smalltalk, Perl, Eiffel, and Lisp. While Objective-C comes purely from Smalltalk and C.</p>

<p>Smalltalk was really the first object oriented programming language. Alan Kay and the X PARC geniuses invented the OOP concept in the early 70s.</p>

<p>Conway&#8217;s Law: software architecture reflects the communication structures of the community that is building it.</p>

<p>Objective-c and cocoa are dictated by Apple. It&#8217;s Apple&#8217;s app store and they dictate what is appropriate and what isn&#8217;t. It is a benevolent (sometimes not so benevolent) dictatorship.</p>

<p>Ruby is on the other hand is a product of Rails. DHH singlehandedly put Ruby on the map in 2004. Rails is what the web needed in 2005. Github, heroku and twitter were all started as Rails apps.
  - most Rails devs were noobs
  - iconoclasts
  - dillitants
  - hipsters
  - scavengers -> turning to other languages
  - establishmentarians</p>

<ul>
<li>TDD</li>
<li>Tooling -> throw out older tools</li>
<li>progress versus subsistence</li>
<li>overthinking</li>
</ul>


<p>We have entered the era of CocoaPods, which is now 2 years old. It is written in Ruby. 1300 projects on CocoaPods. This is the rise of Ruby gem. A dependency manager. This is a place to share creations.</p>

<ul>
<li><p><a href="https://peepcode.com/products/objective-c-for-rubyists">objective c for Rubyists</a> from peepcode</p></li>
<li><p><a href="https://github.com/tombenner/nui">NUI</a> -> sass for objective-c</p></li>
<li><a href="https://github.com/kif-framework/KIF">KIF</a> -> usable testing framework</li>
<li><a href="https://github.com/ReactiveCocoa/ReactiveCocoa">reactiveCocoa</a> -> functional programmning for ios</li>
<li><a href="http://www.testingwithfrank.com/">Testing with Frank</a> -> cucumber</li>
<li><a href="https://github.com/helios-framework">Helios</a> -></li>
</ul>


<p>http://www.slideshare.net/abdels/my-adventuresinobjc</p>

<ul>
<li>unlike ruby, obj-c is a strict superset of c</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">[</span><span class="n">world</span> <span class="nl">say:</span><span class="s">@&quot;hello&quot;</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">world</span><span class="o">.</span><span class="n">say</span><span class="p">(</span><span class="s2">&quot;hello&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>obj-c message passing</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">[</span><span class="n">world</span> <span class="nl">say:</span><span class="s">@&quot;hello&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="n">world</span> <span class="nl">performSelector:</span><span class="k">@selector</span><span class="p">(</span><span class="nl">say:</span><span class="p">)</span> <span class="nl">withObject:</span><span class="s">@&quot;hello&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">objc_sendMSG</span><span class="p">(</span><span class="kt">id</span> <span class="n">object</span><span class="p">,</span> <span class="kt">SEL</span> <span class="n">selector</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>ruby message passing</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">world</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="ss">:say</span><span class="p">,</span> <span class="s2">&quot;hello&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>non-strict typing</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="kt">id</span> <span class="n">world</span> <span class="o">=</span> <span class="p">[[</span><span class="n">World</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">]</span>
</span><span class='line'><span class="p">[</span><span class="n">world</span> <span class="n">peace</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm">&#39;id&#39; is a pointer to any object</span>
</span><span class='line'><span class="cm">*/</span>
</span></code></pre></td></tr></table></div></figure>


<p>objective-c non-strict typing
World *world = [[World alloc] init]
[world peace];</p>

<p>/<em>
this ensures the method compiler checks.
</em>/
&#8220;`</p>

<p>attr_accessor equivalent
@synthesize creates dynamic setters and getters and performs the neccessary memory allocaiton
- interfaces with protocols</p>

<p>objective-c has blocks</p>

<p><a href="https://github.com/nomad/cupertino">cupertino</a></p>

<h3>Strong versus weak pointers</h3>

<p>The difference is that an object will be deallocated as soon as there are no strong pointers to it. Even if weak pointers point to it, once the last strong pointer is gone, the object will be deallocated, and all remaining weak pointers will be zeroed out.</p>

<p>Perhaps an example is in order.</p>

<p>Imagine our object is a dog, and that the dog wants to run away (be deallocated).</p>

<p>Strong pointers are like a leash on the dog. As long as you have the leash attached to the dog, the dog will not run away. If five people attach their leash to one dog, (five strong pointers to one object), then the dog will not run away until all five leashes are detached.</p>

<p>Weak pointers, on the other hand, are like little kids pointing at the dog and saying &#8220;Look! A dog!&#8221; As long as the dog is still on the leash, the little kids can still see the dog, and they&#8217;ll still point to it. As soon as all the leashes are detached, though, the dog runs away no matter how many little kids are pointing to it.</p>

<p>As soon as the last strong pointer (leash) no longer points to an object, the object will be deallocated, and all weak pointers will be zeroed out.</p>

<p><a href="http://stackoverflow.com/questions/9262535/explanation-of-strong-and-weak-storage-in-ios5">from</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git Cheatsheet]]></title>
    <link href="http://www.adamjonas.com/blog/git-cheatsheet/"/>
    <updated>2013-08-28T18:31:00-04:00</updated>
    <id>http://www.adamjonas.com/blog/git-cheatsheet</id>
    <content type="html"><![CDATA[<ul>
<li><code>git clean -f -d</code> removes all untracked files. <code>git reset --hard HEAD</code> won&#8217;t remove untracked files.</li>
<li><code>git checkout &lt;filename&gt;</code> untracks a file and returns it to its original state.</li>
<li><code>git push -u origin my_branch</code> sets upstream. Here is a <a href="http://stackoverflow.com/questions/6089294/why-do-i-need-to-do-set-upstream-all-the-time">good explanation</a>.</li>
</ul>

]]></content>
  </entry>
  
</feed>
