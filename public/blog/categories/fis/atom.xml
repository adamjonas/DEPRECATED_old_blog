<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: FIS | Documenting all this...]]></title>
  <link href="http://ajonas.herokuapp.com/blog/categories/fis/atom.xml" rel="self"/>
  <link href="http://ajonas.herokuapp.com/"/>
  <updated>2012-10-11T16:09:24-04:00</updated>
  <id>http://ajonas.herokuapp.com/</id>
  <author>
    <name><![CDATA[Adam Jonas]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[FIS Day6]]></title>
    <link href="http://ajonas.herokuapp.com/blog/2012/10/11/fis-day6/"/>
    <updated>2012-10-11T09:46:00-04:00</updated>
    <id>http://ajonas.herokuapp.com/blog/2012/10/11/fis-day6</id>
    <content type="html"><![CDATA[<h3>Programmer of the Day</h3>

<p>_Why the Lucky Stiff</p>

<p>Tesla:
1909 predicted the internet and wireless communication</p>

<h3>Scrapping</h3>

<p><a href="http://www.andrewsturges.com/2011/09/how-to-harvest-web-data-using-ruby-and.html">Possible Workflow</a>
NokoGiri
sqlite3 ruby gem</p>

<p>Read NokiGiri
Read sqlite3 ruby gem</p>

<p>scrap:</p>

<p>name
tagline
bio
blog list
twitter</p>

<p>One page script
<a href="http://coryschires.com/whats-the-difference-between-each-and-collect/">Difference between map and collect</a></p>

<p>CSS selectors are hard
<a href="http://www.w3schools.com/cssref/css_selectors.asp">need to keep this handy</a></p>

<p>Remember rubular</p>

<p><em>DB prepare:</em>
If the same statement is going to be executed repeatedly, you can speed things up a bit by preparing the statement.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FIS Day5]]></title>
    <link href="http://ajonas.herokuapp.com/blog/2012/10/10/fis-day5/"/>
    <updated>2012-10-10T09:38:00-04:00</updated>
    <id>http://ajonas.herokuapp.com/blog/2012/10/10/fis-day5</id>
    <content type="html"><![CDATA[<p>"Classes are state plus behavior, if you just want the behavior then use a module!"</p>

<p>```ruby This is no good: Singleton Object- class with one method on it
class Random</p>

<pre><code>def self.something
end
</code></pre>

<p>end
```
Underuse of modules...</p>

<h3>Programmer of the day</h3>

<p>Dan Bricklin</p>

<ul>
<li>inventor of the spreadsheet</li>
</ul>


<h3>Homework Review</h3>

<p>table names should be plaural (e.g.table USERS)</p>

<p>id INTEGER PRIMARY KEY -> always be called ID, is an integer and auto increments</p>

<p>'never use ruby for something SQL can do'</p>

<p>you want to group by integer values rather than string values</p>

<p>AS aliases the columns</p>

<p>subqueries- as long as a query returns one and only one value you can use that for another query</p>

<p><a href="http://www.codinghorror.com/blog/2007/10/a-visual-explanation-of-sql-joins.html">Visual explanation of sql</a></p>

<h3>INDEXes</h3>

<ul>
<li>index a column when it is being used in columns or queries</li>
<li>should index foreign keys (they are not automatically indexed)</li>
<li>cost: everytime you add a record it has to reindex</li>
<li>indexes compromise the write speed in favor of read speed</li>
</ul>


<p>Two optimization steps:</p>

<ul>
<li>denormalize (add more columns)</li>
<li><p>index - optimize for write or read?</p>

<ul>
<li>the more indexes your keys are using the more efficient your DB will be</li>
</ul>
</li>
<li><p>You optimize the joins by denormalizing (and thus removing the need for joins) and indexing</p></li>
</ul>


<p><code>
cp -r &lt;old dir name&gt; &lt;new dir name&gt;
</code></p>

<p>update
<code>
UPDATE Persons
SET Address='Nissestien 67', City='Sandnes'
WHERE LastName='Tjessem' AND FirstName='Jakob'
</code>
<a href="http://stackoverflow.com/questions/2044467/how-to-update-two-tables-in-one-statement-in-sql-server-2005">Transaction</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FIS Day4]]></title>
    <link href="http://ajonas.herokuapp.com/blog/2012/10/09/fis-day4/"/>
    <updated>2012-10-09T11:07:00-04:00</updated>
    <id>http://ajonas.herokuapp.com/blog/2012/10/09/fis-day4</id>
    <content type="html"><![CDATA[<h3>Programmer of the day:</h3>

<ul>
<li><a href="http://en.wikipedia.org/wiki/Grace_Hopper">Grace Hopper:</a>
Helped develop COBOL - first human readable code advocate.
Popularized the word debugging
Nickname - "amazing grace"</li>
</ul>


<h3>Blogging</h3>

<p>Titles names:</p>

<ul>
<li>how to</li>
<li>3 tips for</li>
<li>pros and cons of</li>
</ul>


<p>&lt;compfight.com> to search high-res pictures</p>

<p>end the article with a question</p>

<p>3-5 paragraphs
400-700 wds</p>

<p>skitch- screenshots</p>

<p>Evan Williams- creator of blogger
web log -> weblog -> blog</p>

<p>Matt Mullenwig- creator of wordpress
powers 15% of the internet</p>

<p><a href="http://errtheblog.com/">err the blog</a>
PJ Hyett and Chris Wanstrath</p>

<p><a href="https://speakerdeck.com/">speaker deck</a></p>

<p><a href="http://design-seeds.com/">design helper</a></p>

<p><a href="http://en.wikipedia.org/wiki/Linus_Torvalds">Linus Torvalds</a> is the creator of git</p>

<p><a href="http://en.wikipedia.org/wiki/Capistrano">Capistrano</a></p>

<p><a href="http://demosthenes.info/blog/532/Convert-Images-To-Black-And-White-With-CSS">CSS3 Grey-scale mask</a>
<a href="http://webdesignerwall.com/tutorials/css3-image-styles">CSS3 circle mask image</a>
This also worked really well...
```css
-circle {</p>

<pre><code>    -webkit-border-radius: 61px;
    -moz-border-radius: 61px;
    border-radius: 61px;
    border:1px solid #aaaaaa;
    width:122px;
    height:122px;
</code></pre>

<p>   }
```</p>

<p>```javascript Blog RSS feed</p>

<script language="JavaScript" src="http://itde.vccs.edu/rss2js/feed2js.php?src=http%3A%2F%2Fajonas.herokuapp.com%2Fatom.xml&chan=n&num=5&desc=1&date=y&targ=y" type="text/javascript"></script>


<p><noscript>
<a href="http://itde.vccs.edu/rss2js/feed2js.php?src=http%3A%2F%2Fajonas.herokuapp.com%2Fatom.xml&chan=n&num=5&desc=1&date=y&targ=y&html=y">View RSS feed</a>
</noscript>
```
<a href="http://itde.vccs.edu/rss2js/build.php">source</a></p>

<p>```
♕ git reset --hard HEAD
HEAD is now at ab33e5d fixed inline styles and added footer
[19:02:29] (master) LeanJaw
♕ git status</p>

<h1>On branch master</h1>

<h1>Untracked files:</h1>

<h1>(use "git add <file>..." to include in what will be committed)</h1>

<p>#</p>

<h1>css/leanJaw-student.css</h1>

<h1>leanJaw-matz.html</h1>

<p>nothing added to commit but untracked files present (use "git add" to track)
[19:02:31] (master) LeanJaw
♕ git clean -f
Removing css/leanJaw-student.css
Removing leanJaw-matz.html
[19:02:34] (master) LeanJaw
♕ git st</p>

<h1>On branch master</h1>

<p>nothing to commit (working directory clean)
[19:02:35] (master) LeanJaw
♕ git pull --rebase
From github.com:flatiron-school/students.flatironschool.com
 * [new branch]      addJackProfile -> origin/addJackProfile
 * [new branch]      kevin-matz-profile -> origin/kevin-matz-profile
   ab33e5d..99401ef  master     -> origin/master
First, rewinding head to replay your work on top of it...
Fast-forwarded master to 99401ef0c8fcd811ecf1249edfb86e1b8179cacb.
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FISday3]]></title>
    <link href="http://ajonas.herokuapp.com/blog/2012/10/05/fisday3/"/>
    <updated>2012-10-05T16:48:00-04:00</updated>
    <id>http://ajonas.herokuapp.com/blog/2012/10/05/fisday3</id>
    <content type="html"><![CDATA[<p>Programs are:</p>

<p><em>idealized components</em>... not bound by degradation of use.</p>

<p><em>infinite complexity</em>... because nothing is stopping us from building it.</p>

<p><em>Method signature</em> is the first line of the method (e.g. def method_name(*arg))</p>

<p><em>Parameters</em> are the adverbs. Parameters allow us to make a method dynamic.</p>

<p>To the computer, there is no difference between a local variable and a method.</p>

<p>'==' => value equality
'===' => object equality</p>

<p>A computationally efficient language will compile down faster than</p>

<p><em>lazy evaluation</em>- the program will stop as soon as an if or elsif is satisfied. It won't execute any more statements.</p>

<p><a href="http://www.bartleby.com/103/6.html">Ode</a> by Arthur O'Shaughnessy</p>

<p>sqlite 3.4.12 is the first version to support multi-line inserts.</p>

<p>?? Are there languages with more syntactic sugar than ruby?
?? is it really not possible to write a program in SQL
Does <a href="http://www.simple-talk.com/blogs/2005/12/30/a-sql-game/">this</a> qualify as a program?
<a href="http://www.red-gate.com/downloads/CreateTheMazeGame.txt">SQL code:</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FIS Day2]]></title>
    <link href="http://ajonas.herokuapp.com/blog/2012/10/04/fis-day2/"/>
    <updated>2012-10-04T09:06:00-04:00</updated>
    <id>http://ajonas.herokuapp.com/blog/2012/10/04/fis-day2</id>
    <content type="html"><![CDATA[<p>summary of yesterday
plan for today</p>

<pre><code>-everyone should be cloning on their own
</code></pre>

<p>git clone
create new repo
 - git remove remote origin
 - git add remote origin</p>

<p>make changes push to our repo
submit pull request to flatiron repo</p>

<p>DB design:</p>

<p>student:</p>

<pre><code>id (pk, incrementer)
name
</code></pre>

<p>Quiz:</p>

<pre><code>id (pk, incrementer)
a question
b question
c question
d question
e queston
answer
</code></pre>

<p>Student/answers</p>

<pre><code>student id
quiz id
</code></pre>

<p>circles for pictures
css - mask transparent circle on top of it</p>

<p>write a site that degrades gracefully.
progressive enhancement- don't build for the worst browser rather than the worst</p>

<p>```css Smilies implementation</p>

<pre><code>/* in the css */
</code></pre>

<p>div smilies-5{</p>

<pre><code>    width: 300px;
    background: repeat-x url(smilies)
</code></pre>

<p>}
```</p>

<p>communicate on the web protocols
ssh
http
http
git://
ftp
aim://</p>

<p>https required more resources
// => piggy back the protocol that is being used. over course if this is local it will break on the file system</p>

<p>tr;dl => too long, don't read</p>

<p><em>Programmer of the day</em>
Edgar F. Codd: designed the relational database model</p>

<ul>
<li>relational model: has data with keys
one column has a primary key and all the other data works off of that primary</li>
<li><p>don't want to repeat data so you a second normal form is what you want over third normal form. <a href="http://en.wikipedia.org/wiki/Network_model">network model</a></p></li>
<li><p>Hierarchical model is the other kind, that no one uses</p></li>
</ul>


<p>"A relation is in second normal form if the relation depends on the key, the whole key, and nothing but the key, so help me Codd."<a href="http://www.dba-oracle.com/oracle_tips_codd_obit.htm">source</a></p>

<p>Beautiful code-
is in proportion to the complexity of the problem.</p>

<p>left joins, inner joins, etc.</p>

<p><code>sql Prefixes
//prefix. It would be ambiguous if you had the content column in
SELECT question.content multiple tables
FROM quiz, question, quiz_question
WHERE
</code>
<a href="http://www.sqlite.org/datatype3.html"><em>sql data types</em></a></p>

<p><strong><em>The fewer tables you query, the more efficient the query is</em></strong></p>

<p>difference between a where and a join</p>

<p>refernential integrity problem</p>

<p>```
student
id      name
1       Adam Jonas</p>

<p>quiz
id      name
1           First quiz</p>

<p>question
id  question_content                        correct_answer_id   quiz_id
1   "What's the color of the sky"       1                               1</p>

<p>answers
id      response_content        question_id
1       "blue"                                  1
2       "red"                                   1</p>

<p>student_answers
question_id     student_id      student_response_id  correct</p>

<pre><code>  1                         1                           2
</code></pre>

<p>```</p>

<p><em>Different SQL JOINs</em></p>

<p>Before we continue with examples, we will list the types of JOIN you can use, and the differences between them.</p>

<p>JOIN: Return rows when there is at least one match in both tables (this is also known as inner join)
LEFT JOIN: Return all rows from the left table, even if there are no matches in the right table
RIGHT JOIN: Return all rows from the right table, even if there are no matches in the left table
FULL JOIN: Return rows when there is a match in one of the tables</p>

<p><a href="http://stackoverflow.com/questions/1609637/is-it-possible-to-insert-multiple-rows-at-a-time-in-an-sqlite-database">multiple row inserts syntax</a></p>
]]></content>
  </entry>
  
</feed>
