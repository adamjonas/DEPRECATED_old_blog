<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: FIS | Hack hack hack...]]></title>
  <link href="http://www.adamjonas.com/blog/categories/fis/atom.xml" rel="self"/>
  <link href="http://www.adamjonas.com/"/>
  <updated>2012-12-11T10:37:03-05:00</updated>
  <id>http://www.adamjonas.com/</id>
  <author>
    <name><![CDATA[Adam Jonas]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[FIS Day36]]></title>
    <link href="http://www.adamjonas.com/blog/fis-day36/"/>
    <updated>2012-11-29T10:30:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/fis-day36</id>
    <content type="html"><![CDATA[<p><code>$ rake db:migrate:down VERSION=20080930121212</code></p>

<h3>Lessons Learned</h3>

<ul>
<li>We were having trouble adding styling to the vote button after a click, like on stackoverflow.

<ul>
<li>the javascript was located in the vote.js file and would only trigger after the second event

<ul>
<li><em>ANSWER:</em> The vote is only created after the vote button is clicked the first time, thus if we moved it to issue.js it would work fine.</li>
</ul>
</li>
</ul>
</li>
</ul>


<h3>Merging an upstream and updating the gem</h3>

<p>```
♕ git fetch upstream
♕ git merge upstream/master</p>

<h1>resolve your conflicts</h1>

<h1>bundle update gem --source git_user_name</h1>

<p>bundle update octokit --source ajonas04
```</p>

<p><code>javascript A Simple Click Event
$("a.upvote").click(function(){
  $(this).toggleClass("selected")
});
</code></p>

<ul>
<li><a href="http://www.w3resource.com/twitter-bootstrap/modals-tutorial.php">Twitter bootstrap modal tutorial</a></li>
</ul>


<p>Data-backdrop:</p>

<blockquote><p>Includes a modal-backdrop element. Alternatively, specify static for a backdrop which doesn't close the modal on click.</p></blockquote>

<h2>Andrew Koch VP of Product Management @ Lot18</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FIS Day34]]></title>
    <link href="http://www.adamjonas.com/blog/fis-day34/"/>
    <updated>2012-11-27T19:14:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/fis-day34</id>
    <content type="html"><![CDATA[<ul>
<li><p><a href="https://github.com/apneadiving/Google-Maps-for-Rails">Google Maps for Rails</a></p>

<ul>
<li><a href="http://www.youtube.com/watch?v=Yg5-33zedqM">screencast</a></li>
</ul>
</li>
<li><p><a href="http://jsonviewer.stack.hu/">json viewer</a></p></li>
</ul>


<p><code>ruby
Handhistory.find_each(:batch_size =&gt; 100000) do |hand|
  bb = hand.gametype.bigblind
  #etc
end
</code></p>

<ul>
<li>add indexes</li>
<li><p>database driver connects database to active record</p>

<ul>
<li>for example sqlite3 gem</li>
</ul>
</li>
<li><p><a href="http://www.highcharts.com/">high charts</a> -> javascript lib</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FIS Day31]]></title>
    <link href="http://www.adamjonas.com/blog/fis-day31/"/>
    <updated>2012-11-19T11:51:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/fis-day31</id>
    <content type="html"><![CDATA[<h3>AJAX</h3>

<p><code>&lt;div id="hidden" style="display:none"&gt;</code></p>

<p><code>format.js</code> -> if there is a new js file it will send that back to the form</p>

<p><code>$('#newlink).prepend('&lt;%= j render("form") %&gt;')</code></p>

<h3>Partials</h3>

<p><code>&lt;%= render @mixtape.songs %&gt;</code> this will render this collection of songs</p>

<p><code>&lt;%= render :collection =&gt; @mixtape.songs :partial =&gt; 'songs/song_li' %&gt;</code></p>

<h3>Action Mailer</h3>

<p><code>gem postmark-rails</code></p>

<p>https://github.com/wildbit/postmark-rails</p>

<p><code>rails d mailer mixtapes</code>
<code>rails g mailer mixtapes</code></p>

<p><code>ruby
@mail = MixtapeMailer.new_song(@mixtape.song, current_user)
@mail.deliver
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FIS Day30]]></title>
    <link href="http://www.adamjonas.com/blog/fis-day30/"/>
    <updated>2012-11-16T15:51:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/fis-day30</id>
    <content type="html"><![CDATA[<ul>
<li><p><a href="https://www.ruby-toolbox.com/categories/state_machines.html">state machine</a></p>

<ul>
<li>There's a <a href="http://railscasts.com/episodes/392-a-tour-of-state-machines">railscast</a> for that</li>
</ul>
</li>
<li><p>gifsockets</p>

<ul>
<li>real time communication

<ul>
<li>pushes text to client frame-by-frame</li>
</ul>
</li>
</ul>
</li>
</ul>


<p>```javascript</p>

<script type="text/javascript">

  var oldTime = new Date('<%= @issue.updated_at %>');

  setInterval(function() {
    var url = '<%= "/#{@issue.repo.owner_name}/#{@issue.repo.name}/issues/#{@issue.git_number}.json" %>'
    $.getJSON(url, {}, function(json){
      var newTime = new Date(Date.parse(json.updated_at));
      console.log(newTime)
      
      if (oldTime.valueOf() != newTime.valueOf()){
        console.log('diff')
        $('div#seal.seal.pull-right').fadeTo(3000, 1);
        $('div#seal.seal.pull-right').click(function(){
          location.reload();
        });
      }
    });
  }, 4000);

</script>


<p>```</p>

<ul>
<li><a href="http://bootswatch.com/">bootswatch</a></li>
<li><a href="http://subtlepatterns.com/">subtle patterns</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FIS Day29]]></title>
    <link href="http://www.adamjonas.com/blog/fis-day29/"/>
    <updated>2012-11-15T09:44:00-05:00</updated>
    <id>http://www.adamjonas.com/blog/fis-day29</id>
    <content type="html"><![CDATA[<ul>
<li><a href="http://jsonlint.com/">JSON link</a> a JSON parser</li>
</ul>


<h3>CanCan</h3>

<ul>
<li><a href="http://railscasts.com/episodes/192-authorization-with-cancan">Rails Cast</a></li>
<li><a href="https://github.com/ryanb/cancan">CanCan Source Code</a></li>
<li><a href="https://github.com/ryanb/cancan/wiki/Role-Based-Authorization">CanCan Wiki</a></li>
</ul>


<p>```ruby</p>

<h1>If a user.git_nickname == repo.owner_name -> the user is an owner.</h1>

<p>&lt;%= if can? :put, @issue %> #can only see the links if you authorized</p>

<h1>also need to add restrictions in the controller</h1>

<p>load_and_authorize_resource :nested => :repo</p>

<h1>this is funky</h1>

<p>```</p>

<p>```ruby ability.rb
class Ability
  include CanCan::Ability</p>

<p>  def initialize(user)
  user ||= User.new # guest user that comes to the site and doesn't have an acct yet</p>

<p>  if user.role? :admin</p>

<pre><code>  can :manage, :all #manage emcompasses every action
else 
#this is for every day users
  can :read, :all 
  can :create, Comment
  can :update, Comment do |comment|
    comment.try(:user) == user || user.role?(:moderator)
    #eqivalent to comment &amp;&amp; comment.user == user
  end
  if user.role?(:author)
    can :create, Article
    can :update, Article do |article|
      article.try(:user) == user
    end
  end
end
</code></pre>

<p>  end
end
```</p>

<p><code>ruby application_controller.rb
rescue_from CanCan::AccessDenied do |exception|
  flash[:error] = "Access denied."
  redirect_to root_url
end
</code></p>

<h3>Jquery lecture John</h3>

<p>```javascript
//hide
  $("#b1").click(function(){</p>

<pre><code>$("#p1").hide(1000);
</code></pre>

<p>  });</p>

<p>  //show
  $("#b2").click(function(){</p>

<pre><code>$("#p1").show(2000); //this makes it look like it is writing it out
//with a longer duration
</code></pre>

<p>  });</p>

<p>  //toggle
  $("#b3").click(function(){</p>

<pre><code>$("#p1").toggle(1000);
</code></pre>

<p>  });
```</p>

<ul>
<li>Fade Toggle, fade down, slide up, slide down, slide toggle</li>
</ul>


<p>```javascript
//animate
  $("#b19").click(function(){</p>

<pre><code>$(".box-animate").animate({height:"200px"},500);
$(".box-animate").animate({width:"200px"},500);
$(".box-animate").animate({height:"50px"},500);
$(".box-animate").animate({width:"50px"},500);
$(".box-animate").animate({width:"100px"},500);
$(".box-animate").animate({height:"100px"},500);
</code></pre>

<p>  });
```</p>

<p>```javascript Fancy Box Example
$(document).ready(function(){</p>

<p>  /<em> LETS USE FUNCTIONS TO MAKE AN INSTANCE OF INTERACTING WITH THE DOM REPEATABLE </em>/</p>

<p>  //first I want to fade out all the fruit pictures.
  $('#gallery img').fadeTo(100,0.2); //fadeTo(delay in miliseconds, opacity)</p>

<p>  //next I want to create a function that will only run when someone hovers over a fruit image.
  function mouseOn(){</p>

<pre><code>$(this).fadeTo(200,1); //the keyword 'this' refers to the element that is calling the function in our case it is the individual image that the user has their mouse over top of.
</code></pre>

<p>  }</p>

<p>  //mouse off funtion
  function mouseOff(){</p>

<pre><code>$(this).fadeTo(500,0.2);
</code></pre>

<p>  }</p>

<p>  //lastly I want to check if the user is hovering their mouse and call the apropriate function.
  $('#gallery img').hover(mouseOn,mouseOff);</p>

<p>  //add rel attribute to gallery links to add arrow functionality to fancybox plugin
  $('#gallery a').attr('rel','fruits');</p>

<p>  //apply fancybox plugin
  $('#gallery a').fancybox();</p>

<p>});
```</p>

<h3>When installing a plugin</h3>

<ul>
<li>does it have css?</li>
<li>load styleheet above my own, so that it won't over-ride my styling</li>
<li><p>put js sheet BELOW jquery plugin files</p></li>
<li><p>js fiddle -> minifies</p></li>
</ul>


<h3>Semi Colons</h3>

<ul>
<li>if, else and function def don't requiring a semi-colon</li>
<li>would never put a semi-colon after a curly brace except for object instantiation

<ul>
<li>`var myObject = { };</li>
</ul>
</li>
</ul>


<h3>Jquery Misc</h3>

<ul>
<li><a href="http://oscarotero.com/jquery/">Jquery cheat sheet</a></li>
</ul>


<p>Content delivery network -> a CDN</p>

<h3>Questions</h3>

<ul>
<li>Best practices from backend devs. What can we do to help you?

<ul>
<li>semantic use of naming things like IDs</li>
</ul>
</li>
<li>some of your favorite plugins? source for finding really cool plugins

<ul>
<li><a href="http://fancybox.net/">fancybox.net</a></li>
<li><a href="http://popcornjs.org/">popcorn.js</a></li>
<li><a href="http://www.jquery4u.com/">Jquery4u</a></li>
</ul>
</li>
<li>tests in javascript?

<ul>
<li>some mvc have tests built in like backbone.</li>
</ul>
</li>
<li>debugging in JS?

<ul>
<li>write code in short snippets, comment out sections</li>
<li>js lint -> shows errors and styles</li>
</ul>
</li>
</ul>


<h3>Color Stuff</h3>

<ul>
<li>Digital color meter

<ul>
<li>copy with cmd, shift c and you can paste is</li>
</ul>
</li>
<li><a href="https://kuler.adobe.com">color matching</a>

<ul>
<li>automatically color coordinates</li>
</ul>
</li>
</ul>


<p>```javascript
$.each
  data.results[0].from_user_name</p>

<p>.getJson //pretty important
```</p>

<p>```javascript Get JSON from Twitter example
$(document).ready(function(){</p>

<p>  var keywordInput = $('#keyword'),</p>

<pre><code>searchButton = $('#search'),
displayFeed = $('#feed'),
keyword = '',
content = '';
</code></pre>

<p>  //CLEAR
  keywordInput.focus(function(){</p>

<pre><code>displayFeed.empty(); //clears results
keywordInput.val(''); //clears input box when return to type new key words. 
</code></pre>

<p>  });//end clear</p>

<p>  //SEARCH &amp; DISPLAY
  searchButton.click(function(){</p>

<pre><code>keyword = keywordInput.val(); //retrieves keyword(s) typed.

$.getJSON('http://search.twitter.com/search.json?callback=?&amp;q='+keyword,function(data){ //display JSON feed using keyword(s) typed
//callback shifts to padded json, which is neccessary for this call
//data is an arbitrary variable that store the info

  console.log(data); //see if results came in...

  console.log(data.results[0].from_user); //if only there were a way to go into the array results and loop over each element/value and report back the data I want... What about loops?

  //loop -&gt; for each object result retrieve the data and display
  $.each(data.results, function(index, value){
  // tell each what we want to iterate over
    //data.results -&gt; is an array within the json
        var content = '&lt;p&gt;&lt;a href="http://twitter.com/'+value.from_user+'" target="_blank"&gt;&lt;img src="'+value.profile_image_url+'" alt="picture of '+value.from_user+'"&gt;&lt;/a&gt; &amp;quot;'+value.text+'&amp;quot; -'+value.from_user+' &lt;span class="date"&gt;['+value.created_at+']&lt;/span&gt;&lt;/p&gt;';

        displayFeed.append(content); //displays each result inside feed area.
        //opposite is prepend
        displayFeed.find('p').highlight(keyword); //highlight matching terms using highlight plugin.

  });//end each

});//end getJSON
</code></pre>

<p>  });//end Search</p>

<p>});//end document ready
```</p>

<ul>
<li>tutsplus-> learn jquery 30 days

<ul>
<li>30 min videos</li>
<li>free</li>
</ul>
</li>
<li><h2>backbone tutorial</h2></li>
<li><a href="http://it-ebooks.info/">http://it-ebooks.info/</a>

<ul>
<li><a href="http://www.manning.com/bibeault/">jquery in action</a></li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
</feed>
