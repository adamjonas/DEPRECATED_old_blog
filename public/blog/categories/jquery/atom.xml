<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: jquery | Documenting all this...]]></title>
  <link href="http://ajonas.herokuapp.com/blog/categories/jquery/atom.xml" rel="self"/>
  <link href="http://ajonas.herokuapp.com/"/>
  <updated>2012-10-11T22:30:54-04:00</updated>
  <id>http://ajonas.herokuapp.com/</id>
  <author>
    <name><![CDATA[Adam Jonas]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[JQuery]]></title>
    <link href="http://ajonas.herokuapp.com/blog/2012/08/07/jquery/"/>
    <updated>2012-08-07T11:35:00-04:00</updated>
    <id>http://ajonas.herokuapp.com/blog/2012/08/07/jquery</id>
    <content type="html"><![CDATA[<h3>The DOM:</h3>

<p>the web browser remembers the HTML tags, their attributes, and the order in which they appear in the fileâ€”this representation of the page is called the Document Object Model, or DOM for short. (js and jquery the missing manual, p127)</p>

<p><a href="http://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop">Repel</a> -
read, evaluate, print, loop</p>

<p>everything with remote true should have their submit button hijacked and exectured with ajax
jquery is to rails what ruby is js</p>

<p><code>html src
&lt;source src="URL"&gt;
</code></p>

<p><code>javascript [XHR](https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest?redirectlocale=en-US&amp;redirectslug=XMLHttpRequest)
//To create an instance of XMLHttpRequest, simply do this:
var req = new XMLHttpRequest();
</code>
xhr- used to be just xml</p>

<p>READ: <a href="http://www.adaptivepath.com/ideas/ajax-new-approach-web-applications">ajax jesse james garrett</a>
AJAX = Asynchronous JavaScript + XML
Ajax incorporates:
- standards-based presentation using XHTML and CSS;
- dynamic display and interaction using the Document Object Model;
- data interchange and manipulation using XML and XSLT;
- asynchronous data retrieval using XMLHttpRequest;
- and JavaScript binding everything together.</p>

<p>adaptive path
elements of user experience</p>

<p>js is all an event model</p>

<p>predictable DOM</p>

<p><a href="http://css-tricks.com/the-difference-between-id-and-class/">###Difference between li/#b and li.b?###</a></p>

<p>/# => ids --> IDs are unique
- Each element can have only one ID
- Each page can have only one element with that ID</p>

<p>dot b => class names --> are NOT unique
- You can use the same class on multiple elements.
- You can use multiple classes on the same element.</p>

<h3>Crazy Selector for our app</h3>

<p>```javascript
$("tr#error_&lt;%error.id %> input:submit[value='Noise']").click(function(){</p>

<pre><code>confirm("Are you sure?");
</code></pre>

<p>})
// input:submit[value='Noise']" are you kidding me?
```</p>

<h3>Solid Object Oriented Design</h3>

<p><a href="http://vimeo.com/12350535">Video of Sandi Metz</a></p>
]]></content>
  </entry>
  
</feed>
