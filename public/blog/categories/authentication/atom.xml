<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: authentication | Documenting all this...]]></title>
  <link href="http://ajonas.herokuapp.com/blog/categories/authentication/atom.xml" rel="self"/>
  <link href="http://ajonas.herokuapp.com/"/>
  <updated>2012-10-04T14:58:59-04:00</updated>
  <id>http://ajonas.herokuapp.com/</id>
  <author>
    <name><![CDATA[Adam Jonas]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[has_secured_password]]></title>
    <link href="http://ajonas.herokuapp.com/blog/2012/07/18/has-secured-password/"/>
    <updated>2012-07-18T15:23:00-04:00</updated>
    <id>http://ajonas.herokuapp.com/blog/2012/07/18/has-secured-password</id>
    <content type="html"><![CDATA[<p><a href="http://railscasts.com/episodes/270-authentication-in-rails-3-1">Rails Cast on Authentication Rails 3.1</a>
also want to check out <a href="http://railscasts.com/episodes/250-authentication-from-scratch">Rails cast on Authentication from Scratch</a></p>

<p>The user model rails allows you to call
<code>ruby has_secure_password
class User &lt; ActiveRecord::Base
  attr_accessible :email, :password, :password_confirmation
  has_secure_password
  validates_presence_of :password, :on =&gt; :create
end
</code>
You will likely want to add validation for the email address as well, but that's outside the scope of this...</p>

<p>The has_secure_password setting automatically adds validation for mismatched password between the password and password confirmation fields.</p>

<h3>Helper Methods: specifically :current_user</h3>

<p>See the <a href="/blog/2012/07/18/rails-helpers/">post on this</a>.</p>

<h3>SSL</h3>

<p>can also add options for ssl with the simple line in the ApplicationController:
<code>ruby
protect_from_forgery
force_ssl
</code>
This will only be reflected in production and test environments NOT development...</p>
]]></content>
  </entry>
  
</feed>
