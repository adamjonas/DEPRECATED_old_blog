<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: git | Documenting all this...]]></title>
  <link href="http://ajonas.herokuapp.com/blog/categories/git/atom.xml" rel="self"/>
  <link href="http://ajonas.herokuapp.com/"/>
  <updated>2012-10-03T15:04:20-04:00</updated>
  <id>http://ajonas.herokuapp.com/</id>
  <author>
    <name><![CDATA[Adam Jonas]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[FISDay0]]></title>
    <link href="http://ajonas.herokuapp.com/blog/2012/10/02/fisday0/"/>
    <updated>2012-10-02T09:25:00-04:00</updated>
    <id>http://ajonas.herokuapp.com/blog/2012/10/02/fisday0</id>
    <content type="html"><![CDATA[<p><em>Why are we here?</em></p>

<p>-To fall in love with code</p>

<p>-If you give 100% you will change.</p>

<p><em>Programmer(s) of the day</em></p>

<ul>
<li><p><a href="http://www.sdsc.edu/ScienceWomen/lovelace.html">Ada Lovelace</a></p></li>
<li><p><a href="http://en.wikipedia.org/wiki/Charles_Babbage">Charles Babbage and the difference machine</a></p></li>
</ul>


<p><em>CSS Selectors</em>
```</p>

<h1>elements, #links{</h1>

<p> padding: 25px 0 15px 0;
}</p>

<h1>elements h2{</h1>

<pre><code>font-size: 2em;
</code></pre>

<p>}
```</p>

<h3>Git</h3>

<p>```</p>

<h1>git remote add <remote name> <link></h1>

<p>♕ git remote add group git@github.com:ajonas04/etcetc.com.git
```</p>

<p><code>
git fetch
git co #not ever changing the state of any branch
git pull
git branch -a #shows all local branches
git branch #shows all the remotes
</code>
can get pull requests from forks as well as the head repo</p>

<p>always want to deal with potential conflicts in the feature branch rather than on master</p>

<p><em>rebase</em> take these commits from master and put them in the right place of x feature branch</p>

<p><code>
git rebase master
git co master
git merge add-profile-rexfeng --no-ff #=&gt; merge made by recursive strategy
git push
</code></p>

<p>If it's forked:
<code>
git rebase upstream/master
</code></p>

<p>Git rainbow is not good.</p>

<p>squashing commits</p>

<p>go into my fork as a remote
<code>
git remote add ajonas04 git@github.com:ajonas04/students.flatironschool.com.git
git fetch ajonas04
git co feature-push
git rebase origin/master #resolve
git rebase --continue
</code></p>

<p><code>
git reset --hard HEAD #=&gt; reset to the state of the repo at the last commit in the repo
git branch -D add_profile_page
</code></p>

<p>interactive rebase
```
git rebase master -i</p>

<h1>provide a file that shows all the commits in it</h1>

<p>```</p>

<p>no fastforward versus fastforward
-maintains the fact that you were once on your own branch</p>

<p>recursion and fast forward
checkout the branch</p>

<p><code>
git add . #will ADD all files that haven't been previously committed as well as change modified files
git commit -am 'message' #will change files, but not add new ones
git commit -m 'message' #will just add a message
</code></p>

<p>Workflow to pull down the most updated verison:
```
♕ git fetch upstream
♕ git rebase upstream/master
First, rewinding head to replay your work on top of it...
error: The following untracked working tree files would be overwritten by checkout:</p>

<pre><code>.DS_Store
images/.DS_Store
</code></pre>

<p>Please move or remove them before you can switch branches.
Aborting
could not detach HEAD
[19:02:04] (master) students.flatironschool.com
♕ rm .DS_Store
♕ rm images/.DS_Store
♕ git rebase upstream/master
♕ git add aviflombaum.html
♕ git rebase --continue
♕ subl .
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git initialization for a new repo]]></title>
    <link href="http://ajonas.herokuapp.com/blog/2012/07/21/git-initialization-for-a-new-repo/"/>
    <updated>2012-07-21T18:17:00-04:00</updated>
    <id>http://ajonas.herokuapp.com/blog/2012/07/21/git-initialization-for-a-new-repo</id>
    <content type="html"><![CDATA[<p>I know this is basic. I keep getting the steps wrong though. So I'm putting it here...</p>

<p><code>
  git init
  touch README
  git add README
  git commit -m 'first commit'
  git remote add origin https://github.com/ajonas04/REPO_NAME.git
  git push -u origin master
</code></p>

<p>I also ran into this during the process today:
<code>
♕ git remote add origin https://github.com/ajonas04/REPO_NAME.git
fatal: remote origin already exists.
♕ git remote rm origin
♕ git remote add origin https://github.com/ajonas04/REPO_NAME.git
</code></p>

<p>```</p>

<h1>git remote add <remote name> <link></h1>

<p>♕ git remote add group git@github.com:ajonas04/fis.com.git
```
I guess I needed to remove the remote origin. I can safely say, I don't understand what's going on here.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GitHub]]></title>
    <link href="http://ajonas.herokuapp.com/blog/2012/07/09/github/"/>
    <updated>2012-07-09T14:25:00-04:00</updated>
    <id>http://ajonas.herokuapp.com/blog/2012/07/09/github</id>
    <content type="html"><![CDATA[<p><a href="http://rogerdudler.github.com/git-guide/">Cheat sheet</a>
<a href="http://try.github.com>%20to%20practice">Practice site</a>
<a href="http://betterexplained.com/articles/aha-moments-when-learning-git/">Git better explained</a>
<a href="http://www.youtube.com/watch?v=ZDR433b0HJY">Scott Chacon of github</a></p>

<p><em>Git fetch versus git pull</em>
 - In the simplest terms, git pull does a git fetch followed by a git merge.
 - You can do a git fetch at any time to update your local copy of a remote branch. This operation never changes any of your own branches and is safe to do without changing your working copy. I have even heard of people running git fetch periodically in a cron job in the background (although I wouldn't recommend doing this).
 - A git pull is what you would do to bring your repository up to date with a remote repository.</p>

<p><a href="http://longair.net/blog/2009/04/16/git-fetch-and-merge/">Fetch and merge, don't pull</a></p>

<p><em>Misc</em>
I had not added my <strong><em>SSH key</em></strong> for the new Mac Air so that was preventing me from pushing. It gave me no issue with pulling or cloning, only pushing. The SSH was accessed by typing:
<code>
cat .ssh/id_rsa.pub
</code>
After adding it to <a href="https://github.com/settings/ssh">https://github.com/settings/ssh</a> I had no problems...</p>

<p>Pushed a bunch of branches with:
<code>
git push origin &lt;name of the branch&gt;
</code>
I could check what was in the repo and what had been pushed to the remote using the command: git branch with the all flag...
<code>
git branch -a
</code></p>

<p>First thing in the morning you do is:
<code>ruby
git fetch
</code>
This pulls the latest version without any merges.</p>

<p>creating a branch and pushing it to master....
<code>
♕ git co -b authentication
♕ git add .
♕ git commit -m 'message'
♕ git push origin authentication
♕ git co master
♕ git merge authentication --no-ff
♕ git push
</code></p>

<p><code>
git pull --rebase #=&gt; if the remote has merges, rewind and then move back forward
git reset --hard HEAD #=&gt; go to the last checkout (HEAD of the branch) without the warnings (hard)
</code></p>
]]></content>
  </entry>
  
</feed>
