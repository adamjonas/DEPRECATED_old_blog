<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: conferences | Hack hack hack...]]></title>
  <link href="http://adamjonas.github.com/adamjonas/blog/categories/conferences/atom.xml" rel="self"/>
  <link href="http://adamjonas.github.com/adamjonas/"/>
  <updated>2015-11-18T15:15:20-05:00</updated>
  <id>http://adamjonas.github.com/adamjonas/</id>
  <author>
    <name><![CDATA[Adam Jonas]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[RubyConf 2015]]></title>
    <link href="http://adamjonas.github.com/adamjonas/blog/rubyconf-2015/"/>
    <updated>2015-11-16T10:27:00-05:00</updated>
    <id>http://adamjonas.github.com/adamjonas/blog/rubyconf-2015</id>
    <content type="html"><![CDATA[<p><strong>Code, Culture and the Pursuit of Happiness</strong>
@KinseyAnnDurham
kubmo - build and teach curriculum
@shaft thoughts on diverity, part 2</p>

<p><strong>Changing the Unchangeable: The Hows and Whys of Immutable Data Structures</strong>
brad Urani
@bradurani
principles of functional programming - scala - coursara
string.freeze for performance
array.freeze is immutable but isn't persistent
persistnt data structures using the gem hamster
when i edit hamster list, the original list stays the same
git is a persistent data structure
persisted lists are thread safe and lazy</p>

<p><code>.lazy</code> keyword then you could do <code>.take</code></p>

<p>Jean Nikals L'organge -- understanding persistent vectors
<code>hypirion.com</code></p>

<p>hot reload</p>

<p>rich hickey - invented closure, datomic, persistent vectors
talk called "the value of values"
place oriented programming</p>

<p>elm - purely functional language
compiles to JS
out of the box time travelable</p>

<p><strong>Manage your energy</strong>
Joe Mastey
25% of American salary works 60 hr weeks
40% of Americans works 50 hr weeks
13% of workers are engaged
24% are actively disengaged
READ Carol Dweck</p>

<p>system call: a program can do two things:
  - it can either run something in memory or a task
  - OR...
  strace is just going over all the entries in the path and jab onto the
  end what the user typed until it finds one that's an executable and
  runs it.</p>

<p>The 3 'path' vars:
- <code>$PATH</code>
- <code>$GEM_PATH</code>
- <code>$RUBYLIB</code></p>

<p>Recommend <code>chruby</code></p>

<p><code>How to onboard junior devs</code>
- 7 laws of teaching</p>

<p><strong>How does bundler work by Andre Arko</strong>
- dependency graph resolution
- <code>bundle binstubs rspec-core</code> for no more bundle exec
- <code>bin/rspec</code>
- gem stash</p>
]]></content>
  </entry>
  
</feed>
